apt-get install cmake libssl-dev libsasl2-dev
一.先编译好mongodb-c-driver
1.cd mongo-c-driver-1.13.0
 mkdir cmake-build
 cd cmake-build
cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=./result/ .. 
二编译mongodb-cxx-driver
2. cd cmake-build
 cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./result/ -DCMAKE_PREFIX_PATH=/home/zhangyang/code/mongodb-c-driver/mongo-c-driver-master/cmake-build/result/ -DBUILD_SHARED_LIBS=OFF -DBSONCXX_POLY_USE_BOOST=1 -DBOOST_ROOT=/home/zhangyang/code/boost_1_68_0 ..
 make && make install

Choose a C++17 polyfill
The mongocxx driver uses the C++17 features std::optional and std::string_view. To compile the mongocxx driver for pre-C++17, you must choose one of the following implementations for these features:

MNMLSTC/core (default for non-Windows platforms) Select with -DBSONCXX_POLY_USE_MNMLSTC=1. NOTE: This option vendors a header-only installation of MNMLSTC/core into the bsoncxx library installation and will therefore download MLNMLSTC from GitHub during the build process. If you already have an available version of MNMLSTC on your system, you can avoid the download step by using -DBSONCXX_POLY_USE_SYSTEM_MNMLSTC.

Boost (default for Windows platforms) Select with -DBSONCXX_POLY_USE_BOOST=1. This is currently the only option if you are using MSVC.

std::experimental Select with -DBSONCXX_POLY_USE_STD_EXPERIMENTAL=1. If your toolchain’s standard library provides optional and string_view in the namespace std::experimental, you can use this option. Be aware that your standard library’s std::experimental implementation may change over time, breaking binary compatibility in unexpected ways. Note that this polyfill is not recommended and is unsupported.

如果是第一种把编译后的bsoncxx/third_part MNMLSTC/core 这部分拷贝到bsoncxx/third_party/mnmlstc/core/

Most users should be fine sticking with the default. However, if you have an existing application which makes heavy use of one of the available libraries, you may prefer to build the mongocxx driver against the same library.

 3 使用
 c++ --std=c++11 test.cpp -o test \
    -DMONGOCXX_STATIC -DBSONCXX_STATIC -DMONGOC_STATIC -DBSON_STATIC \
    -I/usr/local/include/libmongoc-1.0 \
    -I/usr/local/include/libbson-1.0 \
    -I/usr/local/include/mongocxx/v_noabi \
    -I/usr/local/include/bsoncxx/v_noabi \
    -L/usr/local/lib -lmongocxx-static -lbsoncxx-static
    -lmongoc-static-1.0 -lsasl2 -lssl -lcrypto -lbson-static-1.0 -lm -lpthread



windows 编译

set PATH=%PATH%;%ProgramFiles(x86)%\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin

mkdir cmake-build
cd cmake-build
cmake "-DCMAKE_INSTALL_PREFIX=./result/" "-DCMAKE_PREFIX_PATH=./result/" ..
msbuild.exe /p:Configuration=RelWithDebInfo ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj

+
cd cmake-build
cmake  -DCMAKE_INSTALL_PREFIX=D:\mycode\mongodb-c-driver\mongo-c-driver-master\cmake-build\result -DCMAKE_PREFIX_PATH=D:\mycode\mongodb-c-driver\mongo-c-driver-master\cmake-build\result -DBUILD_SHARED_LIBS=OFF -DBSONCXX_POLY_USE_BOOST=1 -DBOOST_ROOT=D:\mycode\boost_1_68_0\boost_1_68_0 ..

cmake   -DCMAKE_INSTALL_PREFIX=D:\mycode\mongo-cxx-driver-master\cmake-build\result -DCMAKE_PREFIX_PATH=D:\mycode\mongodb-c-driver\mongo-c-driver-master\cmake-build\result -DBUILD_SHARED_LIBS=OFF -DBSONCXX_POLY_USE_BOOST=1 -DBOOST_ROOT=D:\mycode\boost_1_68_0\boost_1_68_0 -D_ENABLE_EXTENDED_ALIGNED_STORAGE ..


msbuild.exe /p:Configuration=RelWithDebInfo ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj