// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemMsg.proto

#include "SystemMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace SystemMsg {
class EmptyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyRequest> _instance;
} _EmptyRequest_default_instance_;
class NormalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NormalResponse> _instance;
} _NormalResponse_default_instance_;
class HeartbeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest> _instance;
} _HeartbeatRequest_default_instance_;
class HeartbeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse> _instance;
} _HeartbeatResponse_default_instance_;
class RPCRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCRequest> _instance;
} _RPCRequest_default_instance_;
class RPCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCResponse> _instance;
} _RPCResponse_default_instance_;
class SessionSilentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionSilentRequest> _instance;
} _SessionSilentRequest_default_instance_;
class SessionSilentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionSilentResponse> _instance;
} _SessionSilentResponse_default_instance_;
class SessionCloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionCloseRequest> _instance;
} _SessionCloseRequest_default_instance_;
class SessionCloseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionCloseResponse> _instance;
} _SessionCloseResponse_default_instance_;
class SiteRegisterBusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SiteRegisterBusRequest> _instance;
} _SiteRegisterBusRequest_default_instance_;
class SiteRegisterBusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SiteRegisterBusResponse> _instance;
} _SiteRegisterBusResponse_default_instance_;
class SiteToBusTransmitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SiteToBusTransmitRequest> _instance;
} _SiteToBusTransmitRequest_default_instance_;
class SiteToBusTransmitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SiteToBusTransmitResponse> _instance;
} _SiteToBusTransmitResponse_default_instance_;
class BusToSiteTransmitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BusToSiteTransmitRequest> _instance;
} _BusToSiteTransmitRequest_default_instance_;
class BusToSiteTransmitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BusToSiteTransmitResponse> _instance;
} _BusToSiteTransmitResponse_default_instance_;
class StreamOverCtrlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamOverCtrlRequest> _instance;
} _StreamOverCtrlRequest_default_instance_;
class StreamOverCtrlResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamOverCtrlResponse> _instance;
} _StreamOverCtrlResponse_default_instance_;
class ConnectFailedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectFailedRequest> _instance;
} _ConnectFailedRequest_default_instance_;
class ConnectFailedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectFailedResponse> _instance;
} _ConnectFailedResponse_default_instance_;
class MQTransmitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MQTransmitRequest> _instance;
} _MQTransmitRequest_default_instance_;
class MQTransmitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MQTransmitResponse> _instance;
} _MQTransmitResponse_default_instance_;
class ShutDownSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutDownSessionRequest> _instance;
} _ShutDownSessionRequest_default_instance_;
class ShutDownSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShutDownSessionResponse> _instance;
} _ShutDownSessionResponse_default_instance_;
class SessionOpenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionOpenRequest> _instance;
} _SessionOpenRequest_default_instance_;
class SessionOpenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionOpenResponse> _instance;
} _SessionOpenResponse_default_instance_;
}  // namespace SystemMsg
static void InitDefaultsEmptyRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_EmptyRequest_default_instance_;
    new (ptr) ::SystemMsg::EmptyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::EmptyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsNormalResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_NormalResponse_default_instance_;
    new (ptr) ::SystemMsg::NormalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::NormalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NormalResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNormalResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsHeartbeatRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_HeartbeatRequest_default_instance_;
    new (ptr) ::SystemMsg::HeartbeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::HeartbeatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsHeartbeatResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_HeartbeatResponse_default_instance_;
    new (ptr) ::SystemMsg::HeartbeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::HeartbeatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsRPCRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_RPCRequest_default_instance_;
    new (ptr) ::SystemMsg::RPCRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::RPCRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RPCRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRPCRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsRPCResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_RPCResponse_default_instance_;
    new (ptr) ::SystemMsg::RPCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::RPCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RPCResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRPCResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionSilentRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionSilentRequest_default_instance_;
    new (ptr) ::SystemMsg::SessionSilentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionSilentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionSilentRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionSilentRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionSilentResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionSilentResponse_default_instance_;
    new (ptr) ::SystemMsg::SessionSilentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionSilentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionSilentResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionSilentResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionCloseRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionCloseRequest_default_instance_;
    new (ptr) ::SystemMsg::SessionCloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionCloseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionCloseRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionCloseRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionCloseResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionCloseResponse_default_instance_;
    new (ptr) ::SystemMsg::SessionCloseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionCloseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionCloseResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionCloseResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsSiteRegisterBusRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SiteRegisterBusRequest_default_instance_;
    new (ptr) ::SystemMsg::SiteRegisterBusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SiteRegisterBusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SiteRegisterBusRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSiteRegisterBusRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsSiteRegisterBusResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SiteRegisterBusResponse_default_instance_;
    new (ptr) ::SystemMsg::SiteRegisterBusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SiteRegisterBusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SiteRegisterBusResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSiteRegisterBusResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsSiteToBusTransmitRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SiteToBusTransmitRequest_default_instance_;
    new (ptr) ::SystemMsg::SiteToBusTransmitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SiteToBusTransmitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SiteToBusTransmitRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSiteToBusTransmitRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsSiteToBusTransmitResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SiteToBusTransmitResponse_default_instance_;
    new (ptr) ::SystemMsg::SiteToBusTransmitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SiteToBusTransmitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SiteToBusTransmitResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSiteToBusTransmitResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsBusToSiteTransmitRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_BusToSiteTransmitRequest_default_instance_;
    new (ptr) ::SystemMsg::BusToSiteTransmitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::BusToSiteTransmitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BusToSiteTransmitRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBusToSiteTransmitRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsBusToSiteTransmitResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_BusToSiteTransmitResponse_default_instance_;
    new (ptr) ::SystemMsg::BusToSiteTransmitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::BusToSiteTransmitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BusToSiteTransmitResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBusToSiteTransmitResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsStreamOverCtrlRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_StreamOverCtrlRequest_default_instance_;
    new (ptr) ::SystemMsg::StreamOverCtrlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::StreamOverCtrlRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamOverCtrlRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamOverCtrlRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsStreamOverCtrlResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_StreamOverCtrlResponse_default_instance_;
    new (ptr) ::SystemMsg::StreamOverCtrlResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::StreamOverCtrlResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamOverCtrlResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamOverCtrlResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsConnectFailedRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_ConnectFailedRequest_default_instance_;
    new (ptr) ::SystemMsg::ConnectFailedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::ConnectFailedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectFailedRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectFailedRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsConnectFailedResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_ConnectFailedResponse_default_instance_;
    new (ptr) ::SystemMsg::ConnectFailedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::ConnectFailedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectFailedResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectFailedResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsMQTransmitRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_MQTransmitRequest_default_instance_;
    new (ptr) ::SystemMsg::MQTransmitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::MQTransmitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MQTransmitRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMQTransmitRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsMQTransmitResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_MQTransmitResponse_default_instance_;
    new (ptr) ::SystemMsg::MQTransmitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::MQTransmitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MQTransmitResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMQTransmitResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsShutDownSessionRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_ShutDownSessionRequest_default_instance_;
    new (ptr) ::SystemMsg::ShutDownSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::ShutDownSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShutDownSessionRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutDownSessionRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsShutDownSessionResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_ShutDownSessionResponse_default_instance_;
    new (ptr) ::SystemMsg::ShutDownSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::ShutDownSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShutDownSessionResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShutDownSessionResponse_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionOpenRequest_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionOpenRequest_default_instance_;
    new (ptr) ::SystemMsg::SessionOpenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionOpenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionOpenRequest_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionOpenRequest_SystemMsg_2eproto}, {}};

static void InitDefaultsSessionOpenResponse_SystemMsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SystemMsg::_SessionOpenResponse_default_instance_;
    new (ptr) ::SystemMsg::SessionOpenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SystemMsg::SessionOpenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionOpenResponse_SystemMsg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionOpenResponse_SystemMsg_2eproto}, {}};

void InitDefaults_SystemMsg_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NormalResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RPCRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RPCResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionSilentRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionSilentResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionCloseRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionCloseResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SiteRegisterBusRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SiteRegisterBusResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SiteToBusTransmitRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SiteToBusTransmitResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BusToSiteTransmitRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BusToSiteTransmitResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamOverCtrlRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamOverCtrlResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectFailedRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectFailedResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MQTransmitRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MQTransmitResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutDownSessionRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShutDownSessionResponse_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionOpenRequest_SystemMsg_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionOpenResponse_SystemMsg_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_SystemMsg_2eproto[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_SystemMsg_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_SystemMsg_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_SystemMsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::SystemMsg::EmptyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::EmptyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::NormalResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::NormalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::HeartbeatRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::HeartbeatResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::HeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::HeartbeatResponse, interval_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCRequest, jsonstring_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::RPCResponse, jsonstring_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionSilentRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionSilentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionSilentRequest, silentinterval_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionSilentResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionSilentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionCloseRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionCloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionCloseRequest, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionCloseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionCloseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusRequest, sendsitename_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteRegisterBusResponse, siteid_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, sendsitename_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, recvsitename_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, sendsiteid_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, recvsiteid_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, transmitmode_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, transmitcmd_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, transmittype_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitRequest, transmitdata_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SiteToBusTransmitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, sendsitename_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, recvsitename_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, sendsiteid_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, recvsiteid_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, transmitmode_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, transmitcmd_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, transmittype_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitRequest, transmitdata_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::BusToSiteTransmitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::StreamOverCtrlRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::StreamOverCtrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::StreamOverCtrlRequest, ctrlruleid_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::StreamOverCtrlResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::StreamOverCtrlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ConnectFailedRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ConnectFailedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ConnectFailedRequest, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ConnectFailedResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ConnectFailedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, sendroutkey_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, recvroutkey_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, transmitmode_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, msgcmd_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, msgtype_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, msgresponseresult_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitRequest, msgdata_),
  0,
  1,
  3,
  4,
  5,
  6,
  2,
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::MQTransmitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ShutDownSessionRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ShutDownSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ShutDownSessionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::ShutDownSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionOpenRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionOpenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionOpenResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::SystemMsg::SessionOpenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::SystemMsg::EmptyRequest)},
  { 5, 10, sizeof(::SystemMsg::NormalResponse)},
  { 10, 15, sizeof(::SystemMsg::HeartbeatRequest)},
  { 15, 21, sizeof(::SystemMsg::HeartbeatResponse)},
  { 22, 28, sizeof(::SystemMsg::RPCRequest)},
  { 29, 35, sizeof(::SystemMsg::RPCResponse)},
  { 36, 42, sizeof(::SystemMsg::SessionSilentRequest)},
  { 43, 48, sizeof(::SystemMsg::SessionSilentResponse)},
  { 48, 54, sizeof(::SystemMsg::SessionCloseRequest)},
  { 55, 60, sizeof(::SystemMsg::SessionCloseResponse)},
  { 60, 66, sizeof(::SystemMsg::SiteRegisterBusRequest)},
  { 67, 73, sizeof(::SystemMsg::SiteRegisterBusResponse)},
  { 74, 87, sizeof(::SystemMsg::SiteToBusTransmitRequest)},
  { 95, 100, sizeof(::SystemMsg::SiteToBusTransmitResponse)},
  { 100, 113, sizeof(::SystemMsg::BusToSiteTransmitRequest)},
  { 121, 126, sizeof(::SystemMsg::BusToSiteTransmitResponse)},
  { 126, 132, sizeof(::SystemMsg::StreamOverCtrlRequest)},
  { 133, 138, sizeof(::SystemMsg::StreamOverCtrlResponse)},
  { 138, 144, sizeof(::SystemMsg::ConnectFailedRequest)},
  { 145, 150, sizeof(::SystemMsg::ConnectFailedResponse)},
  { 150, 162, sizeof(::SystemMsg::MQTransmitRequest)},
  { 169, 174, sizeof(::SystemMsg::MQTransmitResponse)},
  { 174, 179, sizeof(::SystemMsg::ShutDownSessionRequest)},
  { 179, 184, sizeof(::SystemMsg::ShutDownSessionResponse)},
  { 184, 189, sizeof(::SystemMsg::SessionOpenRequest)},
  { 189, 194, sizeof(::SystemMsg::SessionOpenResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_EmptyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_NormalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_HeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_HeartbeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_RPCRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_RPCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionSilentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionSilentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionCloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionCloseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SiteRegisterBusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SiteRegisterBusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SiteToBusTransmitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SiteToBusTransmitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_BusToSiteTransmitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_BusToSiteTransmitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_StreamOverCtrlRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_StreamOverCtrlResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_ConnectFailedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_ConnectFailedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_MQTransmitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_MQTransmitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_ShutDownSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_ShutDownSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionOpenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SystemMsg::_SessionOpenResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_SystemMsg_2eproto = {
  {}, AddDescriptors_SystemMsg_2eproto, "SystemMsg.proto", schemas,
  file_default_instances, TableStruct_SystemMsg_2eproto::offsets,
  file_level_metadata_SystemMsg_2eproto, 26, file_level_enum_descriptors_SystemMsg_2eproto, file_level_service_descriptors_SystemMsg_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_SystemMsg_2eproto = {
  false, InitDefaults_SystemMsg_2eproto, 
  "\n\017SystemMsg.proto\022\tSystemMsg\"\016\n\014EmptyReq"
  "uest\"\020\n\016NormalResponse\"\022\n\020HeartbeatReque"
  "st\"%\n\021HeartbeatResponse\022\020\n\010interval\030\001 \001("
  "\005\" \n\nRPCRequest\022\022\n\njsonString\030\001 \001(\014\"!\n\013R"
  "PCResponse\022\022\n\njsonString\030\001 \001(\014\".\n\024Sessio"
  "nSilentRequest\022\026\n\016silentInterval\030\001 \001(\005\"\027"
  "\n\025SessionSilentResponse\"&\n\023SessionCloseR"
  "equest\022\017\n\007errCode\030\001 \001(\005\"\026\n\024SessionCloseR"
  "esponse\".\n\026SiteRegisterBusRequest\022\024\n\014sen"
  "dSiteName\030\001 \001(\014\")\n\027SiteRegisterBusRespon"
  "se\022\016\n\006siteId\030\001 \001(\005\"\305\001\n\030SiteToBusTransmit"
  "Request\022\024\n\014sendSiteName\030\001 \001(\014\022\024\n\014recvSit"
  "eName\030\002 \001(\014\022\022\n\nsendSiteId\030\003 \001(\005\022\022\n\nrecvS"
  "iteId\030\004 \001(\005\022\024\n\014transmitMode\030\005 \001(\005\022\023\n\013tra"
  "nsmitCmd\030\006 \001(\005\022\024\n\014transmitType\030\007 \001(\005\022\024\n\014"
  "transmitData\030\010 \003(\005\"\033\n\031SiteToBusTransmitR"
  "esponse\"\305\001\n\030BusToSiteTransmitRequest\022\024\n\014"
  "sendSiteName\030\001 \001(\014\022\024\n\014recvSiteName\030\002 \001(\014"
  "\022\022\n\nsendSiteId\030\003 \001(\005\022\022\n\nrecvSiteId\030\004 \001(\005"
  "\022\024\n\014transmitMode\030\005 \001(\005\022\023\n\013transmitCmd\030\006 "
  "\001(\005\022\024\n\014transmitType\030\007 \001(\005\022\024\n\014transmitDat"
  "a\030\010 \003(\005\"\033\n\031BusToSiteTransmitResponse\"l\n\025"
  "StreamOverCtrlRequest\022\022\n\nctrlRuleId\030\001 \001("
  "\005\"\?\n\tSpeedCtrl\022\030\n\024send_speed_over_ctrl\020\000"
  "\022\030\n\024seq_repeat_over_ctrl\020\001\"\030\n\026StreamOver"
  "CtrlResponse\"\'\n\024ConnectFailedRequest\022\017\n\007"
  "errCode\030\001 \001(\005\"\027\n\025ConnectFailedResponse\"\243"
  "\001\n\021MQTransmitRequest\022\023\n\013sendRoutkey\030\001 \001("
  "\014\022\023\n\013recvRoutKey\030\002 \001(\014\022\024\n\014transmitMode\030\003"
  " \001(\005\022\016\n\006msgCmd\030\004 \001(\005\022\017\n\007msgType\030\005 \001(\005\022\034\n"
  "\021msgResponseResult\030\006 \001(\005:\0010\022\017\n\007msgData\030\007"
  " \001(\014\"\024\n\022MQTransmitResponse\"\030\n\026ShutDownSe"
  "ssionRequest\"\031\n\027ShutDownSessionResponse\""
  "\024\n\022SessionOpenRequest\"\025\n\023SessionOpenResp"
  "onse"
,
  "SystemMsg.proto", &assign_descriptors_table_SystemMsg_2eproto, 1364,
};

void AddDescriptors_SystemMsg_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_SystemMsg_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_SystemMsg_2eproto = []() { AddDescriptors_SystemMsg_2eproto(); return true; }();
namespace SystemMsg {
const ::google::protobuf::EnumDescriptor* StreamOverCtrlRequest_SpeedCtrl_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_SystemMsg_2eproto);
  return file_level_enum_descriptors_SystemMsg_2eproto[0];
}
bool StreamOverCtrlRequest_SpeedCtrl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StreamOverCtrlRequest_SpeedCtrl StreamOverCtrlRequest::send_speed_over_ctrl;
const StreamOverCtrlRequest_SpeedCtrl StreamOverCtrlRequest::seq_repeat_over_ctrl;
const StreamOverCtrlRequest_SpeedCtrl StreamOverCtrlRequest::SpeedCtrl_MIN;
const StreamOverCtrlRequest_SpeedCtrl StreamOverCtrlRequest::SpeedCtrl_MAX;
const int StreamOverCtrlRequest::SpeedCtrl_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void EmptyRequest::InitAsDefaultInstance() {
}
class EmptyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyRequest::EmptyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.EmptyRequest)
}
EmptyRequest::EmptyRequest(const EmptyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.EmptyRequest)
}

void EmptyRequest::SharedCtor() {
}

EmptyRequest::~EmptyRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.EmptyRequest)
  SharedDtor();
}

void EmptyRequest::SharedDtor() {
}

void EmptyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyRequest& EmptyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void EmptyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.EmptyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.EmptyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.EmptyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.EmptyRequest)
}

::google::protobuf::uint8* EmptyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.EmptyRequest)
  return target;
}

size_t EmptyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.EmptyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.EmptyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.EmptyRequest)
    MergeFrom(*source);
  }
}

void EmptyRequest::MergeFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyRequest::CopyFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyRequest::IsInitialized() const {
  return true;
}

void EmptyRequest::Swap(EmptyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyRequest::InternalSwap(EmptyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata EmptyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NormalResponse::InitAsDefaultInstance() {
}
class NormalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NormalResponse::NormalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.NormalResponse)
}
NormalResponse::NormalResponse(const NormalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.NormalResponse)
}

void NormalResponse::SharedCtor() {
}

NormalResponse::~NormalResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.NormalResponse)
  SharedDtor();
}

void NormalResponse::SharedDtor() {
}

void NormalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NormalResponse& NormalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NormalResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void NormalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.NormalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NormalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NormalResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NormalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.NormalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.NormalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.NormalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NormalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.NormalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.NormalResponse)
}

::google::protobuf::uint8* NormalResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.NormalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.NormalResponse)
  return target;
}

size_t NormalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.NormalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NormalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.NormalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NormalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<NormalResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.NormalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.NormalResponse)
    MergeFrom(*source);
  }
}

void NormalResponse::MergeFrom(const NormalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.NormalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NormalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.NormalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NormalResponse::CopyFrom(const NormalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.NormalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NormalResponse::IsInitialized() const {
  return true;
}

void NormalResponse::Swap(NormalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NormalResponse::InternalSwap(NormalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata NormalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatRequest::InitAsDefaultInstance() {
}
class HeartbeatRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
}

void HeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartbeatRequest& HeartbeatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HeartbeatRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HeartbeatRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HeartbeatRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.HeartbeatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.HeartbeatRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.HeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.HeartbeatRequest)
  return target;
}

size_t HeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.HeartbeatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.HeartbeatRequest)
    MergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {
  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatResponse::InitAsDefaultInstance() {
}
class HeartbeatResponse::HasBitSetters {
 public:
  static void set_has_interval(HeartbeatResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatResponse::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.HeartbeatResponse)
}
HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interval_ = from.interval_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
  interval_ = 0;
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
}

void HeartbeatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartbeatResponse& HeartbeatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HeartbeatResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interval_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HeartbeatResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HeartbeatResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 interval = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_interval(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.HeartbeatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 interval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_interval(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.HeartbeatResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 interval = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.HeartbeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 interval = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.HeartbeatResponse)
  return target;
}

size_t HeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.HeartbeatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 interval = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatResponse* source =
      ::google::protobuf::DynamicCastToGenerated<HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.HeartbeatResponse)
    MergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    set_interval(from.interval());
  }
}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {
  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(interval_, other->interval_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RPCRequest::InitAsDefaultInstance() {
}
class RPCRequest::HasBitSetters {
 public:
  static void set_has_jsonstring(RPCRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCRequest::kJsonStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCRequest::RPCRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.RPCRequest)
}
RPCRequest::RPCRequest(const RPCRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jsonstring()) {
    jsonstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonstring_);
  }
  // @@protoc_insertion_point(copy_constructor:SystemMsg.RPCRequest)
}

void RPCRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RPCRequest_SystemMsg_2eproto.base);
  jsonstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RPCRequest::~RPCRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.RPCRequest)
  SharedDtor();
}

void RPCRequest::SharedDtor() {
  jsonstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RPCRequest& RPCRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RPCRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void RPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.RPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    jsonstring_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RPCRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RPCRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes jsonString = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_jsonstring();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RPCRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.RPCRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes jsonString = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jsonstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.RPCRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.RPCRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RPCRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.RPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes jsonString = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->jsonstring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.RPCRequest)
}

::google::protobuf::uint8* RPCRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.RPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes jsonString = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->jsonstring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.RPCRequest)
  return target;
}

size_t RPCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.RPCRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes jsonString = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jsonstring());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RPCRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.RPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RPCRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.RPCRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.RPCRequest)
    MergeFrom(*source);
  }
}

void RPCRequest::MergeFrom(const RPCRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.RPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_jsonstring()) {
    _has_bits_[0] |= 0x00000001u;
    jsonstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonstring_);
  }
}

void RPCRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.RPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCRequest::CopyFrom(const RPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.RPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCRequest::IsInitialized() const {
  return true;
}

void RPCRequest::Swap(RPCRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCRequest::InternalSwap(RPCRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  jsonstring_.Swap(&other->jsonstring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RPCRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RPCResponse::InitAsDefaultInstance() {
}
class RPCResponse::HasBitSetters {
 public:
  static void set_has_jsonstring(RPCResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCResponse::kJsonStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCResponse::RPCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.RPCResponse)
}
RPCResponse::RPCResponse(const RPCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jsonstring()) {
    jsonstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonstring_);
  }
  // @@protoc_insertion_point(copy_constructor:SystemMsg.RPCResponse)
}

void RPCResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RPCResponse_SystemMsg_2eproto.base);
  jsonstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RPCResponse::~RPCResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.RPCResponse)
  SharedDtor();
}

void RPCResponse::SharedDtor() {
  jsonstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RPCResponse& RPCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RPCResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void RPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.RPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    jsonstring_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RPCResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RPCResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes jsonString = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_jsonstring();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RPCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.RPCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes jsonString = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jsonstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.RPCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.RPCResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RPCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.RPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes jsonString = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->jsonstring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.RPCResponse)
}

::google::protobuf::uint8* RPCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.RPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes jsonString = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->jsonstring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.RPCResponse)
  return target;
}

size_t RPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.RPCResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes jsonString = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jsonstring());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RPCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.RPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RPCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.RPCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.RPCResponse)
    MergeFrom(*source);
  }
}

void RPCResponse::MergeFrom(const RPCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.RPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_jsonstring()) {
    _has_bits_[0] |= 0x00000001u;
    jsonstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonstring_);
  }
}

void RPCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.RPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCResponse::CopyFrom(const RPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.RPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCResponse::IsInitialized() const {
  return true;
}

void RPCResponse::Swap(RPCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCResponse::InternalSwap(RPCResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  jsonstring_.Swap(&other->jsonstring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RPCResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionSilentRequest::InitAsDefaultInstance() {
}
class SessionSilentRequest::HasBitSetters {
 public:
  static void set_has_silentinterval(SessionSilentRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionSilentRequest::kSilentIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionSilentRequest::SessionSilentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionSilentRequest)
}
SessionSilentRequest::SessionSilentRequest(const SessionSilentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  silentinterval_ = from.silentinterval_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionSilentRequest)
}

void SessionSilentRequest::SharedCtor() {
  silentinterval_ = 0;
}

SessionSilentRequest::~SessionSilentRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionSilentRequest)
  SharedDtor();
}

void SessionSilentRequest::SharedDtor() {
}

void SessionSilentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionSilentRequest& SessionSilentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionSilentRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionSilentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  silentinterval_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionSilentRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionSilentRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 silentInterval = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_silentinterval(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionSilentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionSilentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 silentInterval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_silentinterval(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &silentinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionSilentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionSilentRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionSilentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 silentInterval = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->silentinterval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionSilentRequest)
}

::google::protobuf::uint8* SessionSilentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 silentInterval = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->silentinterval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionSilentRequest)
  return target;
}

size_t SessionSilentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionSilentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 silentInterval = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->silentinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionSilentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionSilentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionSilentRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SessionSilentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionSilentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionSilentRequest)
    MergeFrom(*source);
  }
}

void SessionSilentRequest::MergeFrom(const SessionSilentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionSilentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_silentinterval()) {
    set_silentinterval(from.silentinterval());
  }
}

void SessionSilentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionSilentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionSilentRequest::CopyFrom(const SessionSilentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionSilentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionSilentRequest::IsInitialized() const {
  return true;
}

void SessionSilentRequest::Swap(SessionSilentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionSilentRequest::InternalSwap(SessionSilentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(silentinterval_, other->silentinterval_);
}

::google::protobuf::Metadata SessionSilentRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionSilentResponse::InitAsDefaultInstance() {
}
class SessionSilentResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionSilentResponse::SessionSilentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionSilentResponse)
}
SessionSilentResponse::SessionSilentResponse(const SessionSilentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionSilentResponse)
}

void SessionSilentResponse::SharedCtor() {
}

SessionSilentResponse::~SessionSilentResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionSilentResponse)
  SharedDtor();
}

void SessionSilentResponse::SharedDtor() {
}

void SessionSilentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionSilentResponse& SessionSilentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionSilentResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionSilentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionSilentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionSilentResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionSilentResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionSilentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionSilentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionSilentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionSilentResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionSilentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionSilentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionSilentResponse)
}

::google::protobuf::uint8* SessionSilentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionSilentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionSilentResponse)
  return target;
}

size_t SessionSilentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionSilentResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionSilentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionSilentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionSilentResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SessionSilentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionSilentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionSilentResponse)
    MergeFrom(*source);
  }
}

void SessionSilentResponse::MergeFrom(const SessionSilentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionSilentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SessionSilentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionSilentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionSilentResponse::CopyFrom(const SessionSilentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionSilentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionSilentResponse::IsInitialized() const {
  return true;
}

void SessionSilentResponse::Swap(SessionSilentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionSilentResponse::InternalSwap(SessionSilentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata SessionSilentResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionCloseRequest::InitAsDefaultInstance() {
}
class SessionCloseRequest::HasBitSetters {
 public:
  static void set_has_errcode(SessionCloseRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionCloseRequest::kErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionCloseRequest::SessionCloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionCloseRequest)
}
SessionCloseRequest::SessionCloseRequest(const SessionCloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionCloseRequest)
}

void SessionCloseRequest::SharedCtor() {
  errcode_ = 0;
}

SessionCloseRequest::~SessionCloseRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionCloseRequest)
  SharedDtor();
}

void SessionCloseRequest::SharedDtor() {
}

void SessionCloseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionCloseRequest& SessionCloseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionCloseRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionCloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionCloseRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionCloseRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_errcode(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionCloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionCloseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_errcode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionCloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionCloseRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionCloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionCloseRequest)
}

::google::protobuf::uint8* SessionCloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionCloseRequest)
  return target;
}

size_t SessionCloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionCloseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 errCode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionCloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionCloseRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SessionCloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionCloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionCloseRequest)
    MergeFrom(*source);
  }
}

void SessionCloseRequest::MergeFrom(const SessionCloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void SessionCloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionCloseRequest::CopyFrom(const SessionCloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionCloseRequest::IsInitialized() const {
  return true;
}

void SessionCloseRequest::Swap(SessionCloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionCloseRequest::InternalSwap(SessionCloseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata SessionCloseRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionCloseResponse::InitAsDefaultInstance() {
}
class SessionCloseResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionCloseResponse::SessionCloseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionCloseResponse)
}
SessionCloseResponse::SessionCloseResponse(const SessionCloseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionCloseResponse)
}

void SessionCloseResponse::SharedCtor() {
}

SessionCloseResponse::~SessionCloseResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionCloseResponse)
  SharedDtor();
}

void SessionCloseResponse::SharedDtor() {
}

void SessionCloseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionCloseResponse& SessionCloseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionCloseResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionCloseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionCloseResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionCloseResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionCloseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionCloseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionCloseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionCloseResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionCloseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionCloseResponse)
}

::google::protobuf::uint8* SessionCloseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionCloseResponse)
  return target;
}

size_t SessionCloseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionCloseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionCloseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionCloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionCloseResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SessionCloseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionCloseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionCloseResponse)
    MergeFrom(*source);
  }
}

void SessionCloseResponse::MergeFrom(const SessionCloseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionCloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SessionCloseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionCloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionCloseResponse::CopyFrom(const SessionCloseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionCloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionCloseResponse::IsInitialized() const {
  return true;
}

void SessionCloseResponse::Swap(SessionCloseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionCloseResponse::InternalSwap(SessionCloseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata SessionCloseResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SiteRegisterBusRequest::InitAsDefaultInstance() {
}
class SiteRegisterBusRequest::HasBitSetters {
 public:
  static void set_has_sendsitename(SiteRegisterBusRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteRegisterBusRequest::kSendSiteNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteRegisterBusRequest::SiteRegisterBusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SiteRegisterBusRequest)
}
SiteRegisterBusRequest::SiteRegisterBusRequest(const SiteRegisterBusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sendsitename()) {
    sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
  }
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SiteRegisterBusRequest)
}

void SiteRegisterBusRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SiteRegisterBusRequest_SystemMsg_2eproto.base);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SiteRegisterBusRequest::~SiteRegisterBusRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.SiteRegisterBusRequest)
  SharedDtor();
}

void SiteRegisterBusRequest::SharedDtor() {
  sendsitename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteRegisterBusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SiteRegisterBusRequest& SiteRegisterBusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SiteRegisterBusRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SiteRegisterBusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SiteRegisterBusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sendsitename_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SiteRegisterBusRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SiteRegisterBusRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_sendsitename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SiteRegisterBusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SiteRegisterBusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sendsitename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SiteRegisterBusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SiteRegisterBusRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SiteRegisterBusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SiteRegisterBusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sendsitename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SiteRegisterBusRequest)
}

::google::protobuf::uint8* SiteRegisterBusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SiteRegisterBusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sendsitename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SiteRegisterBusRequest)
  return target;
}

size_t SiteRegisterBusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SiteRegisterBusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes sendSiteName = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sendsitename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SiteRegisterBusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SiteRegisterBusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteRegisterBusRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SiteRegisterBusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SiteRegisterBusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SiteRegisterBusRequest)
    MergeFrom(*source);
  }
}

void SiteRegisterBusRequest::MergeFrom(const SiteRegisterBusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SiteRegisterBusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sendsitename()) {
    _has_bits_[0] |= 0x00000001u;
    sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
  }
}

void SiteRegisterBusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SiteRegisterBusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteRegisterBusRequest::CopyFrom(const SiteRegisterBusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SiteRegisterBusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteRegisterBusRequest::IsInitialized() const {
  return true;
}

void SiteRegisterBusRequest::Swap(SiteRegisterBusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteRegisterBusRequest::InternalSwap(SiteRegisterBusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sendsitename_.Swap(&other->sendsitename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SiteRegisterBusRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SiteRegisterBusResponse::InitAsDefaultInstance() {
}
class SiteRegisterBusResponse::HasBitSetters {
 public:
  static void set_has_siteid(SiteRegisterBusResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteRegisterBusResponse::kSiteIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteRegisterBusResponse::SiteRegisterBusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SiteRegisterBusResponse)
}
SiteRegisterBusResponse::SiteRegisterBusResponse(const SiteRegisterBusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  siteid_ = from.siteid_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SiteRegisterBusResponse)
}

void SiteRegisterBusResponse::SharedCtor() {
  siteid_ = 0;
}

SiteRegisterBusResponse::~SiteRegisterBusResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.SiteRegisterBusResponse)
  SharedDtor();
}

void SiteRegisterBusResponse::SharedDtor() {
}

void SiteRegisterBusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SiteRegisterBusResponse& SiteRegisterBusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SiteRegisterBusResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SiteRegisterBusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SiteRegisterBusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  siteid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SiteRegisterBusResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SiteRegisterBusResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 siteId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_siteid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SiteRegisterBusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SiteRegisterBusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 siteId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_siteid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &siteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SiteRegisterBusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SiteRegisterBusResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SiteRegisterBusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SiteRegisterBusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 siteId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->siteid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SiteRegisterBusResponse)
}

::google::protobuf::uint8* SiteRegisterBusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SiteRegisterBusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 siteId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->siteid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SiteRegisterBusResponse)
  return target;
}

size_t SiteRegisterBusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SiteRegisterBusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 siteId = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->siteid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SiteRegisterBusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SiteRegisterBusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteRegisterBusResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SiteRegisterBusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SiteRegisterBusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SiteRegisterBusResponse)
    MergeFrom(*source);
  }
}

void SiteRegisterBusResponse::MergeFrom(const SiteRegisterBusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SiteRegisterBusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_siteid()) {
    set_siteid(from.siteid());
  }
}

void SiteRegisterBusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SiteRegisterBusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteRegisterBusResponse::CopyFrom(const SiteRegisterBusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SiteRegisterBusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteRegisterBusResponse::IsInitialized() const {
  return true;
}

void SiteRegisterBusResponse::Swap(SiteRegisterBusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteRegisterBusResponse::InternalSwap(SiteRegisterBusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(siteid_, other->siteid_);
}

::google::protobuf::Metadata SiteRegisterBusResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SiteToBusTransmitRequest::InitAsDefaultInstance() {
}
class SiteToBusTransmitRequest::HasBitSetters {
 public:
  static void set_has_sendsitename(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_recvsitename(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_sendsiteid(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_recvsiteid(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_transmitmode(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_transmitcmd(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_transmittype(SiteToBusTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteToBusTransmitRequest::kSendSiteNameFieldNumber;
const int SiteToBusTransmitRequest::kRecvSiteNameFieldNumber;
const int SiteToBusTransmitRequest::kSendSiteIdFieldNumber;
const int SiteToBusTransmitRequest::kRecvSiteIdFieldNumber;
const int SiteToBusTransmitRequest::kTransmitModeFieldNumber;
const int SiteToBusTransmitRequest::kTransmitCmdFieldNumber;
const int SiteToBusTransmitRequest::kTransmitTypeFieldNumber;
const int SiteToBusTransmitRequest::kTransmitDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteToBusTransmitRequest::SiteToBusTransmitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SiteToBusTransmitRequest)
}
SiteToBusTransmitRequest::SiteToBusTransmitRequest(const SiteToBusTransmitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      transmitdata_(from.transmitdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sendsitename()) {
    sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
  }
  recvsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recvsitename()) {
    recvsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvsitename_);
  }
  ::memcpy(&sendsiteid_, &from.sendsiteid_,
    static_cast<size_t>(reinterpret_cast<char*>(&transmittype_) -
    reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SiteToBusTransmitRequest)
}

void SiteToBusTransmitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SiteToBusTransmitRequest_SystemMsg_2eproto.base);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendsiteid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transmittype_) -
      reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
}

SiteToBusTransmitRequest::~SiteToBusTransmitRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.SiteToBusTransmitRequest)
  SharedDtor();
}

void SiteToBusTransmitRequest::SharedDtor() {
  sendsitename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvsitename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteToBusTransmitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SiteToBusTransmitRequest& SiteToBusTransmitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SiteToBusTransmitRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SiteToBusTransmitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SiteToBusTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transmitdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      sendsitename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      recvsitename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&sendsiteid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&transmittype_) -
        reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SiteToBusTransmitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SiteToBusTransmitRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_sendsitename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional bytes recvSiteName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_recvsitename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional int32 sendSiteId = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_sendsiteid(value);
        break;
      }
      // optional int32 recvSiteId = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_recvsiteid(value);
        break;
      }
      // optional int32 transmitMode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmitmode(value);
        break;
      }
      // optional int32 transmitCmd = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmitcmd(value);
        break;
      }
      // optional int32 transmitType = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmittype(value);
        break;
      }
      // repeated int32 transmitData = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 64) {
          do {
            ::google::protobuf::uint64 val;
            ptr = Varint::Parse64(ptr, &val);
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            ::google::protobuf::int32 value = val;
            msg->add_transmitdata(value);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
        object = msg->mutable_transmitdata();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SiteToBusTransmitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SiteToBusTransmitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sendsitename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes recvSiteName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recvsitename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sendSiteId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_sendsiteid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sendsiteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 recvSiteId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_recvsiteid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recvsiteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitMode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_transmitmode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmitmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitCmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_transmitcmd(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmitcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_transmittype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 transmitData = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_transmitdata())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_transmitdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SiteToBusTransmitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SiteToBusTransmitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SiteToBusTransmitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SiteToBusTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sendsitename(), output);
  }

  // optional bytes recvSiteName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->recvsitename(), output);
  }

  // optional int32 sendSiteId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sendsiteid(), output);
  }

  // optional int32 recvSiteId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->recvsiteid(), output);
  }

  // optional int32 transmitMode = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->transmitmode(), output);
  }

  // optional int32 transmitCmd = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->transmitcmd(), output);
  }

  // optional int32 transmitType = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->transmittype(), output);
  }

  // repeated int32 transmitData = 8;
  for (int i = 0, n = this->transmitdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->transmitdata(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SiteToBusTransmitRequest)
}

::google::protobuf::uint8* SiteToBusTransmitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SiteToBusTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sendsitename(), target);
  }

  // optional bytes recvSiteName = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->recvsitename(), target);
  }

  // optional int32 sendSiteId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sendsiteid(), target);
  }

  // optional int32 recvSiteId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->recvsiteid(), target);
  }

  // optional int32 transmitMode = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->transmitmode(), target);
  }

  // optional int32 transmitCmd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->transmitcmd(), target);
  }

  // optional int32 transmitType = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->transmittype(), target);
  }

  // repeated int32 transmitData = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(8, this->transmitdata_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SiteToBusTransmitRequest)
  return target;
}

size_t SiteToBusTransmitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SiteToBusTransmitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 transmitData = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->transmitdata_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->transmitdata_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes sendSiteName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sendsitename());
    }

    // optional bytes recvSiteName = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->recvsitename());
    }

    // optional int32 sendSiteId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sendsiteid());
    }

    // optional int32 recvSiteId = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recvsiteid());
    }

    // optional int32 transmitMode = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmitmode());
    }

    // optional int32 transmitCmd = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmitcmd());
    }

    // optional int32 transmitType = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmittype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SiteToBusTransmitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SiteToBusTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteToBusTransmitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SiteToBusTransmitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SiteToBusTransmitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SiteToBusTransmitRequest)
    MergeFrom(*source);
  }
}

void SiteToBusTransmitRequest::MergeFrom(const SiteToBusTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SiteToBusTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transmitdata_.MergeFrom(from.transmitdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      recvsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvsitename_);
    }
    if (cached_has_bits & 0x00000004u) {
      sendsiteid_ = from.sendsiteid_;
    }
    if (cached_has_bits & 0x00000008u) {
      recvsiteid_ = from.recvsiteid_;
    }
    if (cached_has_bits & 0x00000010u) {
      transmitmode_ = from.transmitmode_;
    }
    if (cached_has_bits & 0x00000020u) {
      transmitcmd_ = from.transmitcmd_;
    }
    if (cached_has_bits & 0x00000040u) {
      transmittype_ = from.transmittype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SiteToBusTransmitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SiteToBusTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteToBusTransmitRequest::CopyFrom(const SiteToBusTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SiteToBusTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteToBusTransmitRequest::IsInitialized() const {
  return true;
}

void SiteToBusTransmitRequest::Swap(SiteToBusTransmitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteToBusTransmitRequest::InternalSwap(SiteToBusTransmitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  transmitdata_.InternalSwap(&other->transmitdata_);
  sendsitename_.Swap(&other->sendsitename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recvsitename_.Swap(&other->recvsitename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sendsiteid_, other->sendsiteid_);
  swap(recvsiteid_, other->recvsiteid_);
  swap(transmitmode_, other->transmitmode_);
  swap(transmitcmd_, other->transmitcmd_);
  swap(transmittype_, other->transmittype_);
}

::google::protobuf::Metadata SiteToBusTransmitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SiteToBusTransmitResponse::InitAsDefaultInstance() {
}
class SiteToBusTransmitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteToBusTransmitResponse::SiteToBusTransmitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SiteToBusTransmitResponse)
}
SiteToBusTransmitResponse::SiteToBusTransmitResponse(const SiteToBusTransmitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SiteToBusTransmitResponse)
}

void SiteToBusTransmitResponse::SharedCtor() {
}

SiteToBusTransmitResponse::~SiteToBusTransmitResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.SiteToBusTransmitResponse)
  SharedDtor();
}

void SiteToBusTransmitResponse::SharedDtor() {
}

void SiteToBusTransmitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SiteToBusTransmitResponse& SiteToBusTransmitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SiteToBusTransmitResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SiteToBusTransmitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SiteToBusTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SiteToBusTransmitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SiteToBusTransmitResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SiteToBusTransmitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SiteToBusTransmitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SiteToBusTransmitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SiteToBusTransmitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SiteToBusTransmitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SiteToBusTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SiteToBusTransmitResponse)
}

::google::protobuf::uint8* SiteToBusTransmitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SiteToBusTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SiteToBusTransmitResponse)
  return target;
}

size_t SiteToBusTransmitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SiteToBusTransmitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SiteToBusTransmitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SiteToBusTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteToBusTransmitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SiteToBusTransmitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SiteToBusTransmitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SiteToBusTransmitResponse)
    MergeFrom(*source);
  }
}

void SiteToBusTransmitResponse::MergeFrom(const SiteToBusTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SiteToBusTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SiteToBusTransmitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SiteToBusTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteToBusTransmitResponse::CopyFrom(const SiteToBusTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SiteToBusTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteToBusTransmitResponse::IsInitialized() const {
  return true;
}

void SiteToBusTransmitResponse::Swap(SiteToBusTransmitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteToBusTransmitResponse::InternalSwap(SiteToBusTransmitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata SiteToBusTransmitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BusToSiteTransmitRequest::InitAsDefaultInstance() {
}
class BusToSiteTransmitRequest::HasBitSetters {
 public:
  static void set_has_sendsitename(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_recvsitename(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_sendsiteid(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_recvsiteid(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_transmitmode(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_transmitcmd(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_transmittype(BusToSiteTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BusToSiteTransmitRequest::kSendSiteNameFieldNumber;
const int BusToSiteTransmitRequest::kRecvSiteNameFieldNumber;
const int BusToSiteTransmitRequest::kSendSiteIdFieldNumber;
const int BusToSiteTransmitRequest::kRecvSiteIdFieldNumber;
const int BusToSiteTransmitRequest::kTransmitModeFieldNumber;
const int BusToSiteTransmitRequest::kTransmitCmdFieldNumber;
const int BusToSiteTransmitRequest::kTransmitTypeFieldNumber;
const int BusToSiteTransmitRequest::kTransmitDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BusToSiteTransmitRequest::BusToSiteTransmitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.BusToSiteTransmitRequest)
}
BusToSiteTransmitRequest::BusToSiteTransmitRequest(const BusToSiteTransmitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      transmitdata_(from.transmitdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sendsitename()) {
    sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
  }
  recvsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recvsitename()) {
    recvsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvsitename_);
  }
  ::memcpy(&sendsiteid_, &from.sendsiteid_,
    static_cast<size_t>(reinterpret_cast<char*>(&transmittype_) -
    reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
  // @@protoc_insertion_point(copy_constructor:SystemMsg.BusToSiteTransmitRequest)
}

void BusToSiteTransmitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BusToSiteTransmitRequest_SystemMsg_2eproto.base);
  sendsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvsitename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendsiteid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transmittype_) -
      reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
}

BusToSiteTransmitRequest::~BusToSiteTransmitRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.BusToSiteTransmitRequest)
  SharedDtor();
}

void BusToSiteTransmitRequest::SharedDtor() {
  sendsitename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvsitename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BusToSiteTransmitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BusToSiteTransmitRequest& BusToSiteTransmitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BusToSiteTransmitRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void BusToSiteTransmitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.BusToSiteTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transmitdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      sendsitename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      recvsitename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&sendsiteid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&transmittype_) -
        reinterpret_cast<char*>(&sendsiteid_)) + sizeof(transmittype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BusToSiteTransmitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BusToSiteTransmitRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_sendsitename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional bytes recvSiteName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_recvsitename();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional int32 sendSiteId = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_sendsiteid(value);
        break;
      }
      // optional int32 recvSiteId = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_recvsiteid(value);
        break;
      }
      // optional int32 transmitMode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmitmode(value);
        break;
      }
      // optional int32 transmitCmd = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmitcmd(value);
        break;
      }
      // optional int32 transmitType = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmittype(value);
        break;
      }
      // repeated int32 transmitData = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 64) {
          do {
            ::google::protobuf::uint64 val;
            ptr = Varint::Parse64(ptr, &val);
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            ::google::protobuf::int32 value = val;
            msg->add_transmitdata(value);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
        object = msg->mutable_transmitdata();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BusToSiteTransmitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.BusToSiteTransmitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sendSiteName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sendsitename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes recvSiteName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recvsitename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sendSiteId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_sendsiteid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sendsiteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 recvSiteId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_recvsiteid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recvsiteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitMode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_transmitmode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmitmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitCmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_transmitcmd(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmitcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_transmittype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 transmitData = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_transmitdata())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_transmitdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.BusToSiteTransmitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.BusToSiteTransmitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BusToSiteTransmitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.BusToSiteTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sendsitename(), output);
  }

  // optional bytes recvSiteName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->recvsitename(), output);
  }

  // optional int32 sendSiteId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sendsiteid(), output);
  }

  // optional int32 recvSiteId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->recvsiteid(), output);
  }

  // optional int32 transmitMode = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->transmitmode(), output);
  }

  // optional int32 transmitCmd = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->transmitcmd(), output);
  }

  // optional int32 transmitType = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->transmittype(), output);
  }

  // repeated int32 transmitData = 8;
  for (int i = 0, n = this->transmitdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->transmitdata(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.BusToSiteTransmitRequest)
}

::google::protobuf::uint8* BusToSiteTransmitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.BusToSiteTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendSiteName = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sendsitename(), target);
  }

  // optional bytes recvSiteName = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->recvsitename(), target);
  }

  // optional int32 sendSiteId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sendsiteid(), target);
  }

  // optional int32 recvSiteId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->recvsiteid(), target);
  }

  // optional int32 transmitMode = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->transmitmode(), target);
  }

  // optional int32 transmitCmd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->transmitcmd(), target);
  }

  // optional int32 transmitType = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->transmittype(), target);
  }

  // repeated int32 transmitData = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(8, this->transmitdata_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.BusToSiteTransmitRequest)
  return target;
}

size_t BusToSiteTransmitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.BusToSiteTransmitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 transmitData = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->transmitdata_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->transmitdata_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes sendSiteName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sendsitename());
    }

    // optional bytes recvSiteName = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->recvsitename());
    }

    // optional int32 sendSiteId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sendsiteid());
    }

    // optional int32 recvSiteId = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recvsiteid());
    }

    // optional int32 transmitMode = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmitmode());
    }

    // optional int32 transmitCmd = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmitcmd());
    }

    // optional int32 transmitType = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmittype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BusToSiteTransmitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.BusToSiteTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BusToSiteTransmitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<BusToSiteTransmitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.BusToSiteTransmitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.BusToSiteTransmitRequest)
    MergeFrom(*source);
  }
}

void BusToSiteTransmitRequest::MergeFrom(const BusToSiteTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.BusToSiteTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transmitdata_.MergeFrom(from.transmitdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sendsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendsitename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      recvsitename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvsitename_);
    }
    if (cached_has_bits & 0x00000004u) {
      sendsiteid_ = from.sendsiteid_;
    }
    if (cached_has_bits & 0x00000008u) {
      recvsiteid_ = from.recvsiteid_;
    }
    if (cached_has_bits & 0x00000010u) {
      transmitmode_ = from.transmitmode_;
    }
    if (cached_has_bits & 0x00000020u) {
      transmitcmd_ = from.transmitcmd_;
    }
    if (cached_has_bits & 0x00000040u) {
      transmittype_ = from.transmittype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BusToSiteTransmitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.BusToSiteTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusToSiteTransmitRequest::CopyFrom(const BusToSiteTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.BusToSiteTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusToSiteTransmitRequest::IsInitialized() const {
  return true;
}

void BusToSiteTransmitRequest::Swap(BusToSiteTransmitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BusToSiteTransmitRequest::InternalSwap(BusToSiteTransmitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  transmitdata_.InternalSwap(&other->transmitdata_);
  sendsitename_.Swap(&other->sendsitename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recvsitename_.Swap(&other->recvsitename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sendsiteid_, other->sendsiteid_);
  swap(recvsiteid_, other->recvsiteid_);
  swap(transmitmode_, other->transmitmode_);
  swap(transmitcmd_, other->transmitcmd_);
  swap(transmittype_, other->transmittype_);
}

::google::protobuf::Metadata BusToSiteTransmitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BusToSiteTransmitResponse::InitAsDefaultInstance() {
}
class BusToSiteTransmitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BusToSiteTransmitResponse::BusToSiteTransmitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.BusToSiteTransmitResponse)
}
BusToSiteTransmitResponse::BusToSiteTransmitResponse(const BusToSiteTransmitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.BusToSiteTransmitResponse)
}

void BusToSiteTransmitResponse::SharedCtor() {
}

BusToSiteTransmitResponse::~BusToSiteTransmitResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.BusToSiteTransmitResponse)
  SharedDtor();
}

void BusToSiteTransmitResponse::SharedDtor() {
}

void BusToSiteTransmitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BusToSiteTransmitResponse& BusToSiteTransmitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BusToSiteTransmitResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void BusToSiteTransmitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.BusToSiteTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BusToSiteTransmitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BusToSiteTransmitResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BusToSiteTransmitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.BusToSiteTransmitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.BusToSiteTransmitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.BusToSiteTransmitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BusToSiteTransmitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.BusToSiteTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.BusToSiteTransmitResponse)
}

::google::protobuf::uint8* BusToSiteTransmitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.BusToSiteTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.BusToSiteTransmitResponse)
  return target;
}

size_t BusToSiteTransmitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.BusToSiteTransmitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BusToSiteTransmitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.BusToSiteTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BusToSiteTransmitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<BusToSiteTransmitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.BusToSiteTransmitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.BusToSiteTransmitResponse)
    MergeFrom(*source);
  }
}

void BusToSiteTransmitResponse::MergeFrom(const BusToSiteTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.BusToSiteTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BusToSiteTransmitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.BusToSiteTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusToSiteTransmitResponse::CopyFrom(const BusToSiteTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.BusToSiteTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusToSiteTransmitResponse::IsInitialized() const {
  return true;
}

void BusToSiteTransmitResponse::Swap(BusToSiteTransmitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BusToSiteTransmitResponse::InternalSwap(BusToSiteTransmitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata BusToSiteTransmitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StreamOverCtrlRequest::InitAsDefaultInstance() {
}
class StreamOverCtrlRequest::HasBitSetters {
 public:
  static void set_has_ctrlruleid(StreamOverCtrlRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamOverCtrlRequest::kCtrlRuleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamOverCtrlRequest::StreamOverCtrlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.StreamOverCtrlRequest)
}
StreamOverCtrlRequest::StreamOverCtrlRequest(const StreamOverCtrlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ctrlruleid_ = from.ctrlruleid_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.StreamOverCtrlRequest)
}

void StreamOverCtrlRequest::SharedCtor() {
  ctrlruleid_ = 0;
}

StreamOverCtrlRequest::~StreamOverCtrlRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.StreamOverCtrlRequest)
  SharedDtor();
}

void StreamOverCtrlRequest::SharedDtor() {
}

void StreamOverCtrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamOverCtrlRequest& StreamOverCtrlRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamOverCtrlRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void StreamOverCtrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.StreamOverCtrlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctrlruleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamOverCtrlRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamOverCtrlRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 ctrlRuleId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_ctrlruleid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamOverCtrlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.StreamOverCtrlRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ctrlRuleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_ctrlruleid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctrlruleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.StreamOverCtrlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.StreamOverCtrlRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamOverCtrlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.StreamOverCtrlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ctrlRuleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ctrlruleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.StreamOverCtrlRequest)
}

::google::protobuf::uint8* StreamOverCtrlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.StreamOverCtrlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ctrlRuleId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ctrlruleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.StreamOverCtrlRequest)
  return target;
}

size_t StreamOverCtrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.StreamOverCtrlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 ctrlRuleId = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ctrlruleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamOverCtrlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.StreamOverCtrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamOverCtrlRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StreamOverCtrlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.StreamOverCtrlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.StreamOverCtrlRequest)
    MergeFrom(*source);
  }
}

void StreamOverCtrlRequest::MergeFrom(const StreamOverCtrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.StreamOverCtrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ctrlruleid()) {
    set_ctrlruleid(from.ctrlruleid());
  }
}

void StreamOverCtrlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.StreamOverCtrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamOverCtrlRequest::CopyFrom(const StreamOverCtrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.StreamOverCtrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamOverCtrlRequest::IsInitialized() const {
  return true;
}

void StreamOverCtrlRequest::Swap(StreamOverCtrlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamOverCtrlRequest::InternalSwap(StreamOverCtrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctrlruleid_, other->ctrlruleid_);
}

::google::protobuf::Metadata StreamOverCtrlRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StreamOverCtrlResponse::InitAsDefaultInstance() {
}
class StreamOverCtrlResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamOverCtrlResponse::StreamOverCtrlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.StreamOverCtrlResponse)
}
StreamOverCtrlResponse::StreamOverCtrlResponse(const StreamOverCtrlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.StreamOverCtrlResponse)
}

void StreamOverCtrlResponse::SharedCtor() {
}

StreamOverCtrlResponse::~StreamOverCtrlResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.StreamOverCtrlResponse)
  SharedDtor();
}

void StreamOverCtrlResponse::SharedDtor() {
}

void StreamOverCtrlResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamOverCtrlResponse& StreamOverCtrlResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamOverCtrlResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void StreamOverCtrlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.StreamOverCtrlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamOverCtrlResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamOverCtrlResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamOverCtrlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.StreamOverCtrlResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.StreamOverCtrlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.StreamOverCtrlResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamOverCtrlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.StreamOverCtrlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.StreamOverCtrlResponse)
}

::google::protobuf::uint8* StreamOverCtrlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.StreamOverCtrlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.StreamOverCtrlResponse)
  return target;
}

size_t StreamOverCtrlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.StreamOverCtrlResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamOverCtrlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.StreamOverCtrlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamOverCtrlResponse* source =
      ::google::protobuf::DynamicCastToGenerated<StreamOverCtrlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.StreamOverCtrlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.StreamOverCtrlResponse)
    MergeFrom(*source);
  }
}

void StreamOverCtrlResponse::MergeFrom(const StreamOverCtrlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.StreamOverCtrlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StreamOverCtrlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.StreamOverCtrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamOverCtrlResponse::CopyFrom(const StreamOverCtrlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.StreamOverCtrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamOverCtrlResponse::IsInitialized() const {
  return true;
}

void StreamOverCtrlResponse::Swap(StreamOverCtrlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamOverCtrlResponse::InternalSwap(StreamOverCtrlResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata StreamOverCtrlResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConnectFailedRequest::InitAsDefaultInstance() {
}
class ConnectFailedRequest::HasBitSetters {
 public:
  static void set_has_errcode(ConnectFailedRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectFailedRequest::kErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectFailedRequest::ConnectFailedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.ConnectFailedRequest)
}
ConnectFailedRequest::ConnectFailedRequest(const ConnectFailedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:SystemMsg.ConnectFailedRequest)
}

void ConnectFailedRequest::SharedCtor() {
  errcode_ = 0;
}

ConnectFailedRequest::~ConnectFailedRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.ConnectFailedRequest)
  SharedDtor();
}

void ConnectFailedRequest::SharedDtor() {
}

void ConnectFailedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectFailedRequest& ConnectFailedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConnectFailedRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void ConnectFailedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.ConnectFailedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConnectFailedRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConnectFailedRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 errCode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_errcode(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConnectFailedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.ConnectFailedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 errCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_errcode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.ConnectFailedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.ConnectFailedRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConnectFailedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.ConnectFailedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.ConnectFailedRequest)
}

::google::protobuf::uint8* ConnectFailedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.ConnectFailedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 errCode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.ConnectFailedRequest)
  return target;
}

size_t ConnectFailedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.ConnectFailedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 errCode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectFailedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.ConnectFailedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectFailedRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ConnectFailedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.ConnectFailedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.ConnectFailedRequest)
    MergeFrom(*source);
  }
}

void ConnectFailedRequest::MergeFrom(const ConnectFailedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.ConnectFailedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errcode()) {
    set_errcode(from.errcode());
  }
}

void ConnectFailedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.ConnectFailedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectFailedRequest::CopyFrom(const ConnectFailedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.ConnectFailedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectFailedRequest::IsInitialized() const {
  return true;
}

void ConnectFailedRequest::Swap(ConnectFailedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectFailedRequest::InternalSwap(ConnectFailedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::google::protobuf::Metadata ConnectFailedRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConnectFailedResponse::InitAsDefaultInstance() {
}
class ConnectFailedResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectFailedResponse::ConnectFailedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.ConnectFailedResponse)
}
ConnectFailedResponse::ConnectFailedResponse(const ConnectFailedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.ConnectFailedResponse)
}

void ConnectFailedResponse::SharedCtor() {
}

ConnectFailedResponse::~ConnectFailedResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.ConnectFailedResponse)
  SharedDtor();
}

void ConnectFailedResponse::SharedDtor() {
}

void ConnectFailedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectFailedResponse& ConnectFailedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConnectFailedResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void ConnectFailedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.ConnectFailedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConnectFailedResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConnectFailedResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConnectFailedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.ConnectFailedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.ConnectFailedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.ConnectFailedResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConnectFailedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.ConnectFailedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.ConnectFailedResponse)
}

::google::protobuf::uint8* ConnectFailedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.ConnectFailedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.ConnectFailedResponse)
  return target;
}

size_t ConnectFailedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.ConnectFailedResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectFailedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.ConnectFailedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectFailedResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ConnectFailedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.ConnectFailedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.ConnectFailedResponse)
    MergeFrom(*source);
  }
}

void ConnectFailedResponse::MergeFrom(const ConnectFailedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.ConnectFailedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectFailedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.ConnectFailedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectFailedResponse::CopyFrom(const ConnectFailedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.ConnectFailedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectFailedResponse::IsInitialized() const {
  return true;
}

void ConnectFailedResponse::Swap(ConnectFailedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectFailedResponse::InternalSwap(ConnectFailedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata ConnectFailedResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MQTransmitRequest::InitAsDefaultInstance() {
}
class MQTransmitRequest::HasBitSetters {
 public:
  static void set_has_sendroutkey(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_recvroutkey(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_transmitmode(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_msgcmd(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_msgtype(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_msgresponseresult(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_msgdata(MQTransmitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MQTransmitRequest::kSendRoutkeyFieldNumber;
const int MQTransmitRequest::kRecvRoutKeyFieldNumber;
const int MQTransmitRequest::kTransmitModeFieldNumber;
const int MQTransmitRequest::kMsgCmdFieldNumber;
const int MQTransmitRequest::kMsgTypeFieldNumber;
const int MQTransmitRequest::kMsgResponseResultFieldNumber;
const int MQTransmitRequest::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MQTransmitRequest::MQTransmitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.MQTransmitRequest)
}
MQTransmitRequest::MQTransmitRequest(const MQTransmitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendroutkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sendroutkey()) {
    sendroutkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendroutkey_);
  }
  recvroutkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recvroutkey()) {
    recvroutkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvroutkey_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgdata()) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&transmitmode_, &from.transmitmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgresponseresult_) -
    reinterpret_cast<char*>(&transmitmode_)) + sizeof(msgresponseresult_));
  // @@protoc_insertion_point(copy_constructor:SystemMsg.MQTransmitRequest)
}

void MQTransmitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MQTransmitRequest_SystemMsg_2eproto.base);
  sendroutkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvroutkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transmitmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgresponseresult_) -
      reinterpret_cast<char*>(&transmitmode_)) + sizeof(msgresponseresult_));
}

MQTransmitRequest::~MQTransmitRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.MQTransmitRequest)
  SharedDtor();
}

void MQTransmitRequest::SharedDtor() {
  sendroutkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvroutkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MQTransmitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MQTransmitRequest& MQTransmitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MQTransmitRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void MQTransmitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.MQTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      sendroutkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      recvroutkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      msgdata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&transmitmode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msgresponseresult_) -
        reinterpret_cast<char*>(&transmitmode_)) + sizeof(msgresponseresult_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MQTransmitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MQTransmitRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sendRoutkey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_sendroutkey();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional bytes recvRoutKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_recvroutkey();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      // optional int32 transmitMode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_transmitmode(value);
        break;
      }
      // optional int32 msgCmd = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_msgcmd(value);
        break;
      }
      // optional int32 msgType = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_msgtype(value);
        break;
      }
      // optional int32 msgResponseResult = 6 [default = 0];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_msgresponseresult(value);
        break;
      }
      // optional bytes msgData = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_msgdata();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        str->append(ptr, size);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MQTransmitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.MQTransmitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sendRoutkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sendroutkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes recvRoutKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recvroutkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transmitMode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_transmitmode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transmitmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msgCmd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_msgcmd(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msgType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_msgtype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msgResponseResult = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_msgresponseresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgresponseresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes msgData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.MQTransmitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.MQTransmitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MQTransmitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.MQTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendRoutkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sendroutkey(), output);
  }

  // optional bytes recvRoutKey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->recvroutkey(), output);
  }

  // optional int32 transmitMode = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transmitmode(), output);
  }

  // optional int32 msgCmd = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->msgcmd(), output);
  }

  // optional int32 msgType = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->msgtype(), output);
  }

  // optional int32 msgResponseResult = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->msgresponseresult(), output);
  }

  // optional bytes msgData = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->msgdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.MQTransmitRequest)
}

::google::protobuf::uint8* MQTransmitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.MQTransmitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sendRoutkey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sendroutkey(), target);
  }

  // optional bytes recvRoutKey = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->recvroutkey(), target);
  }

  // optional int32 transmitMode = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transmitmode(), target);
  }

  // optional int32 msgCmd = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->msgcmd(), target);
  }

  // optional int32 msgType = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->msgtype(), target);
  }

  // optional int32 msgResponseResult = 6 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->msgresponseresult(), target);
  }

  // optional bytes msgData = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->msgdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.MQTransmitRequest)
  return target;
}

size_t MQTransmitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.MQTransmitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes sendRoutkey = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sendroutkey());
    }

    // optional bytes recvRoutKey = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->recvroutkey());
    }

    // optional bytes msgData = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msgdata());
    }

    // optional int32 transmitMode = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transmitmode());
    }

    // optional int32 msgCmd = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgcmd());
    }

    // optional int32 msgType = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgtype());
    }

    // optional int32 msgResponseResult = 6 [default = 0];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgresponseresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MQTransmitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.MQTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MQTransmitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MQTransmitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.MQTransmitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.MQTransmitRequest)
    MergeFrom(*source);
  }
}

void MQTransmitRequest::MergeFrom(const MQTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.MQTransmitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sendroutkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendroutkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      recvroutkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvroutkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
    }
    if (cached_has_bits & 0x00000008u) {
      transmitmode_ = from.transmitmode_;
    }
    if (cached_has_bits & 0x00000010u) {
      msgcmd_ = from.msgcmd_;
    }
    if (cached_has_bits & 0x00000020u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000040u) {
      msgresponseresult_ = from.msgresponseresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MQTransmitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.MQTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MQTransmitRequest::CopyFrom(const MQTransmitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.MQTransmitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MQTransmitRequest::IsInitialized() const {
  return true;
}

void MQTransmitRequest::Swap(MQTransmitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MQTransmitRequest::InternalSwap(MQTransmitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sendroutkey_.Swap(&other->sendroutkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recvroutkey_.Swap(&other->recvroutkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transmitmode_, other->transmitmode_);
  swap(msgcmd_, other->msgcmd_);
  swap(msgtype_, other->msgtype_);
  swap(msgresponseresult_, other->msgresponseresult_);
}

::google::protobuf::Metadata MQTransmitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MQTransmitResponse::InitAsDefaultInstance() {
}
class MQTransmitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MQTransmitResponse::MQTransmitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.MQTransmitResponse)
}
MQTransmitResponse::MQTransmitResponse(const MQTransmitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.MQTransmitResponse)
}

void MQTransmitResponse::SharedCtor() {
}

MQTransmitResponse::~MQTransmitResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.MQTransmitResponse)
  SharedDtor();
}

void MQTransmitResponse::SharedDtor() {
}

void MQTransmitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MQTransmitResponse& MQTransmitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MQTransmitResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void MQTransmitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.MQTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MQTransmitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MQTransmitResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MQTransmitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.MQTransmitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.MQTransmitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.MQTransmitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MQTransmitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.MQTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.MQTransmitResponse)
}

::google::protobuf::uint8* MQTransmitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.MQTransmitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.MQTransmitResponse)
  return target;
}

size_t MQTransmitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.MQTransmitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MQTransmitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.MQTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MQTransmitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<MQTransmitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.MQTransmitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.MQTransmitResponse)
    MergeFrom(*source);
  }
}

void MQTransmitResponse::MergeFrom(const MQTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.MQTransmitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MQTransmitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.MQTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MQTransmitResponse::CopyFrom(const MQTransmitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.MQTransmitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MQTransmitResponse::IsInitialized() const {
  return true;
}

void MQTransmitResponse::Swap(MQTransmitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MQTransmitResponse::InternalSwap(MQTransmitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MQTransmitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ShutDownSessionRequest::InitAsDefaultInstance() {
}
class ShutDownSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutDownSessionRequest::ShutDownSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.ShutDownSessionRequest)
}
ShutDownSessionRequest::ShutDownSessionRequest(const ShutDownSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.ShutDownSessionRequest)
}

void ShutDownSessionRequest::SharedCtor() {
}

ShutDownSessionRequest::~ShutDownSessionRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.ShutDownSessionRequest)
  SharedDtor();
}

void ShutDownSessionRequest::SharedDtor() {
}

void ShutDownSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShutDownSessionRequest& ShutDownSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShutDownSessionRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void ShutDownSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.ShutDownSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShutDownSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShutDownSessionRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShutDownSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.ShutDownSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.ShutDownSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.ShutDownSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShutDownSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.ShutDownSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.ShutDownSessionRequest)
}

::google::protobuf::uint8* ShutDownSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.ShutDownSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.ShutDownSessionRequest)
  return target;
}

size_t ShutDownSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.ShutDownSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutDownSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.ShutDownSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutDownSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ShutDownSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.ShutDownSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.ShutDownSessionRequest)
    MergeFrom(*source);
  }
}

void ShutDownSessionRequest::MergeFrom(const ShutDownSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.ShutDownSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShutDownSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.ShutDownSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutDownSessionRequest::CopyFrom(const ShutDownSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.ShutDownSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutDownSessionRequest::IsInitialized() const {
  return true;
}

void ShutDownSessionRequest::Swap(ShutDownSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutDownSessionRequest::InternalSwap(ShutDownSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata ShutDownSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ShutDownSessionResponse::InitAsDefaultInstance() {
}
class ShutDownSessionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShutDownSessionResponse::ShutDownSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.ShutDownSessionResponse)
}
ShutDownSessionResponse::ShutDownSessionResponse(const ShutDownSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.ShutDownSessionResponse)
}

void ShutDownSessionResponse::SharedCtor() {
}

ShutDownSessionResponse::~ShutDownSessionResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.ShutDownSessionResponse)
  SharedDtor();
}

void ShutDownSessionResponse::SharedDtor() {
}

void ShutDownSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShutDownSessionResponse& ShutDownSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShutDownSessionResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void ShutDownSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.ShutDownSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShutDownSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShutDownSessionResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShutDownSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.ShutDownSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.ShutDownSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.ShutDownSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShutDownSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.ShutDownSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.ShutDownSessionResponse)
}

::google::protobuf::uint8* ShutDownSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.ShutDownSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.ShutDownSessionResponse)
  return target;
}

size_t ShutDownSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.ShutDownSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutDownSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.ShutDownSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutDownSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ShutDownSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.ShutDownSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.ShutDownSessionResponse)
    MergeFrom(*source);
  }
}

void ShutDownSessionResponse::MergeFrom(const ShutDownSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.ShutDownSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShutDownSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.ShutDownSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutDownSessionResponse::CopyFrom(const ShutDownSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.ShutDownSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutDownSessionResponse::IsInitialized() const {
  return true;
}

void ShutDownSessionResponse::Swap(ShutDownSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShutDownSessionResponse::InternalSwap(ShutDownSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata ShutDownSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionOpenRequest::InitAsDefaultInstance() {
}
class SessionOpenRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionOpenRequest::SessionOpenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionOpenRequest)
}
SessionOpenRequest::SessionOpenRequest(const SessionOpenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionOpenRequest)
}

void SessionOpenRequest::SharedCtor() {
}

SessionOpenRequest::~SessionOpenRequest() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionOpenRequest)
  SharedDtor();
}

void SessionOpenRequest::SharedDtor() {
}

void SessionOpenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionOpenRequest& SessionOpenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionOpenRequest_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionOpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionOpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionOpenRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionOpenRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionOpenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionOpenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionOpenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionOpenRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionOpenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionOpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionOpenRequest)
}

::google::protobuf::uint8* SessionOpenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionOpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionOpenRequest)
  return target;
}

size_t SessionOpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionOpenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionOpenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionOpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionOpenRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SessionOpenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionOpenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionOpenRequest)
    MergeFrom(*source);
  }
}

void SessionOpenRequest::MergeFrom(const SessionOpenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionOpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SessionOpenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionOpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionOpenRequest::CopyFrom(const SessionOpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionOpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionOpenRequest::IsInitialized() const {
  return true;
}

void SessionOpenRequest::Swap(SessionOpenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionOpenRequest::InternalSwap(SessionOpenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata SessionOpenRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionOpenResponse::InitAsDefaultInstance() {
}
class SessionOpenResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionOpenResponse::SessionOpenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemMsg.SessionOpenResponse)
}
SessionOpenResponse::SessionOpenResponse(const SessionOpenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SystemMsg.SessionOpenResponse)
}

void SessionOpenResponse::SharedCtor() {
}

SessionOpenResponse::~SessionOpenResponse() {
  // @@protoc_insertion_point(destructor:SystemMsg.SessionOpenResponse)
  SharedDtor();
}

void SessionOpenResponse::SharedDtor() {
}

void SessionOpenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionOpenResponse& SessionOpenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionOpenResponse_SystemMsg_2eproto.base);
  return *internal_default_instance();
}


void SessionOpenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemMsg.SessionOpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionOpenResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionOpenResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionOpenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemMsg.SessionOpenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SystemMsg.SessionOpenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemMsg.SessionOpenResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionOpenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemMsg.SessionOpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemMsg.SessionOpenResponse)
}

::google::protobuf::uint8* SessionOpenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemMsg.SessionOpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemMsg.SessionOpenResponse)
  return target;
}

size_t SessionOpenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemMsg.SessionOpenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionOpenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemMsg.SessionOpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionOpenResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SessionOpenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemMsg.SessionOpenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemMsg.SessionOpenResponse)
    MergeFrom(*source);
  }
}

void SessionOpenResponse::MergeFrom(const SessionOpenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemMsg.SessionOpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SessionOpenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemMsg.SessionOpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionOpenResponse::CopyFrom(const SessionOpenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemMsg.SessionOpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionOpenResponse::IsInitialized() const {
  return true;
}

void SessionOpenResponse::Swap(SessionOpenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionOpenResponse::InternalSwap(SessionOpenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata SessionOpenResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMsg_2eproto);
  return ::file_level_metadata_SystemMsg_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SystemMsg
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::SystemMsg::EmptyRequest* Arena::CreateMaybeMessage< ::SystemMsg::EmptyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::EmptyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::NormalResponse* Arena::CreateMaybeMessage< ::SystemMsg::NormalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::NormalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::HeartbeatRequest* Arena::CreateMaybeMessage< ::SystemMsg::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::HeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::HeartbeatResponse* Arena::CreateMaybeMessage< ::SystemMsg::HeartbeatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::HeartbeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::RPCRequest* Arena::CreateMaybeMessage< ::SystemMsg::RPCRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::RPCRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::RPCResponse* Arena::CreateMaybeMessage< ::SystemMsg::RPCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::RPCResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionSilentRequest* Arena::CreateMaybeMessage< ::SystemMsg::SessionSilentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionSilentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionSilentResponse* Arena::CreateMaybeMessage< ::SystemMsg::SessionSilentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionSilentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionCloseRequest* Arena::CreateMaybeMessage< ::SystemMsg::SessionCloseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionCloseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionCloseResponse* Arena::CreateMaybeMessage< ::SystemMsg::SessionCloseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionCloseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SiteRegisterBusRequest* Arena::CreateMaybeMessage< ::SystemMsg::SiteRegisterBusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SiteRegisterBusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SiteRegisterBusResponse* Arena::CreateMaybeMessage< ::SystemMsg::SiteRegisterBusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SiteRegisterBusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SiteToBusTransmitRequest* Arena::CreateMaybeMessage< ::SystemMsg::SiteToBusTransmitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SiteToBusTransmitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SiteToBusTransmitResponse* Arena::CreateMaybeMessage< ::SystemMsg::SiteToBusTransmitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SiteToBusTransmitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::BusToSiteTransmitRequest* Arena::CreateMaybeMessage< ::SystemMsg::BusToSiteTransmitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::BusToSiteTransmitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::BusToSiteTransmitResponse* Arena::CreateMaybeMessage< ::SystemMsg::BusToSiteTransmitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::BusToSiteTransmitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::StreamOverCtrlRequest* Arena::CreateMaybeMessage< ::SystemMsg::StreamOverCtrlRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::StreamOverCtrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::StreamOverCtrlResponse* Arena::CreateMaybeMessage< ::SystemMsg::StreamOverCtrlResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::StreamOverCtrlResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::ConnectFailedRequest* Arena::CreateMaybeMessage< ::SystemMsg::ConnectFailedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::ConnectFailedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::ConnectFailedResponse* Arena::CreateMaybeMessage< ::SystemMsg::ConnectFailedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::ConnectFailedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::MQTransmitRequest* Arena::CreateMaybeMessage< ::SystemMsg::MQTransmitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::MQTransmitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::MQTransmitResponse* Arena::CreateMaybeMessage< ::SystemMsg::MQTransmitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::MQTransmitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::ShutDownSessionRequest* Arena::CreateMaybeMessage< ::SystemMsg::ShutDownSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::ShutDownSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::ShutDownSessionResponse* Arena::CreateMaybeMessage< ::SystemMsg::ShutDownSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::ShutDownSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionOpenRequest* Arena::CreateMaybeMessage< ::SystemMsg::SessionOpenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionOpenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SystemMsg::SessionOpenResponse* Arena::CreateMaybeMessage< ::SystemMsg::SessionOpenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SystemMsg::SessionOpenResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
