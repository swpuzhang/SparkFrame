// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgHeader.proto

#ifndef PROTOBUF_INCLUDED_MsgHeader_2eproto
#define PROTOBUF_INCLUDED_MsgHeader_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MsgHeader_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_MsgHeader_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_MsgHeader_2eproto();
namespace MsgHeader {
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class MqHeader;
class MqHeaderDefaultTypeInternal;
extern MqHeaderDefaultTypeInternal _MqHeader_default_instance_;
}  // namespace MsgHeader
namespace google {
namespace protobuf {
template<> ::MsgHeader::Header* Arena::CreateMaybeMessage<::MsgHeader::Header>(Arena*);
template<> ::MsgHeader::MqHeader* Arena::CreateMaybeMessage<::MsgHeader::MqHeader>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace MsgHeader {

// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgHeader.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const final {
    return CreateMaybeMessage<Header>(NULL);
  }

  Header* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 cmdtype = 1;
  void clear_cmdtype();
  static const int kCmdtypeFieldNumber = 1;
  ::google::protobuf::int32 cmdtype() const;
  void set_cmdtype(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // uint64 sequenceid = 3;
  void clear_sequenceid();
  static const int kSequenceidFieldNumber = 3;
  ::google::protobuf::uint64 sequenceid() const;
  void set_sequenceid(::google::protobuf::uint64 value);

  // uint64 check_result = 5;
  void clear_check_result();
  static const int kCheckResultFieldNumber = 5;
  ::google::protobuf::uint64 check_result() const;
  void set_check_result(::google::protobuf::uint64 value);

  // int32 length = 4;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // int32 response_result = 6;
  void clear_response_result();
  static const int kResponseResultFieldNumber = 6;
  ::google::protobuf::int32 response_result() const;
  void set_response_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgHeader.Header)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cmdtype_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 sequenceid_;
  ::google::protobuf::uint64 check_result_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 response_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MsgHeader_2eproto;
};
// -------------------------------------------------------------------

class MqHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgHeader.MqHeader) */ {
 public:
  MqHeader();
  virtual ~MqHeader();

  MqHeader(const MqHeader& from);

  inline MqHeader& operator=(const MqHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MqHeader(MqHeader&& from) noexcept
    : MqHeader() {
    *this = ::std::move(from);
  }

  inline MqHeader& operator=(MqHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MqHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MqHeader* internal_default_instance() {
    return reinterpret_cast<const MqHeader*>(
               &_MqHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MqHeader* other);
  friend void swap(MqHeader& a, MqHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MqHeader* New() const final {
    return CreateMaybeMessage<MqHeader>(NULL);
  }

  MqHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MqHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MqHeader& from);
  void MergeFrom(const MqHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MqHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes send_routkey = 7;
  void clear_send_routkey();
  static const int kSendRoutkeyFieldNumber = 7;
  const ::std::string& send_routkey() const;
  void set_send_routkey(const ::std::string& value);
  #if LANG_CXX11
  void set_send_routkey(::std::string&& value);
  #endif
  void set_send_routkey(const char* value);
  void set_send_routkey(const void* value, size_t size);
  ::std::string* mutable_send_routkey();
  ::std::string* release_send_routkey();
  void set_allocated_send_routkey(::std::string* send_routkey);

  // bytes recv_routkey = 8;
  void clear_recv_routkey();
  static const int kRecvRoutkeyFieldNumber = 8;
  const ::std::string& recv_routkey() const;
  void set_recv_routkey(const ::std::string& value);
  #if LANG_CXX11
  void set_recv_routkey(::std::string&& value);
  #endif
  void set_recv_routkey(const char* value);
  void set_recv_routkey(const void* value, size_t size);
  ::std::string* mutable_recv_routkey();
  ::std::string* release_recv_routkey();
  void set_allocated_recv_routkey(::std::string* recv_routkey);

  // bytes send_exchange = 9;
  void clear_send_exchange();
  static const int kSendExchangeFieldNumber = 9;
  const ::std::string& send_exchange() const;
  void set_send_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_send_exchange(::std::string&& value);
  #endif
  void set_send_exchange(const char* value);
  void set_send_exchange(const void* value, size_t size);
  ::std::string* mutable_send_exchange();
  ::std::string* release_send_exchange();
  void set_allocated_send_exchange(::std::string* send_exchange);

  // bytes recv_exchange = 10;
  void clear_recv_exchange();
  static const int kRecvExchangeFieldNumber = 10;
  const ::std::string& recv_exchange() const;
  void set_recv_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_recv_exchange(::std::string&& value);
  #endif
  void set_recv_exchange(const char* value);
  void set_recv_exchange(const void* value, size_t size);
  ::std::string* mutable_recv_exchange();
  ::std::string* release_recv_exchange();
  void set_allocated_recv_exchange(::std::string* recv_exchange);

  // int32 cmdtype = 1;
  void clear_cmdtype();
  static const int kCmdtypeFieldNumber = 1;
  ::google::protobuf::int32 cmdtype() const;
  void set_cmdtype(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // uint64 sequenceid = 3;
  void clear_sequenceid();
  static const int kSequenceidFieldNumber = 3;
  ::google::protobuf::uint64 sequenceid() const;
  void set_sequenceid(::google::protobuf::uint64 value);

  // int32 length = 4;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // int32 check_result = 5;
  void clear_check_result();
  static const int kCheckResultFieldNumber = 5;
  ::google::protobuf::int32 check_result() const;
  void set_check_result(::google::protobuf::int32 value);

  // uint64 response_result = 6;
  void clear_response_result();
  static const int kResponseResultFieldNumber = 6;
  ::google::protobuf::uint64 response_result() const;
  void set_response_result(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgHeader.MqHeader)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr send_routkey_;
  ::google::protobuf::internal::ArenaStringPtr recv_routkey_;
  ::google::protobuf::internal::ArenaStringPtr send_exchange_;
  ::google::protobuf::internal::ArenaStringPtr recv_exchange_;
  ::google::protobuf::int32 cmdtype_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 sequenceid_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 check_result_;
  ::google::protobuf::uint64 response_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MsgHeader_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// int32 cmdtype = 1;
inline void Header::clear_cmdtype() {
  cmdtype_ = 0;
}
inline ::google::protobuf::int32 Header::cmdtype() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.cmdtype)
  return cmdtype_;
}
inline void Header::set_cmdtype(::google::protobuf::int32 value) {
  
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.cmdtype)
}

// int32 type = 2;
inline void Header::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Header::type() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.type)
  return type_;
}
inline void Header::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.type)
}

// uint64 sequenceid = 3;
inline void Header::clear_sequenceid() {
  sequenceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::sequenceid() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.sequenceid)
  return sequenceid_;
}
inline void Header::set_sequenceid(::google::protobuf::uint64 value) {
  
  sequenceid_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.sequenceid)
}

// int32 length = 4;
inline void Header::clear_length() {
  length_ = 0;
}
inline ::google::protobuf::int32 Header::length() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.length)
  return length_;
}
inline void Header::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.length)
}

// uint64 check_result = 5;
inline void Header::clear_check_result() {
  check_result_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::check_result() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.check_result)
  return check_result_;
}
inline void Header::set_check_result(::google::protobuf::uint64 value) {
  
  check_result_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.check_result)
}

// int32 response_result = 6;
inline void Header::clear_response_result() {
  response_result_ = 0;
}
inline ::google::protobuf::int32 Header::response_result() const {
  // @@protoc_insertion_point(field_get:MsgHeader.Header.response_result)
  return response_result_;
}
inline void Header::set_response_result(::google::protobuf::int32 value) {
  
  response_result_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.Header.response_result)
}

// -------------------------------------------------------------------

// MqHeader

// int32 cmdtype = 1;
inline void MqHeader::clear_cmdtype() {
  cmdtype_ = 0;
}
inline ::google::protobuf::int32 MqHeader::cmdtype() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.cmdtype)
  return cmdtype_;
}
inline void MqHeader::set_cmdtype(::google::protobuf::int32 value) {
  
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.cmdtype)
}

// int32 type = 2;
inline void MqHeader::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 MqHeader::type() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.type)
  return type_;
}
inline void MqHeader::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.type)
}

// uint64 sequenceid = 3;
inline void MqHeader::clear_sequenceid() {
  sequenceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MqHeader::sequenceid() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.sequenceid)
  return sequenceid_;
}
inline void MqHeader::set_sequenceid(::google::protobuf::uint64 value) {
  
  sequenceid_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.sequenceid)
}

// int32 length = 4;
inline void MqHeader::clear_length() {
  length_ = 0;
}
inline ::google::protobuf::int32 MqHeader::length() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.length)
  return length_;
}
inline void MqHeader::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.length)
}

// int32 check_result = 5;
inline void MqHeader::clear_check_result() {
  check_result_ = 0;
}
inline ::google::protobuf::int32 MqHeader::check_result() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.check_result)
  return check_result_;
}
inline void MqHeader::set_check_result(::google::protobuf::int32 value) {
  
  check_result_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.check_result)
}

// uint64 response_result = 6;
inline void MqHeader::clear_response_result() {
  response_result_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MqHeader::response_result() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.response_result)
  return response_result_;
}
inline void MqHeader::set_response_result(::google::protobuf::uint64 value) {
  
  response_result_ = value;
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.response_result)
}

// bytes send_routkey = 7;
inline void MqHeader::clear_send_routkey() {
  send_routkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MqHeader::send_routkey() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.send_routkey)
  return send_routkey_.GetNoArena();
}
inline void MqHeader::set_send_routkey(const ::std::string& value) {
  
  send_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.send_routkey)
}
#if LANG_CXX11
inline void MqHeader::set_send_routkey(::std::string&& value) {
  
  send_routkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgHeader.MqHeader.send_routkey)
}
#endif
inline void MqHeader::set_send_routkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  send_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgHeader.MqHeader.send_routkey)
}
inline void MqHeader::set_send_routkey(const void* value, size_t size) {
  
  send_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgHeader.MqHeader.send_routkey)
}
inline ::std::string* MqHeader::mutable_send_routkey() {
  
  // @@protoc_insertion_point(field_mutable:MsgHeader.MqHeader.send_routkey)
  return send_routkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MqHeader::release_send_routkey() {
  // @@protoc_insertion_point(field_release:MsgHeader.MqHeader.send_routkey)
  
  return send_routkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MqHeader::set_allocated_send_routkey(::std::string* send_routkey) {
  if (send_routkey != NULL) {
    
  } else {
    
  }
  send_routkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), send_routkey);
  // @@protoc_insertion_point(field_set_allocated:MsgHeader.MqHeader.send_routkey)
}

// bytes recv_routkey = 8;
inline void MqHeader::clear_recv_routkey() {
  recv_routkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MqHeader::recv_routkey() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.recv_routkey)
  return recv_routkey_.GetNoArena();
}
inline void MqHeader::set_recv_routkey(const ::std::string& value) {
  
  recv_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.recv_routkey)
}
#if LANG_CXX11
inline void MqHeader::set_recv_routkey(::std::string&& value) {
  
  recv_routkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgHeader.MqHeader.recv_routkey)
}
#endif
inline void MqHeader::set_recv_routkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  recv_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgHeader.MqHeader.recv_routkey)
}
inline void MqHeader::set_recv_routkey(const void* value, size_t size) {
  
  recv_routkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgHeader.MqHeader.recv_routkey)
}
inline ::std::string* MqHeader::mutable_recv_routkey() {
  
  // @@protoc_insertion_point(field_mutable:MsgHeader.MqHeader.recv_routkey)
  return recv_routkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MqHeader::release_recv_routkey() {
  // @@protoc_insertion_point(field_release:MsgHeader.MqHeader.recv_routkey)
  
  return recv_routkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MqHeader::set_allocated_recv_routkey(::std::string* recv_routkey) {
  if (recv_routkey != NULL) {
    
  } else {
    
  }
  recv_routkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recv_routkey);
  // @@protoc_insertion_point(field_set_allocated:MsgHeader.MqHeader.recv_routkey)
}

// bytes send_exchange = 9;
inline void MqHeader::clear_send_exchange() {
  send_exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MqHeader::send_exchange() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.send_exchange)
  return send_exchange_.GetNoArena();
}
inline void MqHeader::set_send_exchange(const ::std::string& value) {
  
  send_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.send_exchange)
}
#if LANG_CXX11
inline void MqHeader::set_send_exchange(::std::string&& value) {
  
  send_exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgHeader.MqHeader.send_exchange)
}
#endif
inline void MqHeader::set_send_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  send_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgHeader.MqHeader.send_exchange)
}
inline void MqHeader::set_send_exchange(const void* value, size_t size) {
  
  send_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgHeader.MqHeader.send_exchange)
}
inline ::std::string* MqHeader::mutable_send_exchange() {
  
  // @@protoc_insertion_point(field_mutable:MsgHeader.MqHeader.send_exchange)
  return send_exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MqHeader::release_send_exchange() {
  // @@protoc_insertion_point(field_release:MsgHeader.MqHeader.send_exchange)
  
  return send_exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MqHeader::set_allocated_send_exchange(::std::string* send_exchange) {
  if (send_exchange != NULL) {
    
  } else {
    
  }
  send_exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), send_exchange);
  // @@protoc_insertion_point(field_set_allocated:MsgHeader.MqHeader.send_exchange)
}

// bytes recv_exchange = 10;
inline void MqHeader::clear_recv_exchange() {
  recv_exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MqHeader::recv_exchange() const {
  // @@protoc_insertion_point(field_get:MsgHeader.MqHeader.recv_exchange)
  return recv_exchange_.GetNoArena();
}
inline void MqHeader::set_recv_exchange(const ::std::string& value) {
  
  recv_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgHeader.MqHeader.recv_exchange)
}
#if LANG_CXX11
inline void MqHeader::set_recv_exchange(::std::string&& value) {
  
  recv_exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgHeader.MqHeader.recv_exchange)
}
#endif
inline void MqHeader::set_recv_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  recv_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgHeader.MqHeader.recv_exchange)
}
inline void MqHeader::set_recv_exchange(const void* value, size_t size) {
  
  recv_exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgHeader.MqHeader.recv_exchange)
}
inline ::std::string* MqHeader::mutable_recv_exchange() {
  
  // @@protoc_insertion_point(field_mutable:MsgHeader.MqHeader.recv_exchange)
  return recv_exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MqHeader::release_recv_exchange() {
  // @@protoc_insertion_point(field_release:MsgHeader.MqHeader.recv_exchange)
  
  return recv_exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MqHeader::set_allocated_recv_exchange(::std::string* recv_exchange) {
  if (recv_exchange != NULL) {
    
  } else {
    
  }
  recv_exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recv_exchange);
  // @@protoc_insertion_point(field_set_allocated:MsgHeader.MqHeader.recv_exchange)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgHeader

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_MsgHeader_2eproto
