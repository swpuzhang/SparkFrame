// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMsg.proto

#ifndef PROTOBUF_INCLUDED_GameMsg_2eproto
#define PROTOBUF_INCLUDED_GameMsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GameMsg_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_GameMsg_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[104]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_GameMsg_2eproto();
namespace GameMsg {
class ActivePlayerRequest;
class ActivePlayerRequestDefaultTypeInternal;
extern ActivePlayerRequestDefaultTypeInternal _ActivePlayerRequest_default_instance_;
class ActivePlayerResponse;
class ActivePlayerResponseDefaultTypeInternal;
extern ActivePlayerResponseDefaultTypeInternal _ActivePlayerResponse_default_instance_;
class ApplyChatRequest;
class ApplyChatRequestDefaultTypeInternal;
extern ApplyChatRequestDefaultTypeInternal _ApplyChatRequest_default_instance_;
class ApplyChatResponse;
class ApplyChatResponseDefaultTypeInternal;
extern ApplyChatResponseDefaultTypeInternal _ApplyChatResponse_default_instance_;
class ApplyCloseAccountBoxRequest;
class ApplyCloseAccountBoxRequestDefaultTypeInternal;
extern ApplyCloseAccountBoxRequestDefaultTypeInternal _ApplyCloseAccountBoxRequest_default_instance_;
class ApplyCloseAccountBoxResponse;
class ApplyCloseAccountBoxResponseDefaultTypeInternal;
extern ApplyCloseAccountBoxResponseDefaultTypeInternal _ApplyCloseAccountBoxResponse_default_instance_;
class ApplyDeclareRequest;
class ApplyDeclareRequestDefaultTypeInternal;
extern ApplyDeclareRequestDefaultTypeInternal _ApplyDeclareRequest_default_instance_;
class ApplyDeclareResponse;
class ApplyDeclareResponseDefaultTypeInternal;
extern ApplyDeclareResponseDefaultTypeInternal _ApplyDeclareResponse_default_instance_;
class ApplyDigCardRequest;
class ApplyDigCardRequestDefaultTypeInternal;
extern ApplyDigCardRequestDefaultTypeInternal _ApplyDigCardRequest_default_instance_;
class ApplyDigCardResponse;
class ApplyDigCardResponseDefaultTypeInternal;
extern ApplyDigCardResponseDefaultTypeInternal _ApplyDigCardResponse_default_instance_;
class ApplyDropRequest;
class ApplyDropRequestDefaultTypeInternal;
extern ApplyDropRequestDefaultTypeInternal _ApplyDropRequest_default_instance_;
class ApplyDropResponse;
class ApplyDropResponseDefaultTypeInternal;
extern ApplyDropResponseDefaultTypeInternal _ApplyDropResponse_default_instance_;
class ApplyEnterRoomRequest;
class ApplyEnterRoomRequestDefaultTypeInternal;
extern ApplyEnterRoomRequestDefaultTypeInternal _ApplyEnterRoomRequest_default_instance_;
class ApplyEnterRoomResponse;
class ApplyEnterRoomResponseDefaultTypeInternal;
extern ApplyEnterRoomResponseDefaultTypeInternal _ApplyEnterRoomResponse_default_instance_;
class ApplyFaceShowRequest;
class ApplyFaceShowRequestDefaultTypeInternal;
extern ApplyFaceShowRequestDefaultTypeInternal _ApplyFaceShowRequest_default_instance_;
class ApplyFaceShowResponse;
class ApplyFaceShowResponseDefaultTypeInternal;
extern ApplyFaceShowResponseDefaultTypeInternal _ApplyFaceShowResponse_default_instance_;
class ApplyFlushRoomRequest;
class ApplyFlushRoomRequestDefaultTypeInternal;
extern ApplyFlushRoomRequestDefaultTypeInternal _ApplyFlushRoomRequest_default_instance_;
class ApplyFlushRoomResponse;
class ApplyFlushRoomResponseDefaultTypeInternal;
extern ApplyFlushRoomResponseDefaultTypeInternal _ApplyFlushRoomResponse_default_instance_;
class ApplyLoseDeclareRequest;
class ApplyLoseDeclareRequestDefaultTypeInternal;
extern ApplyLoseDeclareRequestDefaultTypeInternal _ApplyLoseDeclareRequest_default_instance_;
class ApplyLoseDeclareResponse;
class ApplyLoseDeclareResponseDefaultTypeInternal;
extern ApplyLoseDeclareResponseDefaultTypeInternal _ApplyLoseDeclareResponse_default_instance_;
class ApplyPostCardRequest;
class ApplyPostCardRequestDefaultTypeInternal;
extern ApplyPostCardRequestDefaultTypeInternal _ApplyPostCardRequest_default_instance_;
class ApplyPostCardResponse;
class ApplyPostCardResponseDefaultTypeInternal;
extern ApplyPostCardResponseDefaultTypeInternal _ApplyPostCardResponse_default_instance_;
class ApplyPresentChipsRequest;
class ApplyPresentChipsRequestDefaultTypeInternal;
extern ApplyPresentChipsRequestDefaultTypeInternal _ApplyPresentChipsRequest_default_instance_;
class ApplyPresentChipsResponse;
class ApplyPresentChipsResponseDefaultTypeInternal;
extern ApplyPresentChipsResponseDefaultTypeInternal _ApplyPresentChipsResponse_default_instance_;
class ApplyPresentGiftNewInterRequest;
class ApplyPresentGiftNewInterRequestDefaultTypeInternal;
extern ApplyPresentGiftNewInterRequestDefaultTypeInternal _ApplyPresentGiftNewInterRequest_default_instance_;
class ApplyPresentGiftNewInterResponse;
class ApplyPresentGiftNewInterResponseDefaultTypeInternal;
extern ApplyPresentGiftNewInterResponseDefaultTypeInternal _ApplyPresentGiftNewInterResponse_default_instance_;
class ApplyPresentGiftRequest;
class ApplyPresentGiftRequestDefaultTypeInternal;
extern ApplyPresentGiftRequestDefaultTypeInternal _ApplyPresentGiftRequest_default_instance_;
class ApplyPresentGiftResponse;
class ApplyPresentGiftResponseDefaultTypeInternal;
extern ApplyPresentGiftResponseDefaultTypeInternal _ApplyPresentGiftResponse_default_instance_;
class ApplyQuitRoomRequest;
class ApplyQuitRoomRequestDefaultTypeInternal;
extern ApplyQuitRoomRequestDefaultTypeInternal _ApplyQuitRoomRequest_default_instance_;
class ApplyQuitRoomResponse;
class ApplyQuitRoomResponseDefaultTypeInternal;
extern ApplyQuitRoomResponseDefaultTypeInternal _ApplyQuitRoomResponse_default_instance_;
class ApplyRoomStatusRequest;
class ApplyRoomStatusRequestDefaultTypeInternal;
extern ApplyRoomStatusRequestDefaultTypeInternal _ApplyRoomStatusRequest_default_instance_;
class ApplyRoomStatusResponse;
class ApplyRoomStatusResponseDefaultTypeInternal;
extern ApplyRoomStatusResponseDefaultTypeInternal _ApplyRoomStatusResponse_default_instance_;
class ApplySeatRequest;
class ApplySeatRequestDefaultTypeInternal;
extern ApplySeatRequestDefaultTypeInternal _ApplySeatRequest_default_instance_;
class ApplySeatResponse;
class ApplySeatResponseDefaultTypeInternal;
extern ApplySeatResponseDefaultTypeInternal _ApplySeatResponse_default_instance_;
class ApplyStandupRequest;
class ApplyStandupRequestDefaultTypeInternal;
extern ApplyStandupRequestDefaultTypeInternal _ApplyStandupRequest_default_instance_;
class ApplyStandupResponse;
class ApplyStandupResponseDefaultTypeInternal;
extern ApplyStandupResponseDefaultTypeInternal _ApplyStandupResponse_default_instance_;
class ApplyTransmitMessageRequest;
class ApplyTransmitMessageRequestDefaultTypeInternal;
extern ApplyTransmitMessageRequestDefaultTypeInternal _ApplyTransmitMessageRequest_default_instance_;
class ApplyTransmitMessageResponse;
class ApplyTransmitMessageResponseDefaultTypeInternal;
extern ApplyTransmitMessageResponseDefaultTypeInternal _ApplyTransmitMessageResponse_default_instance_;
class ApplyTrusteeOffRequest;
class ApplyTrusteeOffRequestDefaultTypeInternal;
extern ApplyTrusteeOffRequestDefaultTypeInternal _ApplyTrusteeOffRequest_default_instance_;
class ApplyTrusteeOffResponse;
class ApplyTrusteeOffResponseDefaultTypeInternal;
extern ApplyTrusteeOffResponseDefaultTypeInternal _ApplyTrusteeOffResponse_default_instance_;
class ApplyTrusteeOnRequest;
class ApplyTrusteeOnRequestDefaultTypeInternal;
extern ApplyTrusteeOnRequestDefaultTypeInternal _ApplyTrusteeOnRequest_default_instance_;
class ApplyTrusteeOnResponse;
class ApplyTrusteeOnResponseDefaultTypeInternal;
extern ApplyTrusteeOnResponseDefaultTypeInternal _ApplyTrusteeOnResponse_default_instance_;
class ApplyUsePropsRequest;
class ApplyUsePropsRequestDefaultTypeInternal;
extern ApplyUsePropsRequestDefaultTypeInternal _ApplyUsePropsRequest_default_instance_;
class ApplyUsePropsResponse;
class ApplyUsePropsResponseDefaultTypeInternal;
extern ApplyUsePropsResponseDefaultTypeInternal _ApplyUsePropsResponse_default_instance_;
class DealCardsReqeust;
class DealCardsReqeustDefaultTypeInternal;
extern DealCardsReqeustDefaultTypeInternal _DealCardsReqeust_default_instance_;
class DealCardsResponse;
class DealCardsResponseDefaultTypeInternal;
extern DealCardsResponseDefaultTypeInternal _DealCardsResponse_default_instance_;
class EmptyGameRequest;
class EmptyGameRequestDefaultTypeInternal;
extern EmptyGameRequestDefaultTypeInternal _EmptyGameRequest_default_instance_;
class FlushRoomRequest;
class FlushRoomRequestDefaultTypeInternal;
extern FlushRoomRequestDefaultTypeInternal _FlushRoomRequest_default_instance_;
class FlushRoomResponse;
class FlushRoomResponseDefaultTypeInternal;
extern FlushRoomResponseDefaultTypeInternal _FlushRoomResponse_default_instance_;
class GameOverRequest;
class GameOverRequestDefaultTypeInternal;
extern GameOverRequestDefaultTypeInternal _GameOverRequest_default_instance_;
class GameOverResponse;
class GameOverResponseDefaultTypeInternal;
extern GameOverResponseDefaultTypeInternal _GameOverResponse_default_instance_;
class LoserInfo;
class LoserInfoDefaultTypeInternal;
extern LoserInfoDefaultTypeInternal _LoserInfo_default_instance_;
class MsgCard;
class MsgCardDefaultTypeInternal;
extern MsgCardDefaultTypeInternal _MsgCard_default_instance_;
class NormalGameResponse;
class NormalGameResponseDefaultTypeInternal;
extern NormalGameResponseDefaultTypeInternal _NormalGameResponse_default_instance_;
class NotifyWaitGameRequest;
class NotifyWaitGameRequestDefaultTypeInternal;
extern NotifyWaitGameRequestDefaultTypeInternal _NotifyWaitGameRequest_default_instance_;
class NotifyWaitGameResponse;
class NotifyWaitGameResponseDefaultTypeInternal;
extern NotifyWaitGameResponseDefaultTypeInternal _NotifyWaitGameResponse_default_instance_;
class PB_CardGroup;
class PB_CardGroupDefaultTypeInternal;
extern PB_CardGroupDefaultTypeInternal _PB_CardGroup_default_instance_;
class PB_IngamePlayer;
class PB_IngamePlayerDefaultTypeInternal;
extern PB_IngamePlayerDefaultTypeInternal _PB_IngamePlayer_default_instance_;
class PlayerBuyinRequest;
class PlayerBuyinRequestDefaultTypeInternal;
extern PlayerBuyinRequestDefaultTypeInternal _PlayerBuyinRequest_default_instance_;
class PlayerBuyinResponse;
class PlayerBuyinResponseDefaultTypeInternal;
extern PlayerBuyinResponseDefaultTypeInternal _PlayerBuyinResponse_default_instance_;
class PlayerChatRequest;
class PlayerChatRequestDefaultTypeInternal;
extern PlayerChatRequestDefaultTypeInternal _PlayerChatRequest_default_instance_;
class PlayerChatResponse;
class PlayerChatResponseDefaultTypeInternal;
extern PlayerChatResponseDefaultTypeInternal _PlayerChatResponse_default_instance_;
class PlayerChips;
class PlayerChipsDefaultTypeInternal;
extern PlayerChipsDefaultTypeInternal _PlayerChips_default_instance_;
class PlayerCloseAccountBoxRequest;
class PlayerCloseAccountBoxRequestDefaultTypeInternal;
extern PlayerCloseAccountBoxRequestDefaultTypeInternal _PlayerCloseAccountBoxRequest_default_instance_;
class PlayerCloseAccountBoxResponse;
class PlayerCloseAccountBoxResponseDefaultTypeInternal;
extern PlayerCloseAccountBoxResponseDefaultTypeInternal _PlayerCloseAccountBoxResponse_default_instance_;
class PlayerDeclareRequest;
class PlayerDeclareRequestDefaultTypeInternal;
extern PlayerDeclareRequestDefaultTypeInternal _PlayerDeclareRequest_default_instance_;
class PlayerDeclareResponse;
class PlayerDeclareResponseDefaultTypeInternal;
extern PlayerDeclareResponseDefaultTypeInternal _PlayerDeclareResponse_default_instance_;
class PlayerDigCardRequest;
class PlayerDigCardRequestDefaultTypeInternal;
extern PlayerDigCardRequestDefaultTypeInternal _PlayerDigCardRequest_default_instance_;
class PlayerDigCardResponse;
class PlayerDigCardResponseDefaultTypeInternal;
extern PlayerDigCardResponseDefaultTypeInternal _PlayerDigCardResponse_default_instance_;
class PlayerDropRequest;
class PlayerDropRequestDefaultTypeInternal;
extern PlayerDropRequestDefaultTypeInternal _PlayerDropRequest_default_instance_;
class PlayerDropResponse;
class PlayerDropResponseDefaultTypeInternal;
extern PlayerDropResponseDefaultTypeInternal _PlayerDropResponse_default_instance_;
class PlayerEnterRoomRequest;
class PlayerEnterRoomRequestDefaultTypeInternal;
extern PlayerEnterRoomRequestDefaultTypeInternal _PlayerEnterRoomRequest_default_instance_;
class PlayerEnterRoomResponse;
class PlayerEnterRoomResponseDefaultTypeInternal;
extern PlayerEnterRoomResponseDefaultTypeInternal _PlayerEnterRoomResponse_default_instance_;
class PlayerFaceShowRequest;
class PlayerFaceShowRequestDefaultTypeInternal;
extern PlayerFaceShowRequestDefaultTypeInternal _PlayerFaceShowRequest_default_instance_;
class PlayerFaceShowResponse;
class PlayerFaceShowResponseDefaultTypeInternal;
extern PlayerFaceShowResponseDefaultTypeInternal _PlayerFaceShowResponse_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class PlayerLoseDeclareRequest;
class PlayerLoseDeclareRequestDefaultTypeInternal;
extern PlayerLoseDeclareRequestDefaultTypeInternal _PlayerLoseDeclareRequest_default_instance_;
class PlayerLoseDeclareResponse;
class PlayerLoseDeclareResponseDefaultTypeInternal;
extern PlayerLoseDeclareResponseDefaultTypeInternal _PlayerLoseDeclareResponse_default_instance_;
class PlayerPostCardRequest;
class PlayerPostCardRequestDefaultTypeInternal;
extern PlayerPostCardRequestDefaultTypeInternal _PlayerPostCardRequest_default_instance_;
class PlayerPostCardResponse;
class PlayerPostCardResponseDefaultTypeInternal;
extern PlayerPostCardResponseDefaultTypeInternal _PlayerPostCardResponse_default_instance_;
class PlayerPresentChipsRequest;
class PlayerPresentChipsRequestDefaultTypeInternal;
extern PlayerPresentChipsRequestDefaultTypeInternal _PlayerPresentChipsRequest_default_instance_;
class PlayerPresentChipsResponse;
class PlayerPresentChipsResponseDefaultTypeInternal;
extern PlayerPresentChipsResponseDefaultTypeInternal _PlayerPresentChipsResponse_default_instance_;
class PlayerPresentGiftNewInterRequest;
class PlayerPresentGiftNewInterRequestDefaultTypeInternal;
extern PlayerPresentGiftNewInterRequestDefaultTypeInternal _PlayerPresentGiftNewInterRequest_default_instance_;
class PlayerPresentGiftNewInterResponse;
class PlayerPresentGiftNewInterResponseDefaultTypeInternal;
extern PlayerPresentGiftNewInterResponseDefaultTypeInternal _PlayerPresentGiftNewInterResponse_default_instance_;
class PlayerPresentGiftRequest;
class PlayerPresentGiftRequestDefaultTypeInternal;
extern PlayerPresentGiftRequestDefaultTypeInternal _PlayerPresentGiftRequest_default_instance_;
class PlayerPresentGiftResponse;
class PlayerPresentGiftResponseDefaultTypeInternal;
extern PlayerPresentGiftResponseDefaultTypeInternal _PlayerPresentGiftResponse_default_instance_;
class PlayerQuitRoomRequest;
class PlayerQuitRoomRequestDefaultTypeInternal;
extern PlayerQuitRoomRequestDefaultTypeInternal _PlayerQuitRoomRequest_default_instance_;
class PlayerQuitRoomResponse;
class PlayerQuitRoomResponseDefaultTypeInternal;
extern PlayerQuitRoomResponseDefaultTypeInternal _PlayerQuitRoomResponse_default_instance_;
class PlayerSitDownRequest;
class PlayerSitDownRequestDefaultTypeInternal;
extern PlayerSitDownRequestDefaultTypeInternal _PlayerSitDownRequest_default_instance_;
class PlayerSitDownResponse;
class PlayerSitDownResponseDefaultTypeInternal;
extern PlayerSitDownResponseDefaultTypeInternal _PlayerSitDownResponse_default_instance_;
class PlayerStandUpRequest;
class PlayerStandUpRequestDefaultTypeInternal;
extern PlayerStandUpRequestDefaultTypeInternal _PlayerStandUpRequest_default_instance_;
class PlayerStandUpResponse;
class PlayerStandUpResponseDefaultTypeInternal;
extern PlayerStandUpResponseDefaultTypeInternal _PlayerStandUpResponse_default_instance_;
class PlayerTransmitMessageRequest;
class PlayerTransmitMessageRequestDefaultTypeInternal;
extern PlayerTransmitMessageRequestDefaultTypeInternal _PlayerTransmitMessageRequest_default_instance_;
class PlayerTransmitMessageResponse;
class PlayerTransmitMessageResponseDefaultTypeInternal;
extern PlayerTransmitMessageResponseDefaultTypeInternal _PlayerTransmitMessageResponse_default_instance_;
class PlayerTrusteeOffRequest;
class PlayerTrusteeOffRequestDefaultTypeInternal;
extern PlayerTrusteeOffRequestDefaultTypeInternal _PlayerTrusteeOffRequest_default_instance_;
class PlayerTrusteeOffResponse;
class PlayerTrusteeOffResponseDefaultTypeInternal;
extern PlayerTrusteeOffResponseDefaultTypeInternal _PlayerTrusteeOffResponse_default_instance_;
class PlayerTrusteeOnRequest;
class PlayerTrusteeOnRequestDefaultTypeInternal;
extern PlayerTrusteeOnRequestDefaultTypeInternal _PlayerTrusteeOnRequest_default_instance_;
class PlayerTrusteeOnResponse;
class PlayerTrusteeOnResponseDefaultTypeInternal;
extern PlayerTrusteeOnResponseDefaultTypeInternal _PlayerTrusteeOnResponse_default_instance_;
class PlayerUsePropsRequest;
class PlayerUsePropsRequestDefaultTypeInternal;
extern PlayerUsePropsRequestDefaultTypeInternal _PlayerUsePropsRequest_default_instance_;
class PlayerUsePropsResponse;
class PlayerUsePropsResponseDefaultTypeInternal;
extern PlayerUsePropsResponseDefaultTypeInternal _PlayerUsePropsResponse_default_instance_;
class ReadyStartGameRequest;
class ReadyStartGameRequestDefaultTypeInternal;
extern ReadyStartGameRequestDefaultTypeInternal _ReadyStartGameRequest_default_instance_;
class ReadyStartGameResponse;
class ReadyStartGameResponseDefaultTypeInternal;
extern ReadyStartGameResponseDefaultTypeInternal _ReadyStartGameResponse_default_instance_;
class ShuffleCardRequest;
class ShuffleCardRequestDefaultTypeInternal;
extern ShuffleCardRequestDefaultTypeInternal _ShuffleCardRequest_default_instance_;
class ShuffleCardResponse;
class ShuffleCardResponseDefaultTypeInternal;
extern ShuffleCardResponseDefaultTypeInternal _ShuffleCardResponse_default_instance_;
}  // namespace GameMsg
namespace google {
namespace protobuf {
template<> ::GameMsg::ActivePlayerRequest* Arena::CreateMaybeMessage<::GameMsg::ActivePlayerRequest>(Arena*);
template<> ::GameMsg::ActivePlayerResponse* Arena::CreateMaybeMessage<::GameMsg::ActivePlayerResponse>(Arena*);
template<> ::GameMsg::ApplyChatRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyChatRequest>(Arena*);
template<> ::GameMsg::ApplyChatResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyChatResponse>(Arena*);
template<> ::GameMsg::ApplyCloseAccountBoxRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyCloseAccountBoxRequest>(Arena*);
template<> ::GameMsg::ApplyCloseAccountBoxResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyCloseAccountBoxResponse>(Arena*);
template<> ::GameMsg::ApplyDeclareRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyDeclareRequest>(Arena*);
template<> ::GameMsg::ApplyDeclareResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyDeclareResponse>(Arena*);
template<> ::GameMsg::ApplyDigCardRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyDigCardRequest>(Arena*);
template<> ::GameMsg::ApplyDigCardResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyDigCardResponse>(Arena*);
template<> ::GameMsg::ApplyDropRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyDropRequest>(Arena*);
template<> ::GameMsg::ApplyDropResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyDropResponse>(Arena*);
template<> ::GameMsg::ApplyEnterRoomRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyEnterRoomRequest>(Arena*);
template<> ::GameMsg::ApplyEnterRoomResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyEnterRoomResponse>(Arena*);
template<> ::GameMsg::ApplyFaceShowRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyFaceShowRequest>(Arena*);
template<> ::GameMsg::ApplyFaceShowResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyFaceShowResponse>(Arena*);
template<> ::GameMsg::ApplyFlushRoomRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyFlushRoomRequest>(Arena*);
template<> ::GameMsg::ApplyFlushRoomResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyFlushRoomResponse>(Arena*);
template<> ::GameMsg::ApplyLoseDeclareRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyLoseDeclareRequest>(Arena*);
template<> ::GameMsg::ApplyLoseDeclareResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyLoseDeclareResponse>(Arena*);
template<> ::GameMsg::ApplyPostCardRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyPostCardRequest>(Arena*);
template<> ::GameMsg::ApplyPostCardResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyPostCardResponse>(Arena*);
template<> ::GameMsg::ApplyPresentChipsRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentChipsRequest>(Arena*);
template<> ::GameMsg::ApplyPresentChipsResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentChipsResponse>(Arena*);
template<> ::GameMsg::ApplyPresentGiftNewInterRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentGiftNewInterRequest>(Arena*);
template<> ::GameMsg::ApplyPresentGiftNewInterResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentGiftNewInterResponse>(Arena*);
template<> ::GameMsg::ApplyPresentGiftRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentGiftRequest>(Arena*);
template<> ::GameMsg::ApplyPresentGiftResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyPresentGiftResponse>(Arena*);
template<> ::GameMsg::ApplyQuitRoomRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyQuitRoomRequest>(Arena*);
template<> ::GameMsg::ApplyQuitRoomResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyQuitRoomResponse>(Arena*);
template<> ::GameMsg::ApplyRoomStatusRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyRoomStatusRequest>(Arena*);
template<> ::GameMsg::ApplyRoomStatusResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyRoomStatusResponse>(Arena*);
template<> ::GameMsg::ApplySeatRequest* Arena::CreateMaybeMessage<::GameMsg::ApplySeatRequest>(Arena*);
template<> ::GameMsg::ApplySeatResponse* Arena::CreateMaybeMessage<::GameMsg::ApplySeatResponse>(Arena*);
template<> ::GameMsg::ApplyStandupRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyStandupRequest>(Arena*);
template<> ::GameMsg::ApplyStandupResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyStandupResponse>(Arena*);
template<> ::GameMsg::ApplyTransmitMessageRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyTransmitMessageRequest>(Arena*);
template<> ::GameMsg::ApplyTransmitMessageResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyTransmitMessageResponse>(Arena*);
template<> ::GameMsg::ApplyTrusteeOffRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyTrusteeOffRequest>(Arena*);
template<> ::GameMsg::ApplyTrusteeOffResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyTrusteeOffResponse>(Arena*);
template<> ::GameMsg::ApplyTrusteeOnRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyTrusteeOnRequest>(Arena*);
template<> ::GameMsg::ApplyTrusteeOnResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyTrusteeOnResponse>(Arena*);
template<> ::GameMsg::ApplyUsePropsRequest* Arena::CreateMaybeMessage<::GameMsg::ApplyUsePropsRequest>(Arena*);
template<> ::GameMsg::ApplyUsePropsResponse* Arena::CreateMaybeMessage<::GameMsg::ApplyUsePropsResponse>(Arena*);
template<> ::GameMsg::DealCardsReqeust* Arena::CreateMaybeMessage<::GameMsg::DealCardsReqeust>(Arena*);
template<> ::GameMsg::DealCardsResponse* Arena::CreateMaybeMessage<::GameMsg::DealCardsResponse>(Arena*);
template<> ::GameMsg::EmptyGameRequest* Arena::CreateMaybeMessage<::GameMsg::EmptyGameRequest>(Arena*);
template<> ::GameMsg::FlushRoomRequest* Arena::CreateMaybeMessage<::GameMsg::FlushRoomRequest>(Arena*);
template<> ::GameMsg::FlushRoomResponse* Arena::CreateMaybeMessage<::GameMsg::FlushRoomResponse>(Arena*);
template<> ::GameMsg::GameOverRequest* Arena::CreateMaybeMessage<::GameMsg::GameOverRequest>(Arena*);
template<> ::GameMsg::GameOverResponse* Arena::CreateMaybeMessage<::GameMsg::GameOverResponse>(Arena*);
template<> ::GameMsg::LoserInfo* Arena::CreateMaybeMessage<::GameMsg::LoserInfo>(Arena*);
template<> ::GameMsg::MsgCard* Arena::CreateMaybeMessage<::GameMsg::MsgCard>(Arena*);
template<> ::GameMsg::NormalGameResponse* Arena::CreateMaybeMessage<::GameMsg::NormalGameResponse>(Arena*);
template<> ::GameMsg::NotifyWaitGameRequest* Arena::CreateMaybeMessage<::GameMsg::NotifyWaitGameRequest>(Arena*);
template<> ::GameMsg::NotifyWaitGameResponse* Arena::CreateMaybeMessage<::GameMsg::NotifyWaitGameResponse>(Arena*);
template<> ::GameMsg::PB_CardGroup* Arena::CreateMaybeMessage<::GameMsg::PB_CardGroup>(Arena*);
template<> ::GameMsg::PB_IngamePlayer* Arena::CreateMaybeMessage<::GameMsg::PB_IngamePlayer>(Arena*);
template<> ::GameMsg::PlayerBuyinRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerBuyinRequest>(Arena*);
template<> ::GameMsg::PlayerBuyinResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerBuyinResponse>(Arena*);
template<> ::GameMsg::PlayerChatRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerChatRequest>(Arena*);
template<> ::GameMsg::PlayerChatResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerChatResponse>(Arena*);
template<> ::GameMsg::PlayerChips* Arena::CreateMaybeMessage<::GameMsg::PlayerChips>(Arena*);
template<> ::GameMsg::PlayerCloseAccountBoxRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerCloseAccountBoxRequest>(Arena*);
template<> ::GameMsg::PlayerCloseAccountBoxResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerCloseAccountBoxResponse>(Arena*);
template<> ::GameMsg::PlayerDeclareRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerDeclareRequest>(Arena*);
template<> ::GameMsg::PlayerDeclareResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerDeclareResponse>(Arena*);
template<> ::GameMsg::PlayerDigCardRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerDigCardRequest>(Arena*);
template<> ::GameMsg::PlayerDigCardResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerDigCardResponse>(Arena*);
template<> ::GameMsg::PlayerDropRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerDropRequest>(Arena*);
template<> ::GameMsg::PlayerDropResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerDropResponse>(Arena*);
template<> ::GameMsg::PlayerEnterRoomRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerEnterRoomRequest>(Arena*);
template<> ::GameMsg::PlayerEnterRoomResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerEnterRoomResponse>(Arena*);
template<> ::GameMsg::PlayerFaceShowRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerFaceShowRequest>(Arena*);
template<> ::GameMsg::PlayerFaceShowResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerFaceShowResponse>(Arena*);
template<> ::GameMsg::PlayerInfo* Arena::CreateMaybeMessage<::GameMsg::PlayerInfo>(Arena*);
template<> ::GameMsg::PlayerLoseDeclareRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerLoseDeclareRequest>(Arena*);
template<> ::GameMsg::PlayerLoseDeclareResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerLoseDeclareResponse>(Arena*);
template<> ::GameMsg::PlayerPostCardRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerPostCardRequest>(Arena*);
template<> ::GameMsg::PlayerPostCardResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerPostCardResponse>(Arena*);
template<> ::GameMsg::PlayerPresentChipsRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentChipsRequest>(Arena*);
template<> ::GameMsg::PlayerPresentChipsResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentChipsResponse>(Arena*);
template<> ::GameMsg::PlayerPresentGiftNewInterRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentGiftNewInterRequest>(Arena*);
template<> ::GameMsg::PlayerPresentGiftNewInterResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentGiftNewInterResponse>(Arena*);
template<> ::GameMsg::PlayerPresentGiftRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentGiftRequest>(Arena*);
template<> ::GameMsg::PlayerPresentGiftResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerPresentGiftResponse>(Arena*);
template<> ::GameMsg::PlayerQuitRoomRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerQuitRoomRequest>(Arena*);
template<> ::GameMsg::PlayerQuitRoomResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerQuitRoomResponse>(Arena*);
template<> ::GameMsg::PlayerSitDownRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerSitDownRequest>(Arena*);
template<> ::GameMsg::PlayerSitDownResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerSitDownResponse>(Arena*);
template<> ::GameMsg::PlayerStandUpRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerStandUpRequest>(Arena*);
template<> ::GameMsg::PlayerStandUpResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerStandUpResponse>(Arena*);
template<> ::GameMsg::PlayerTransmitMessageRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerTransmitMessageRequest>(Arena*);
template<> ::GameMsg::PlayerTransmitMessageResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerTransmitMessageResponse>(Arena*);
template<> ::GameMsg::PlayerTrusteeOffRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerTrusteeOffRequest>(Arena*);
template<> ::GameMsg::PlayerTrusteeOffResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerTrusteeOffResponse>(Arena*);
template<> ::GameMsg::PlayerTrusteeOnRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerTrusteeOnRequest>(Arena*);
template<> ::GameMsg::PlayerTrusteeOnResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerTrusteeOnResponse>(Arena*);
template<> ::GameMsg::PlayerUsePropsRequest* Arena::CreateMaybeMessage<::GameMsg::PlayerUsePropsRequest>(Arena*);
template<> ::GameMsg::PlayerUsePropsResponse* Arena::CreateMaybeMessage<::GameMsg::PlayerUsePropsResponse>(Arena*);
template<> ::GameMsg::ReadyStartGameRequest* Arena::CreateMaybeMessage<::GameMsg::ReadyStartGameRequest>(Arena*);
template<> ::GameMsg::ReadyStartGameResponse* Arena::CreateMaybeMessage<::GameMsg::ReadyStartGameResponse>(Arena*);
template<> ::GameMsg::ShuffleCardRequest* Arena::CreateMaybeMessage<::GameMsg::ShuffleCardRequest>(Arena*);
template<> ::GameMsg::ShuffleCardResponse* Arena::CreateMaybeMessage<::GameMsg::ShuffleCardResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace GameMsg {

enum PB_CardGroup_EnumGroupType {
  PB_CardGroup_EnumGroupType_GROUP_INVALID = 0,
  PB_CardGroup_EnumGroupType_GROUP_STAIGHT = 1,
  PB_CardGroup_EnumGroupType_GROUP_THREE_KIND = 2
};
bool PB_CardGroup_EnumGroupType_IsValid(int value);
const PB_CardGroup_EnumGroupType PB_CardGroup_EnumGroupType_EnumGroupType_MIN = PB_CardGroup_EnumGroupType_GROUP_INVALID;
const PB_CardGroup_EnumGroupType PB_CardGroup_EnumGroupType_EnumGroupType_MAX = PB_CardGroup_EnumGroupType_GROUP_THREE_KIND;
const int PB_CardGroup_EnumGroupType_EnumGroupType_ARRAYSIZE = PB_CardGroup_EnumGroupType_EnumGroupType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_CardGroup_EnumGroupType_descriptor();
inline const ::std::string& PB_CardGroup_EnumGroupType_Name(PB_CardGroup_EnumGroupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_CardGroup_EnumGroupType_descriptor(), value);
}
inline bool PB_CardGroup_EnumGroupType_Parse(
    const ::std::string& name, PB_CardGroup_EnumGroupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_CardGroup_EnumGroupType>(
    PB_CardGroup_EnumGroupType_descriptor(), name, value);
}
enum PlayerInfo_EnumPlayerStatus {
  PlayerInfo_EnumPlayerStatus_PLAYER_STATUS_FIRST = 0,
  PlayerInfo_EnumPlayerStatus_PLAYER_WAIT_NEXT_GAME = 1,
  PlayerInfo_EnumPlayerStatus_PLAYER_UNREADY = 2,
  PlayerInfo_EnumPlayerStatus_PLAYER_PLAYING = 3,
  PlayerInfo_EnumPlayerStatus_PLAYER_DROP = 4,
  PlayerInfo_EnumPlayerStatus_PLAYER_DECLARE = 5,
  PlayerInfo_EnumPlayerStatus_PLAYER_STAND_UP = 6,
  PlayerInfo_EnumPlayerStatus_PLAYER_MASK = 15,
  PlayerInfo_EnumPlayerStatus_PLAYER_TRUSTEED = 128,
  PlayerInfo_EnumPlayerStatus_PLAYER_OFFLINE = 256,
  PlayerInfo_EnumPlayerStatus_PLAYER_ESCAPED = 512
};
bool PlayerInfo_EnumPlayerStatus_IsValid(int value);
const PlayerInfo_EnumPlayerStatus PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_MIN = PlayerInfo_EnumPlayerStatus_PLAYER_STATUS_FIRST;
const PlayerInfo_EnumPlayerStatus PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_MAX = PlayerInfo_EnumPlayerStatus_PLAYER_ESCAPED;
const int PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_ARRAYSIZE = PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerInfo_EnumPlayerStatus_descriptor();
inline const ::std::string& PlayerInfo_EnumPlayerStatus_Name(PlayerInfo_EnumPlayerStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerInfo_EnumPlayerStatus_descriptor(), value);
}
inline bool PlayerInfo_EnumPlayerStatus_Parse(
    const ::std::string& name, PlayerInfo_EnumPlayerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerInfo_EnumPlayerStatus>(
    PlayerInfo_EnumPlayerStatus_descriptor(), name, value);
}
enum FlushRoomRequest_EnumGameStatus {
  FlushRoomRequest_EnumGameStatus_GAME_STATUS_FIRST = 0,
  FlushRoomRequest_EnumGameStatus_GAME_ROUND_MASK = 65535,
  FlushRoomRequest_EnumGameStatus_GAME_UNREADY = 1,
  FlushRoomRequest_EnumGameStatus_GAME_WAIT_PLAYING = 2,
  FlushRoomRequest_EnumGameStatus_GAME_DEALER_CARD = 4,
  FlushRoomRequest_EnumGameStatus_GAME_ACTIVE1 = 8,
  FlushRoomRequest_EnumGameStatus_GAME_ACTIVE2 = 16,
  FlushRoomRequest_EnumGameStatus_GAME_DECLARE = 32,
  FlushRoomRequest_EnumGameStatus_GAME_DISTRIBUTE = 64,
  FlushRoomRequest_EnumGameStatus_GAME_SHUFFLE_CARD = 128
};
bool FlushRoomRequest_EnumGameStatus_IsValid(int value);
const FlushRoomRequest_EnumGameStatus FlushRoomRequest_EnumGameStatus_EnumGameStatus_MIN = FlushRoomRequest_EnumGameStatus_GAME_STATUS_FIRST;
const FlushRoomRequest_EnumGameStatus FlushRoomRequest_EnumGameStatus_EnumGameStatus_MAX = FlushRoomRequest_EnumGameStatus_GAME_ROUND_MASK;
const int FlushRoomRequest_EnumGameStatus_EnumGameStatus_ARRAYSIZE = FlushRoomRequest_EnumGameStatus_EnumGameStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FlushRoomRequest_EnumGameStatus_descriptor();
inline const ::std::string& FlushRoomRequest_EnumGameStatus_Name(FlushRoomRequest_EnumGameStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FlushRoomRequest_EnumGameStatus_descriptor(), value);
}
inline bool FlushRoomRequest_EnumGameStatus_Parse(
    const ::std::string& name, FlushRoomRequest_EnumGameStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlushRoomRequest_EnumGameStatus>(
    FlushRoomRequest_EnumGameStatus_descriptor(), name, value);
}
enum PlayerStandUpRequest_StandReason {
  PlayerStandUpRequest_StandReason_APPLY_STAND_UP = 0,
  PlayerStandUpRequest_StandReason_QUIT_ROOM = 1,
  PlayerStandUpRequest_StandReason_NO_MORE_CHIPS = 2,
  PlayerStandUpRequest_StandReason_OFFLINE_TIMEOUT = 3,
  PlayerStandUpRequest_StandReason_OTHER_REASON = 4
};
bool PlayerStandUpRequest_StandReason_IsValid(int value);
const PlayerStandUpRequest_StandReason PlayerStandUpRequest_StandReason_StandReason_MIN = PlayerStandUpRequest_StandReason_APPLY_STAND_UP;
const PlayerStandUpRequest_StandReason PlayerStandUpRequest_StandReason_StandReason_MAX = PlayerStandUpRequest_StandReason_OTHER_REASON;
const int PlayerStandUpRequest_StandReason_StandReason_ARRAYSIZE = PlayerStandUpRequest_StandReason_StandReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerStandUpRequest_StandReason_descriptor();
inline const ::std::string& PlayerStandUpRequest_StandReason_Name(PlayerStandUpRequest_StandReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerStandUpRequest_StandReason_descriptor(), value);
}
inline bool PlayerStandUpRequest_StandReason_Parse(
    const ::std::string& name, PlayerStandUpRequest_StandReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerStandUpRequest_StandReason>(
    PlayerStandUpRequest_StandReason_descriptor(), name, value);
}
enum EnumPokerColor {
  spades = 1,
  hearts = 2,
  clubs = 3,
  diamonds = 4
};
bool EnumPokerColor_IsValid(int value);
const EnumPokerColor EnumPokerColor_MIN = spades;
const EnumPokerColor EnumPokerColor_MAX = diamonds;
const int EnumPokerColor_ARRAYSIZE = EnumPokerColor_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumPokerColor_descriptor();
inline const ::std::string& EnumPokerColor_Name(EnumPokerColor value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumPokerColor_descriptor(), value);
}
inline bool EnumPokerColor_Parse(
    const ::std::string& name, EnumPokerColor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumPokerColor>(
    EnumPokerColor_descriptor(), name, value);
}
enum EnumPokerPoint {
  P2 = 2,
  P3 = 3,
  P4 = 4,
  P5 = 5,
  P6 = 6,
  P7 = 7,
  P8 = 8,
  P9 = 9,
  P10 = 10,
  J = 11,
  Q = 12,
  K = 13,
  A = 14,
  JOKER1 = 15,
  JOKER2 = 16
};
bool EnumPokerPoint_IsValid(int value);
const EnumPokerPoint EnumPokerPoint_MIN = P2;
const EnumPokerPoint EnumPokerPoint_MAX = JOKER2;
const int EnumPokerPoint_ARRAYSIZE = EnumPokerPoint_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumPokerPoint_descriptor();
inline const ::std::string& EnumPokerPoint_Name(EnumPokerPoint value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumPokerPoint_descriptor(), value);
}
inline bool EnumPokerPoint_Parse(
    const ::std::string& name, EnumPokerPoint* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumPokerPoint>(
    EnumPokerPoint_descriptor(), name, value);
}
// ===================================================================

class EmptyGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.EmptyGameRequest) */ {
 public:
  EmptyGameRequest();
  virtual ~EmptyGameRequest();

  EmptyGameRequest(const EmptyGameRequest& from);

  inline EmptyGameRequest& operator=(const EmptyGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyGameRequest(EmptyGameRequest&& from) noexcept
    : EmptyGameRequest() {
    *this = ::std::move(from);
  }

  inline EmptyGameRequest& operator=(EmptyGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EmptyGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyGameRequest* internal_default_instance() {
    return reinterpret_cast<const EmptyGameRequest*>(
               &_EmptyGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EmptyGameRequest* other);
  friend void swap(EmptyGameRequest& a, EmptyGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyGameRequest* New() const final {
    return CreateMaybeMessage<EmptyGameRequest>(NULL);
  }

  EmptyGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyGameRequest& from);
  void MergeFrom(const EmptyGameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.EmptyGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class NormalGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.NormalGameResponse) */ {
 public:
  NormalGameResponse();
  virtual ~NormalGameResponse();

  NormalGameResponse(const NormalGameResponse& from);

  inline NormalGameResponse& operator=(const NormalGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NormalGameResponse(NormalGameResponse&& from) noexcept
    : NormalGameResponse() {
    *this = ::std::move(from);
  }

  inline NormalGameResponse& operator=(NormalGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NormalGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NormalGameResponse* internal_default_instance() {
    return reinterpret_cast<const NormalGameResponse*>(
               &_NormalGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(NormalGameResponse* other);
  friend void swap(NormalGameResponse& a, NormalGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NormalGameResponse* New() const final {
    return CreateMaybeMessage<NormalGameResponse>(NULL);
  }

  NormalGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NormalGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NormalGameResponse& from);
  void MergeFrom(const NormalGameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NormalGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.NormalGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class MsgCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.MsgCard) */ {
 public:
  MsgCard();
  virtual ~MsgCard();

  MsgCard(const MsgCard& from);

  inline MsgCard& operator=(const MsgCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCard(MsgCard&& from) noexcept
    : MsgCard() {
    *this = ::std::move(from);
  }

  inline MsgCard& operator=(MsgCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCard* internal_default_instance() {
    return reinterpret_cast<const MsgCard*>(
               &_MsgCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgCard* other);
  friend void swap(MsgCard& a, MsgCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCard* New() const final {
    return CreateMaybeMessage<MsgCard>(NULL);
  }

  MsgCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCard& from);
  void MergeFrom(const MsgCard& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 point = 1;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // optional int32 color = 2;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 2;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.MsgCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 color_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PB_CardGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PB_CardGroup) */ {
 public:
  PB_CardGroup();
  virtual ~PB_CardGroup();

  PB_CardGroup(const PB_CardGroup& from);

  inline PB_CardGroup& operator=(const PB_CardGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PB_CardGroup(PB_CardGroup&& from) noexcept
    : PB_CardGroup() {
    *this = ::std::move(from);
  }

  inline PB_CardGroup& operator=(PB_CardGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PB_CardGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_CardGroup* internal_default_instance() {
    return reinterpret_cast<const PB_CardGroup*>(
               &_PB_CardGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PB_CardGroup* other);
  friend void swap(PB_CardGroup& a, PB_CardGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PB_CardGroup* New() const final {
    return CreateMaybeMessage<PB_CardGroup>(NULL);
  }

  PB_CardGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PB_CardGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PB_CardGroup& from);
  void MergeFrom(const PB_CardGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_CardGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PB_CardGroup_EnumGroupType EnumGroupType;
  static const EnumGroupType GROUP_INVALID =
    PB_CardGroup_EnumGroupType_GROUP_INVALID;
  static const EnumGroupType GROUP_STAIGHT =
    PB_CardGroup_EnumGroupType_GROUP_STAIGHT;
  static const EnumGroupType GROUP_THREE_KIND =
    PB_CardGroup_EnumGroupType_GROUP_THREE_KIND;
  static inline bool EnumGroupType_IsValid(int value) {
    return PB_CardGroup_EnumGroupType_IsValid(value);
  }
  static const EnumGroupType EnumGroupType_MIN =
    PB_CardGroup_EnumGroupType_EnumGroupType_MIN;
  static const EnumGroupType EnumGroupType_MAX =
    PB_CardGroup_EnumGroupType_EnumGroupType_MAX;
  static const int EnumGroupType_ARRAYSIZE =
    PB_CardGroup_EnumGroupType_EnumGroupType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumGroupType_descriptor() {
    return PB_CardGroup_EnumGroupType_descriptor();
  }
  static inline const ::std::string& EnumGroupType_Name(EnumGroupType value) {
    return PB_CardGroup_EnumGroupType_Name(value);
  }
  static inline bool EnumGroupType_Parse(const ::std::string& name,
      EnumGroupType* value) {
    return PB_CardGroup_EnumGroupType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameMsg.MsgCard cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::GameMsg::MsgCard* mutable_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_cards();
  const ::GameMsg::MsgCard& cards(int index) const;
  ::GameMsg::MsgCard* add_cards();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      cards() const;

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PB_CardGroup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > cards_;
  ::google::protobuf::int32 type_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyFlushRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyFlushRoomRequest) */ {
 public:
  ApplyFlushRoomRequest();
  virtual ~ApplyFlushRoomRequest();

  ApplyFlushRoomRequest(const ApplyFlushRoomRequest& from);

  inline ApplyFlushRoomRequest& operator=(const ApplyFlushRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyFlushRoomRequest(ApplyFlushRoomRequest&& from) noexcept
    : ApplyFlushRoomRequest() {
    *this = ::std::move(from);
  }

  inline ApplyFlushRoomRequest& operator=(ApplyFlushRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyFlushRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyFlushRoomRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyFlushRoomRequest*>(
               &_ApplyFlushRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ApplyFlushRoomRequest* other);
  friend void swap(ApplyFlushRoomRequest& a, ApplyFlushRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyFlushRoomRequest* New() const final {
    return CreateMaybeMessage<ApplyFlushRoomRequest>(NULL);
  }

  ApplyFlushRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyFlushRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyFlushRoomRequest& from);
  void MergeFrom(const ApplyFlushRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFlushRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes playerName = 3;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyFlushRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyFlushRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyFlushRoomResponse) */ {
 public:
  ApplyFlushRoomResponse();
  virtual ~ApplyFlushRoomResponse();

  ApplyFlushRoomResponse(const ApplyFlushRoomResponse& from);

  inline ApplyFlushRoomResponse& operator=(const ApplyFlushRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyFlushRoomResponse(ApplyFlushRoomResponse&& from) noexcept
    : ApplyFlushRoomResponse() {
    *this = ::std::move(from);
  }

  inline ApplyFlushRoomResponse& operator=(ApplyFlushRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyFlushRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyFlushRoomResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyFlushRoomResponse*>(
               &_ApplyFlushRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ApplyFlushRoomResponse* other);
  friend void swap(ApplyFlushRoomResponse& a, ApplyFlushRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyFlushRoomResponse* New() const final {
    return CreateMaybeMessage<ApplyFlushRoomResponse>(NULL);
  }

  ApplyFlushRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyFlushRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyFlushRoomResponse& from);
  void MergeFrom(const ApplyFlushRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFlushRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyFlushRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyEnterRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyEnterRoomRequest) */ {
 public:
  ApplyEnterRoomRequest();
  virtual ~ApplyEnterRoomRequest();

  ApplyEnterRoomRequest(const ApplyEnterRoomRequest& from);

  inline ApplyEnterRoomRequest& operator=(const ApplyEnterRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyEnterRoomRequest(ApplyEnterRoomRequest&& from) noexcept
    : ApplyEnterRoomRequest() {
    *this = ::std::move(from);
  }

  inline ApplyEnterRoomRequest& operator=(ApplyEnterRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyEnterRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyEnterRoomRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyEnterRoomRequest*>(
               &_ApplyEnterRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ApplyEnterRoomRequest* other);
  friend void swap(ApplyEnterRoomRequest& a, ApplyEnterRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyEnterRoomRequest* New() const final {
    return CreateMaybeMessage<ApplyEnterRoomRequest>(NULL);
  }

  ApplyEnterRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyEnterRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyEnterRoomRequest& from);
  void MergeFrom(const ApplyEnterRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyEnterRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes playerName = 3;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyEnterRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyEnterRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyEnterRoomResponse) */ {
 public:
  ApplyEnterRoomResponse();
  virtual ~ApplyEnterRoomResponse();

  ApplyEnterRoomResponse(const ApplyEnterRoomResponse& from);

  inline ApplyEnterRoomResponse& operator=(const ApplyEnterRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyEnterRoomResponse(ApplyEnterRoomResponse&& from) noexcept
    : ApplyEnterRoomResponse() {
    *this = ::std::move(from);
  }

  inline ApplyEnterRoomResponse& operator=(ApplyEnterRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyEnterRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyEnterRoomResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyEnterRoomResponse*>(
               &_ApplyEnterRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ApplyEnterRoomResponse* other);
  friend void swap(ApplyEnterRoomResponse& a, ApplyEnterRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyEnterRoomResponse* New() const final {
    return CreateMaybeMessage<ApplyEnterRoomResponse>(NULL);
  }

  ApplyEnterRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyEnterRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyEnterRoomResponse& from);
  void MergeFrom(const ApplyEnterRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyEnterRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyEnterRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInfo(PlayerInfo&& from) noexcept
    : PlayerInfo() {
    *this = ::std::move(from);
  }

  inline PlayerInfo& operator=(PlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PlayerInfo* other);
  friend void swap(PlayerInfo& a, PlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const final {
    return CreateMaybeMessage<PlayerInfo>(NULL);
  }

  PlayerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlayerInfo_EnumPlayerStatus EnumPlayerStatus;
  static const EnumPlayerStatus PLAYER_STATUS_FIRST =
    PlayerInfo_EnumPlayerStatus_PLAYER_STATUS_FIRST;
  static const EnumPlayerStatus PLAYER_WAIT_NEXT_GAME =
    PlayerInfo_EnumPlayerStatus_PLAYER_WAIT_NEXT_GAME;
  static const EnumPlayerStatus PLAYER_UNREADY =
    PlayerInfo_EnumPlayerStatus_PLAYER_UNREADY;
  static const EnumPlayerStatus PLAYER_PLAYING =
    PlayerInfo_EnumPlayerStatus_PLAYER_PLAYING;
  static const EnumPlayerStatus PLAYER_DROP =
    PlayerInfo_EnumPlayerStatus_PLAYER_DROP;
  static const EnumPlayerStatus PLAYER_DECLARE =
    PlayerInfo_EnumPlayerStatus_PLAYER_DECLARE;
  static const EnumPlayerStatus PLAYER_STAND_UP =
    PlayerInfo_EnumPlayerStatus_PLAYER_STAND_UP;
  static const EnumPlayerStatus PLAYER_MASK =
    PlayerInfo_EnumPlayerStatus_PLAYER_MASK;
  static const EnumPlayerStatus PLAYER_TRUSTEED =
    PlayerInfo_EnumPlayerStatus_PLAYER_TRUSTEED;
  static const EnumPlayerStatus PLAYER_OFFLINE =
    PlayerInfo_EnumPlayerStatus_PLAYER_OFFLINE;
  static const EnumPlayerStatus PLAYER_ESCAPED =
    PlayerInfo_EnumPlayerStatus_PLAYER_ESCAPED;
  static inline bool EnumPlayerStatus_IsValid(int value) {
    return PlayerInfo_EnumPlayerStatus_IsValid(value);
  }
  static const EnumPlayerStatus EnumPlayerStatus_MIN =
    PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_MIN;
  static const EnumPlayerStatus EnumPlayerStatus_MAX =
    PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_MAX;
  static const int EnumPlayerStatus_ARRAYSIZE =
    PlayerInfo_EnumPlayerStatus_EnumPlayerStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumPlayerStatus_descriptor() {
    return PlayerInfo_EnumPlayerStatus_descriptor();
  }
  static inline const ::std::string& EnumPlayerStatus_Name(EnumPlayerStatus value) {
    return PlayerInfo_EnumPlayerStatus_Name(value);
  }
  static inline bool EnumPlayerStatus_Parse(const ::std::string& name,
      EnumPlayerStatus* value) {
    return PlayerInfo_EnumPlayerStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 7;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 7;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int64 totalChips = 3;
  bool has_totalchips() const;
  void clear_totalchips();
  static const int kTotalChipsFieldNumber = 3;
  ::google::protobuf::int64 totalchips() const;
  void set_totalchips(::google::protobuf::int64 value);

  // optional int32 seatNumber = 5;
  bool has_seatnumber() const;
  void clear_seatnumber();
  static const int kSeatNumberFieldNumber = 5;
  ::google::protobuf::int32 seatnumber() const;
  void set_seatnumber(::google::protobuf::int32 value);

  // optional int32 score = 6;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 handCardCount = 8;
  bool has_handcardcount() const;
  void clear_handcardcount();
  static const int kHandCardCountFieldNumber = 8;
  ::google::protobuf::int32 handcardcount() const;
  void set_handcardcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int64 totalchips_;
  ::google::protobuf::int32 seatnumber_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 handcardcount_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PB_IngamePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PB_IngamePlayer) */ {
 public:
  PB_IngamePlayer();
  virtual ~PB_IngamePlayer();

  PB_IngamePlayer(const PB_IngamePlayer& from);

  inline PB_IngamePlayer& operator=(const PB_IngamePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PB_IngamePlayer(PB_IngamePlayer&& from) noexcept
    : PB_IngamePlayer() {
    *this = ::std::move(from);
  }

  inline PB_IngamePlayer& operator=(PB_IngamePlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PB_IngamePlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_IngamePlayer* internal_default_instance() {
    return reinterpret_cast<const PB_IngamePlayer*>(
               &_PB_IngamePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PB_IngamePlayer* other);
  friend void swap(PB_IngamePlayer& a, PB_IngamePlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PB_IngamePlayer* New() const final {
    return CreateMaybeMessage<PB_IngamePlayer>(NULL);
  }

  PB_IngamePlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PB_IngamePlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PB_IngamePlayer& from);
  void MergeFrom(const PB_IngamePlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_IngamePlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 seatNum = 2;
  bool has_seatnum() const;
  void clear_seatnum();
  static const int kSeatNumFieldNumber = 2;
  ::google::protobuf::int32 seatnum() const;
  void set_seatnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PB_IngamePlayer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 seatnum_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class FlushRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.FlushRoomRequest) */ {
 public:
  FlushRoomRequest();
  virtual ~FlushRoomRequest();

  FlushRoomRequest(const FlushRoomRequest& from);

  inline FlushRoomRequest& operator=(const FlushRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlushRoomRequest(FlushRoomRequest&& from) noexcept
    : FlushRoomRequest() {
    *this = ::std::move(from);
  }

  inline FlushRoomRequest& operator=(FlushRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FlushRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlushRoomRequest* internal_default_instance() {
    return reinterpret_cast<const FlushRoomRequest*>(
               &_FlushRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(FlushRoomRequest* other);
  friend void swap(FlushRoomRequest& a, FlushRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlushRoomRequest* New() const final {
    return CreateMaybeMessage<FlushRoomRequest>(NULL);
  }

  FlushRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlushRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlushRoomRequest& from);
  void MergeFrom(const FlushRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlushRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FlushRoomRequest_EnumGameStatus EnumGameStatus;
  static const EnumGameStatus GAME_STATUS_FIRST =
    FlushRoomRequest_EnumGameStatus_GAME_STATUS_FIRST;
  static const EnumGameStatus GAME_ROUND_MASK =
    FlushRoomRequest_EnumGameStatus_GAME_ROUND_MASK;
  static const EnumGameStatus GAME_UNREADY =
    FlushRoomRequest_EnumGameStatus_GAME_UNREADY;
  static const EnumGameStatus GAME_WAIT_PLAYING =
    FlushRoomRequest_EnumGameStatus_GAME_WAIT_PLAYING;
  static const EnumGameStatus GAME_DEALER_CARD =
    FlushRoomRequest_EnumGameStatus_GAME_DEALER_CARD;
  static const EnumGameStatus GAME_ACTIVE1 =
    FlushRoomRequest_EnumGameStatus_GAME_ACTIVE1;
  static const EnumGameStatus GAME_ACTIVE2 =
    FlushRoomRequest_EnumGameStatus_GAME_ACTIVE2;
  static const EnumGameStatus GAME_DECLARE =
    FlushRoomRequest_EnumGameStatus_GAME_DECLARE;
  static const EnumGameStatus GAME_DISTRIBUTE =
    FlushRoomRequest_EnumGameStatus_GAME_DISTRIBUTE;
  static const EnumGameStatus GAME_SHUFFLE_CARD =
    FlushRoomRequest_EnumGameStatus_GAME_SHUFFLE_CARD;
  static inline bool EnumGameStatus_IsValid(int value) {
    return FlushRoomRequest_EnumGameStatus_IsValid(value);
  }
  static const EnumGameStatus EnumGameStatus_MIN =
    FlushRoomRequest_EnumGameStatus_EnumGameStatus_MIN;
  static const EnumGameStatus EnumGameStatus_MAX =
    FlushRoomRequest_EnumGameStatus_EnumGameStatus_MAX;
  static const int EnumGameStatus_ARRAYSIZE =
    FlushRoomRequest_EnumGameStatus_EnumGameStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumGameStatus_descriptor() {
    return FlushRoomRequest_EnumGameStatus_descriptor();
  }
  static inline const ::std::string& EnumGameStatus_Name(EnumGameStatus value) {
    return FlushRoomRequest_EnumGameStatus_Name(value);
  }
  static inline bool EnumGameStatus_Parse(const ::std::string& name,
      EnumGameStatus* value) {
    return FlushRoomRequest_EnumGameStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PlayerInfo player = 5;
  int player_size() const;
  void clear_player();
  static const int kPlayerFieldNumber = 5;
  ::GameMsg::PlayerInfo* mutable_player(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerInfo >*
      mutable_player();
  const ::GameMsg::PlayerInfo& player(int index) const;
  ::GameMsg::PlayerInfo* add_player();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerInfo >&
      player() const;

  // repeated .GameMsg.MsgCard cardPool = 8;
  int cardpool_size() const;
  void clear_cardpool();
  static const int kCardPoolFieldNumber = 8;
  ::GameMsg::MsgCard* mutable_cardpool(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_cardpool();
  const ::GameMsg::MsgCard& cardpool(int index) const;
  ::GameMsg::MsgCard* add_cardpool();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      cardpool() const;

  // repeated .GameMsg.MsgCard handCard = 21;
  int handcard_size() const;
  void clear_handcard();
  static const int kHandCardFieldNumber = 21;
  ::GameMsg::MsgCard* mutable_handcard(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_handcard();
  const ::GameMsg::MsgCard& handcard(int index) const;
  ::GameMsg::MsgCard* add_handcard();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      handcard() const;

  // repeated .GameMsg.PB_IngamePlayer ingamePlayer = 25;
  int ingameplayer_size() const;
  void clear_ingameplayer();
  static const int kIngamePlayerFieldNumber = 25;
  ::GameMsg::PB_IngamePlayer* mutable_ingameplayer(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_IngamePlayer >*
      mutable_ingameplayer();
  const ::GameMsg::PB_IngamePlayer& ingameplayer(int index) const;
  ::GameMsg::PB_IngamePlayer* add_ingameplayer();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_IngamePlayer >&
      ingameplayer() const;

  // optional .GameMsg.MsgCard jokerCard = 10;
  bool has_jokercard() const;
  void clear_jokercard();
  static const int kJokerCardFieldNumber = 10;
  const ::GameMsg::MsgCard& jokercard() const;
  ::GameMsg::MsgCard* release_jokercard();
  ::GameMsg::MsgCard* mutable_jokercard();
  void set_allocated_jokercard(::GameMsg::MsgCard* jokercard);

  // optional int64 smallBlind = 1;
  bool has_smallblind() const;
  void clear_smallblind();
  static const int kSmallBlindFieldNumber = 1;
  ::google::protobuf::int64 smallblind() const;
  void set_smallblind(::google::protobuf::int64 value);

  // optional int64 minCarry = 2;
  bool has_mincarry() const;
  void clear_mincarry();
  static const int kMinCarryFieldNumber = 2;
  ::google::protobuf::int64 mincarry() const;
  void set_mincarry(::google::protobuf::int64 value);

  // optional int32 gameStatus = 3;
  bool has_gamestatus() const;
  void clear_gamestatus();
  static const int kGameStatusFieldNumber = 3;
  ::google::protobuf::int32 gamestatus() const;
  void set_gamestatus(::google::protobuf::int32 value);

  // optional int32 maxPlaying = 4;
  bool has_maxplaying() const;
  void clear_maxplaying();
  static const int kMaxPlayingFieldNumber = 4;
  ::google::protobuf::int32 maxplaying() const;
  void set_maxplaying(::google::protobuf::int32 value);

  // optional int32 roomType = 6;
  bool has_roomtype() const;
  void clear_roomtype();
  static const int kRoomTypeFieldNumber = 6;
  ::google::protobuf::int32 roomtype() const;
  void set_roomtype(::google::protobuf::int32 value);

  // optional int32 deskType = 7;
  bool has_desktype() const;
  void clear_desktype();
  static const int kDeskTypeFieldNumber = 7;
  ::google::protobuf::int32 desktype() const;
  void set_desktype(::google::protobuf::int32 value);

  // optional int32 bottomCardCount = 9;
  bool has_bottomcardcount() const;
  void clear_bottomcardcount();
  static const int kBottomCardCountFieldNumber = 9;
  ::google::protobuf::int32 bottomcardcount() const;
  void set_bottomcardcount(::google::protobuf::int32 value);

  // optional int32 currentActiveSeat = 12;
  bool has_currentactiveseat() const;
  void clear_currentactiveseat();
  static const int kCurrentActiveSeatFieldNumber = 12;
  ::google::protobuf::int32 currentactiveseat() const;
  void set_currentactiveseat(::google::protobuf::int32 value);

  // optional int64 chipsPool = 11;
  bool has_chipspool() const;
  void clear_chipspool();
  static const int kChipsPoolFieldNumber = 11;
  ::google::protobuf::int64 chipspool() const;
  void set_chipspool(::google::protobuf::int64 value);

  // optional int32 dealerIndex = 13;
  bool has_dealerindex() const;
  void clear_dealerindex();
  static const int kDealerIndexFieldNumber = 13;
  ::google::protobuf::int32 dealerindex() const;
  void set_dealerindex(::google::protobuf::int32 value);

  // optional int32 timeLeft = 14;
  bool has_timeleft() const;
  void clear_timeleft();
  static const int kTimeLeftFieldNumber = 14;
  ::google::protobuf::int32 timeleft() const;
  void set_timeleft(::google::protobuf::int32 value);

  // optional int32 applyDeclareSeatnum = 15;
  bool has_applydeclareseatnum() const;
  void clear_applydeclareseatnum();
  static const int kApplyDeclareSeatnumFieldNumber = 15;
  ::google::protobuf::int32 applydeclareseatnum() const;
  void set_applydeclareseatnum(::google::protobuf::int32 value);

  // optional int32 active1Sec = 16;
  bool has_active1sec() const;
  void clear_active1sec();
  static const int kActive1SecFieldNumber = 16;
  ::google::protobuf::int32 active1sec() const;
  void set_active1sec(::google::protobuf::int32 value);

  // optional int32 active2Sec = 17;
  bool has_active2sec() const;
  void clear_active2sec();
  static const int kActive2SecFieldNumber = 17;
  ::google::protobuf::int32 active2sec() const;
  void set_active2sec(::google::protobuf::int32 value);

  // optional int32 distributSec = 18;
  bool has_distributsec() const;
  void clear_distributsec();
  static const int kDistributSecFieldNumber = 18;
  ::google::protobuf::int32 distributsec() const;
  void set_distributsec(::google::protobuf::int32 value);

  // optional int32 declareSec = 19;
  bool has_declaresec() const;
  void clear_declaresec();
  static const int kDeclareSecFieldNumber = 19;
  ::google::protobuf::int32 declaresec() const;
  void set_declaresec(::google::protobuf::int32 value);

  // optional int32 waitGameSec = 20;
  bool has_waitgamesec() const;
  void clear_waitgamesec();
  static const int kWaitGameSecFieldNumber = 20;
  ::google::protobuf::int32 waitgamesec() const;
  void set_waitgamesec(::google::protobuf::int32 value);

  // optional int32 dropScore1 = 22;
  bool has_dropscore1() const;
  void clear_dropscore1();
  static const int kDropScore1FieldNumber = 22;
  ::google::protobuf::int32 dropscore1() const;
  void set_dropscore1(::google::protobuf::int32 value);

  // optional int32 dropScore2 = 23;
  bool has_dropscore2() const;
  void clear_dropscore2();
  static const int kDropScore2FieldNumber = 23;
  ::google::protobuf::int32 dropscore2() const;
  void set_dropscore2(::google::protobuf::int32 value);

  // optional bool isPoolCardCanDig = 24;
  bool has_ispoolcardcandig() const;
  void clear_ispoolcardcandig();
  static const int kIsPoolCardCanDigFieldNumber = 24;
  bool ispoolcardcandig() const;
  void set_ispoolcardcandig(bool value);

  // @@protoc_insertion_point(class_scope:GameMsg.FlushRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerInfo > player_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > cardpool_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > handcard_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_IngamePlayer > ingameplayer_;
  ::GameMsg::MsgCard* jokercard_;
  ::google::protobuf::int64 smallblind_;
  ::google::protobuf::int64 mincarry_;
  ::google::protobuf::int32 gamestatus_;
  ::google::protobuf::int32 maxplaying_;
  ::google::protobuf::int32 roomtype_;
  ::google::protobuf::int32 desktype_;
  ::google::protobuf::int32 bottomcardcount_;
  ::google::protobuf::int32 currentactiveseat_;
  ::google::protobuf::int64 chipspool_;
  ::google::protobuf::int32 dealerindex_;
  ::google::protobuf::int32 timeleft_;
  ::google::protobuf::int32 applydeclareseatnum_;
  ::google::protobuf::int32 active1sec_;
  ::google::protobuf::int32 active2sec_;
  ::google::protobuf::int32 distributsec_;
  ::google::protobuf::int32 declaresec_;
  ::google::protobuf::int32 waitgamesec_;
  ::google::protobuf::int32 dropscore1_;
  ::google::protobuf::int32 dropscore2_;
  bool ispoolcardcandig_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class FlushRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.FlushRoomResponse) */ {
 public:
  FlushRoomResponse();
  virtual ~FlushRoomResponse();

  FlushRoomResponse(const FlushRoomResponse& from);

  inline FlushRoomResponse& operator=(const FlushRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlushRoomResponse(FlushRoomResponse&& from) noexcept
    : FlushRoomResponse() {
    *this = ::std::move(from);
  }

  inline FlushRoomResponse& operator=(FlushRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FlushRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlushRoomResponse* internal_default_instance() {
    return reinterpret_cast<const FlushRoomResponse*>(
               &_FlushRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FlushRoomResponse* other);
  friend void swap(FlushRoomResponse& a, FlushRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlushRoomResponse* New() const final {
    return CreateMaybeMessage<FlushRoomResponse>(NULL);
  }

  FlushRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlushRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlushRoomResponse& from);
  void MergeFrom(const FlushRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlushRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.FlushRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplySeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplySeatRequest) */ {
 public:
  ApplySeatRequest();
  virtual ~ApplySeatRequest();

  ApplySeatRequest(const ApplySeatRequest& from);

  inline ApplySeatRequest& operator=(const ApplySeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplySeatRequest(ApplySeatRequest&& from) noexcept
    : ApplySeatRequest() {
    *this = ::std::move(from);
  }

  inline ApplySeatRequest& operator=(ApplySeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplySeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplySeatRequest* internal_default_instance() {
    return reinterpret_cast<const ApplySeatRequest*>(
               &_ApplySeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ApplySeatRequest* other);
  friend void swap(ApplySeatRequest& a, ApplySeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplySeatRequest* New() const final {
    return CreateMaybeMessage<ApplySeatRequest>(NULL);
  }

  ApplySeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplySeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplySeatRequest& from);
  void MergeFrom(const ApplySeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplySeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 seatNumber = 3;
  bool has_seatnumber() const;
  void clear_seatnumber();
  static const int kSeatNumberFieldNumber = 3;
  ::google::protobuf::int32 seatnumber() const;
  void set_seatnumber(::google::protobuf::int32 value);

  // optional int32 autoBuyIn = 4;
  bool has_autobuyin() const;
  void clear_autobuyin();
  static const int kAutoBuyInFieldNumber = 4;
  ::google::protobuf::int32 autobuyin() const;
  void set_autobuyin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplySeatRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 seatnumber_;
  ::google::protobuf::int32 autobuyin_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplySeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplySeatResponse) */ {
 public:
  ApplySeatResponse();
  virtual ~ApplySeatResponse();

  ApplySeatResponse(const ApplySeatResponse& from);

  inline ApplySeatResponse& operator=(const ApplySeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplySeatResponse(ApplySeatResponse&& from) noexcept
    : ApplySeatResponse() {
    *this = ::std::move(from);
  }

  inline ApplySeatResponse& operator=(ApplySeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplySeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplySeatResponse* internal_default_instance() {
    return reinterpret_cast<const ApplySeatResponse*>(
               &_ApplySeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ApplySeatResponse* other);
  friend void swap(ApplySeatResponse& a, ApplySeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplySeatResponse* New() const final {
    return CreateMaybeMessage<ApplySeatResponse>(NULL);
  }

  ApplySeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplySeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplySeatResponse& from);
  void MergeFrom(const ApplySeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplySeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplySeatResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerSitDownRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerSitDownRequest) */ {
 public:
  PlayerSitDownRequest();
  virtual ~PlayerSitDownRequest();

  PlayerSitDownRequest(const PlayerSitDownRequest& from);

  inline PlayerSitDownRequest& operator=(const PlayerSitDownRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSitDownRequest(PlayerSitDownRequest&& from) noexcept
    : PlayerSitDownRequest() {
    *this = ::std::move(from);
  }

  inline PlayerSitDownRequest& operator=(PlayerSitDownRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerSitDownRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerSitDownRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerSitDownRequest*>(
               &_PlayerSitDownRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PlayerSitDownRequest* other);
  friend void swap(PlayerSitDownRequest& a, PlayerSitDownRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSitDownRequest* New() const final {
    return CreateMaybeMessage<PlayerSitDownRequest>(NULL);
  }

  PlayerSitDownRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerSitDownRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerSitDownRequest& from);
  void MergeFrom(const PlayerSitDownRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerSitDownRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes playerName = 2;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 seatNumber = 3;
  bool has_seatnumber() const;
  void clear_seatnumber();
  static const int kSeatNumberFieldNumber = 3;
  ::google::protobuf::int32 seatnumber() const;
  void set_seatnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerSitDownRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 seatnumber_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerSitDownResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerSitDownResponse) */ {
 public:
  PlayerSitDownResponse();
  virtual ~PlayerSitDownResponse();

  PlayerSitDownResponse(const PlayerSitDownResponse& from);

  inline PlayerSitDownResponse& operator=(const PlayerSitDownResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSitDownResponse(PlayerSitDownResponse&& from) noexcept
    : PlayerSitDownResponse() {
    *this = ::std::move(from);
  }

  inline PlayerSitDownResponse& operator=(PlayerSitDownResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerSitDownResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerSitDownResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerSitDownResponse*>(
               &_PlayerSitDownResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(PlayerSitDownResponse* other);
  friend void swap(PlayerSitDownResponse& a, PlayerSitDownResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSitDownResponse* New() const final {
    return CreateMaybeMessage<PlayerSitDownResponse>(NULL);
  }

  PlayerSitDownResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerSitDownResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerSitDownResponse& from);
  void MergeFrom(const PlayerSitDownResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerSitDownResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerSitDownResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyStandupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyStandupRequest) */ {
 public:
  ApplyStandupRequest();
  virtual ~ApplyStandupRequest();

  ApplyStandupRequest(const ApplyStandupRequest& from);

  inline ApplyStandupRequest& operator=(const ApplyStandupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyStandupRequest(ApplyStandupRequest&& from) noexcept
    : ApplyStandupRequest() {
    *this = ::std::move(from);
  }

  inline ApplyStandupRequest& operator=(ApplyStandupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyStandupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyStandupRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyStandupRequest*>(
               &_ApplyStandupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ApplyStandupRequest* other);
  friend void swap(ApplyStandupRequest& a, ApplyStandupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyStandupRequest* New() const final {
    return CreateMaybeMessage<ApplyStandupRequest>(NULL);
  }

  ApplyStandupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyStandupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyStandupRequest& from);
  void MergeFrom(const ApplyStandupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyStandupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyStandupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyStandupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyStandupResponse) */ {
 public:
  ApplyStandupResponse();
  virtual ~ApplyStandupResponse();

  ApplyStandupResponse(const ApplyStandupResponse& from);

  inline ApplyStandupResponse& operator=(const ApplyStandupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyStandupResponse(ApplyStandupResponse&& from) noexcept
    : ApplyStandupResponse() {
    *this = ::std::move(from);
  }

  inline ApplyStandupResponse& operator=(ApplyStandupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyStandupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyStandupResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyStandupResponse*>(
               &_ApplyStandupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ApplyStandupResponse* other);
  friend void swap(ApplyStandupResponse& a, ApplyStandupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyStandupResponse* New() const final {
    return CreateMaybeMessage<ApplyStandupResponse>(NULL);
  }

  ApplyStandupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyStandupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyStandupResponse& from);
  void MergeFrom(const ApplyStandupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyStandupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyStandupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerStandUpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerStandUpRequest) */ {
 public:
  PlayerStandUpRequest();
  virtual ~PlayerStandUpRequest();

  PlayerStandUpRequest(const PlayerStandUpRequest& from);

  inline PlayerStandUpRequest& operator=(const PlayerStandUpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerStandUpRequest(PlayerStandUpRequest&& from) noexcept
    : PlayerStandUpRequest() {
    *this = ::std::move(from);
  }

  inline PlayerStandUpRequest& operator=(PlayerStandUpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerStandUpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerStandUpRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerStandUpRequest*>(
               &_PlayerStandUpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(PlayerStandUpRequest* other);
  friend void swap(PlayerStandUpRequest& a, PlayerStandUpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerStandUpRequest* New() const final {
    return CreateMaybeMessage<PlayerStandUpRequest>(NULL);
  }

  PlayerStandUpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerStandUpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerStandUpRequest& from);
  void MergeFrom(const PlayerStandUpRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStandUpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlayerStandUpRequest_StandReason StandReason;
  static const StandReason APPLY_STAND_UP =
    PlayerStandUpRequest_StandReason_APPLY_STAND_UP;
  static const StandReason QUIT_ROOM =
    PlayerStandUpRequest_StandReason_QUIT_ROOM;
  static const StandReason NO_MORE_CHIPS =
    PlayerStandUpRequest_StandReason_NO_MORE_CHIPS;
  static const StandReason OFFLINE_TIMEOUT =
    PlayerStandUpRequest_StandReason_OFFLINE_TIMEOUT;
  static const StandReason OTHER_REASON =
    PlayerStandUpRequest_StandReason_OTHER_REASON;
  static inline bool StandReason_IsValid(int value) {
    return PlayerStandUpRequest_StandReason_IsValid(value);
  }
  static const StandReason StandReason_MIN =
    PlayerStandUpRequest_StandReason_StandReason_MIN;
  static const StandReason StandReason_MAX =
    PlayerStandUpRequest_StandReason_StandReason_MAX;
  static const int StandReason_ARRAYSIZE =
    PlayerStandUpRequest_StandReason_StandReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StandReason_descriptor() {
    return PlayerStandUpRequest_StandReason_descriptor();
  }
  static inline const ::std::string& StandReason_Name(StandReason value) {
    return PlayerStandUpRequest_StandReason_Name(value);
  }
  static inline bool StandReason_Parse(const ::std::string& name,
      StandReason* value) {
    return PlayerStandUpRequest_StandReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 standUpReason = 2;
  bool has_standupreason() const;
  void clear_standupreason();
  static const int kStandUpReasonFieldNumber = 2;
  ::google::protobuf::int32 standupreason() const;
  void set_standupreason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerStandUpRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 standupreason_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerStandUpResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerStandUpResponse) */ {
 public:
  PlayerStandUpResponse();
  virtual ~PlayerStandUpResponse();

  PlayerStandUpResponse(const PlayerStandUpResponse& from);

  inline PlayerStandUpResponse& operator=(const PlayerStandUpResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerStandUpResponse(PlayerStandUpResponse&& from) noexcept
    : PlayerStandUpResponse() {
    *this = ::std::move(from);
  }

  inline PlayerStandUpResponse& operator=(PlayerStandUpResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerStandUpResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerStandUpResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerStandUpResponse*>(
               &_PlayerStandUpResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(PlayerStandUpResponse* other);
  friend void swap(PlayerStandUpResponse& a, PlayerStandUpResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerStandUpResponse* New() const final {
    return CreateMaybeMessage<PlayerStandUpResponse>(NULL);
  }

  PlayerStandUpResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerStandUpResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerStandUpResponse& from);
  void MergeFrom(const PlayerStandUpResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStandUpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerStandUpResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyQuitRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyQuitRoomRequest) */ {
 public:
  ApplyQuitRoomRequest();
  virtual ~ApplyQuitRoomRequest();

  ApplyQuitRoomRequest(const ApplyQuitRoomRequest& from);

  inline ApplyQuitRoomRequest& operator=(const ApplyQuitRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyQuitRoomRequest(ApplyQuitRoomRequest&& from) noexcept
    : ApplyQuitRoomRequest() {
    *this = ::std::move(from);
  }

  inline ApplyQuitRoomRequest& operator=(ApplyQuitRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyQuitRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyQuitRoomRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyQuitRoomRequest*>(
               &_ApplyQuitRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ApplyQuitRoomRequest* other);
  friend void swap(ApplyQuitRoomRequest& a, ApplyQuitRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyQuitRoomRequest* New() const final {
    return CreateMaybeMessage<ApplyQuitRoomRequest>(NULL);
  }

  ApplyQuitRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyQuitRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyQuitRoomRequest& from);
  void MergeFrom(const ApplyQuitRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyQuitRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyQuitRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyQuitRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyQuitRoomResponse) */ {
 public:
  ApplyQuitRoomResponse();
  virtual ~ApplyQuitRoomResponse();

  ApplyQuitRoomResponse(const ApplyQuitRoomResponse& from);

  inline ApplyQuitRoomResponse& operator=(const ApplyQuitRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyQuitRoomResponse(ApplyQuitRoomResponse&& from) noexcept
    : ApplyQuitRoomResponse() {
    *this = ::std::move(from);
  }

  inline ApplyQuitRoomResponse& operator=(ApplyQuitRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyQuitRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyQuitRoomResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyQuitRoomResponse*>(
               &_ApplyQuitRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ApplyQuitRoomResponse* other);
  friend void swap(ApplyQuitRoomResponse& a, ApplyQuitRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyQuitRoomResponse* New() const final {
    return CreateMaybeMessage<ApplyQuitRoomResponse>(NULL);
  }

  ApplyQuitRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyQuitRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyQuitRoomResponse& from);
  void MergeFrom(const ApplyQuitRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyQuitRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyQuitRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerQuitRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerQuitRoomRequest) */ {
 public:
  PlayerQuitRoomRequest();
  virtual ~PlayerQuitRoomRequest();

  PlayerQuitRoomRequest(const PlayerQuitRoomRequest& from);

  inline PlayerQuitRoomRequest& operator=(const PlayerQuitRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerQuitRoomRequest(PlayerQuitRoomRequest&& from) noexcept
    : PlayerQuitRoomRequest() {
    *this = ::std::move(from);
  }

  inline PlayerQuitRoomRequest& operator=(PlayerQuitRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerQuitRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerQuitRoomRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerQuitRoomRequest*>(
               &_PlayerQuitRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(PlayerQuitRoomRequest* other);
  friend void swap(PlayerQuitRoomRequest& a, PlayerQuitRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerQuitRoomRequest* New() const final {
    return CreateMaybeMessage<PlayerQuitRoomRequest>(NULL);
  }

  PlayerQuitRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerQuitRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerQuitRoomRequest& from);
  void MergeFrom(const PlayerQuitRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerQuitRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 quitReason = 2;
  bool has_quitreason() const;
  void clear_quitreason();
  static const int kQuitReasonFieldNumber = 2;
  ::google::protobuf::int32 quitreason() const;
  void set_quitreason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerQuitRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 quitreason_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerQuitRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerQuitRoomResponse) */ {
 public:
  PlayerQuitRoomResponse();
  virtual ~PlayerQuitRoomResponse();

  PlayerQuitRoomResponse(const PlayerQuitRoomResponse& from);

  inline PlayerQuitRoomResponse& operator=(const PlayerQuitRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerQuitRoomResponse(PlayerQuitRoomResponse&& from) noexcept
    : PlayerQuitRoomResponse() {
    *this = ::std::move(from);
  }

  inline PlayerQuitRoomResponse& operator=(PlayerQuitRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerQuitRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerQuitRoomResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerQuitRoomResponse*>(
               &_PlayerQuitRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(PlayerQuitRoomResponse* other);
  friend void swap(PlayerQuitRoomResponse& a, PlayerQuitRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerQuitRoomResponse* New() const final {
    return CreateMaybeMessage<PlayerQuitRoomResponse>(NULL);
  }

  PlayerQuitRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerQuitRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerQuitRoomResponse& from);
  void MergeFrom(const PlayerQuitRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerQuitRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerQuitRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerChips : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerChips) */ {
 public:
  PlayerChips();
  virtual ~PlayerChips();

  PlayerChips(const PlayerChips& from);

  inline PlayerChips& operator=(const PlayerChips& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChips(PlayerChips&& from) noexcept
    : PlayerChips() {
    *this = ::std::move(from);
  }

  inline PlayerChips& operator=(PlayerChips&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChips& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChips* internal_default_instance() {
    return reinterpret_cast<const PlayerChips*>(
               &_PlayerChips_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(PlayerChips* other);
  friend void swap(PlayerChips& a, PlayerChips& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChips* New() const final {
    return CreateMaybeMessage<PlayerChips>(NULL);
  }

  PlayerChips* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChips>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChips& from);
  void MergeFrom(const PlayerChips& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 currentChips = 2;
  bool has_currentchips() const;
  void clear_currentchips();
  static const int kCurrentChipsFieldNumber = 2;
  ::google::protobuf::int64 currentchips() const;
  void set_currentchips(::google::protobuf::int64 value);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerChips)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 currentchips_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerBuyinRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerBuyinRequest) */ {
 public:
  PlayerBuyinRequest();
  virtual ~PlayerBuyinRequest();

  PlayerBuyinRequest(const PlayerBuyinRequest& from);

  inline PlayerBuyinRequest& operator=(const PlayerBuyinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerBuyinRequest(PlayerBuyinRequest&& from) noexcept
    : PlayerBuyinRequest() {
    *this = ::std::move(from);
  }

  inline PlayerBuyinRequest& operator=(PlayerBuyinRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerBuyinRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerBuyinRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerBuyinRequest*>(
               &_PlayerBuyinRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(PlayerBuyinRequest* other);
  friend void swap(PlayerBuyinRequest& a, PlayerBuyinRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerBuyinRequest* New() const final {
    return CreateMaybeMessage<PlayerBuyinRequest>(NULL);
  }

  PlayerBuyinRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerBuyinRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerBuyinRequest& from);
  void MergeFrom(const PlayerBuyinRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerBuyinRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 buyinCount = 2;
  bool has_buyincount() const;
  void clear_buyincount();
  static const int kBuyinCountFieldNumber = 2;
  ::google::protobuf::int64 buyincount() const;
  void set_buyincount(::google::protobuf::int64 value);

  // optional bool buyResult = 1;
  bool has_buyresult() const;
  void clear_buyresult();
  static const int kBuyResultFieldNumber = 1;
  bool buyresult() const;
  void set_buyresult(bool value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerBuyinRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 buyincount_;
  bool buyresult_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerBuyinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerBuyinResponse) */ {
 public:
  PlayerBuyinResponse();
  virtual ~PlayerBuyinResponse();

  PlayerBuyinResponse(const PlayerBuyinResponse& from);

  inline PlayerBuyinResponse& operator=(const PlayerBuyinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerBuyinResponse(PlayerBuyinResponse&& from) noexcept
    : PlayerBuyinResponse() {
    *this = ::std::move(from);
  }

  inline PlayerBuyinResponse& operator=(PlayerBuyinResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerBuyinResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerBuyinResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerBuyinResponse*>(
               &_PlayerBuyinResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(PlayerBuyinResponse* other);
  friend void swap(PlayerBuyinResponse& a, PlayerBuyinResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerBuyinResponse* New() const final {
    return CreateMaybeMessage<PlayerBuyinResponse>(NULL);
  }

  PlayerBuyinResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerBuyinResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerBuyinResponse& from);
  void MergeFrom(const PlayerBuyinResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerBuyinResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerBuyinResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyFaceShowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyFaceShowRequest) */ {
 public:
  ApplyFaceShowRequest();
  virtual ~ApplyFaceShowRequest();

  ApplyFaceShowRequest(const ApplyFaceShowRequest& from);

  inline ApplyFaceShowRequest& operator=(const ApplyFaceShowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyFaceShowRequest(ApplyFaceShowRequest&& from) noexcept
    : ApplyFaceShowRequest() {
    *this = ::std::move(from);
  }

  inline ApplyFaceShowRequest& operator=(ApplyFaceShowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyFaceShowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyFaceShowRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyFaceShowRequest*>(
               &_ApplyFaceShowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(ApplyFaceShowRequest* other);
  friend void swap(ApplyFaceShowRequest& a, ApplyFaceShowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyFaceShowRequest* New() const final {
    return CreateMaybeMessage<ApplyFaceShowRequest>(NULL);
  }

  ApplyFaceShowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyFaceShowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyFaceShowRequest& from);
  void MergeFrom(const ApplyFaceShowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFaceShowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 faceId = 3;
  bool has_faceid() const;
  void clear_faceid();
  static const int kFaceIdFieldNumber = 3;
  ::google::protobuf::int32 faceid() const;
  void set_faceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyFaceShowRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 faceid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyFaceShowResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyFaceShowResponse) */ {
 public:
  ApplyFaceShowResponse();
  virtual ~ApplyFaceShowResponse();

  ApplyFaceShowResponse(const ApplyFaceShowResponse& from);

  inline ApplyFaceShowResponse& operator=(const ApplyFaceShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyFaceShowResponse(ApplyFaceShowResponse&& from) noexcept
    : ApplyFaceShowResponse() {
    *this = ::std::move(from);
  }

  inline ApplyFaceShowResponse& operator=(ApplyFaceShowResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyFaceShowResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyFaceShowResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyFaceShowResponse*>(
               &_ApplyFaceShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(ApplyFaceShowResponse* other);
  friend void swap(ApplyFaceShowResponse& a, ApplyFaceShowResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyFaceShowResponse* New() const final {
    return CreateMaybeMessage<ApplyFaceShowResponse>(NULL);
  }

  ApplyFaceShowResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyFaceShowResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyFaceShowResponse& from);
  void MergeFrom(const ApplyFaceShowResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyFaceShowResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyFaceShowResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerFaceShowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerFaceShowRequest) */ {
 public:
  PlayerFaceShowRequest();
  virtual ~PlayerFaceShowRequest();

  PlayerFaceShowRequest(const PlayerFaceShowRequest& from);

  inline PlayerFaceShowRequest& operator=(const PlayerFaceShowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerFaceShowRequest(PlayerFaceShowRequest&& from) noexcept
    : PlayerFaceShowRequest() {
    *this = ::std::move(from);
  }

  inline PlayerFaceShowRequest& operator=(PlayerFaceShowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerFaceShowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerFaceShowRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerFaceShowRequest*>(
               &_PlayerFaceShowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(PlayerFaceShowRequest* other);
  friend void swap(PlayerFaceShowRequest& a, PlayerFaceShowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerFaceShowRequest* New() const final {
    return CreateMaybeMessage<PlayerFaceShowRequest>(NULL);
  }

  PlayerFaceShowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerFaceShowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerFaceShowRequest& from);
  void MergeFrom(const PlayerFaceShowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerFaceShowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 faceId = 2;
  bool has_faceid() const;
  void clear_faceid();
  static const int kFaceIdFieldNumber = 2;
  ::google::protobuf::int32 faceid() const;
  void set_faceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerFaceShowRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 faceid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerFaceShowResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerFaceShowResponse) */ {
 public:
  PlayerFaceShowResponse();
  virtual ~PlayerFaceShowResponse();

  PlayerFaceShowResponse(const PlayerFaceShowResponse& from);

  inline PlayerFaceShowResponse& operator=(const PlayerFaceShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerFaceShowResponse(PlayerFaceShowResponse&& from) noexcept
    : PlayerFaceShowResponse() {
    *this = ::std::move(from);
  }

  inline PlayerFaceShowResponse& operator=(PlayerFaceShowResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerFaceShowResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerFaceShowResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerFaceShowResponse*>(
               &_PlayerFaceShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(PlayerFaceShowResponse* other);
  friend void swap(PlayerFaceShowResponse& a, PlayerFaceShowResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerFaceShowResponse* New() const final {
    return CreateMaybeMessage<PlayerFaceShowResponse>(NULL);
  }

  PlayerFaceShowResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerFaceShowResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerFaceShowResponse& from);
  void MergeFrom(const PlayerFaceShowResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerFaceShowResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerFaceShowResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyChatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyChatRequest) */ {
 public:
  ApplyChatRequest();
  virtual ~ApplyChatRequest();

  ApplyChatRequest(const ApplyChatRequest& from);

  inline ApplyChatRequest& operator=(const ApplyChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyChatRequest(ApplyChatRequest&& from) noexcept
    : ApplyChatRequest() {
    *this = ::std::move(from);
  }

  inline ApplyChatRequest& operator=(ApplyChatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyChatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyChatRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyChatRequest*>(
               &_ApplyChatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(ApplyChatRequest* other);
  friend void swap(ApplyChatRequest& a, ApplyChatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyChatRequest* New() const final {
    return CreateMaybeMessage<ApplyChatRequest>(NULL);
  }

  ApplyChatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyChatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyChatRequest& from);
  void MergeFrom(const ApplyChatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyChatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes chatContent = 4;
  bool has_chatcontent() const;
  void clear_chatcontent();
  static const int kChatContentFieldNumber = 4;
  const ::std::string& chatcontent() const;
  void set_chatcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_chatcontent(::std::string&& value);
  #endif
  void set_chatcontent(const char* value);
  void set_chatcontent(const void* value, size_t size);
  ::std::string* mutable_chatcontent();
  ::std::string* release_chatcontent();
  void set_allocated_chatcontent(::std::string* chatcontent);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 IsShortcut = 3;
  bool has_isshortcut() const;
  void clear_isshortcut();
  static const int kIsShortcutFieldNumber = 3;
  ::google::protobuf::int32 isshortcut() const;
  void set_isshortcut(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyChatRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatcontent_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 isshortcut_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyChatResponse) */ {
 public:
  ApplyChatResponse();
  virtual ~ApplyChatResponse();

  ApplyChatResponse(const ApplyChatResponse& from);

  inline ApplyChatResponse& operator=(const ApplyChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyChatResponse(ApplyChatResponse&& from) noexcept
    : ApplyChatResponse() {
    *this = ::std::move(from);
  }

  inline ApplyChatResponse& operator=(ApplyChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyChatResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyChatResponse*>(
               &_ApplyChatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(ApplyChatResponse* other);
  friend void swap(ApplyChatResponse& a, ApplyChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyChatResponse* New() const final {
    return CreateMaybeMessage<ApplyChatResponse>(NULL);
  }

  ApplyChatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyChatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyChatResponse& from);
  void MergeFrom(const ApplyChatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyChatResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerChatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerChatRequest) */ {
 public:
  PlayerChatRequest();
  virtual ~PlayerChatRequest();

  PlayerChatRequest(const PlayerChatRequest& from);

  inline PlayerChatRequest& operator=(const PlayerChatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatRequest(PlayerChatRequest&& from) noexcept
    : PlayerChatRequest() {
    *this = ::std::move(from);
  }

  inline PlayerChatRequest& operator=(PlayerChatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChatRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerChatRequest*>(
               &_PlayerChatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(PlayerChatRequest* other);
  friend void swap(PlayerChatRequest& a, PlayerChatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatRequest* New() const final {
    return CreateMaybeMessage<PlayerChatRequest>(NULL);
  }

  PlayerChatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChatRequest& from);
  void MergeFrom(const PlayerChatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes chatContent = 2;
  bool has_chatcontent() const;
  void clear_chatcontent();
  static const int kChatContentFieldNumber = 2;
  const ::std::string& chatcontent() const;
  void set_chatcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_chatcontent(::std::string&& value);
  #endif
  void set_chatcontent(const char* value);
  void set_chatcontent(const void* value, size_t size);
  ::std::string* mutable_chatcontent();
  ::std::string* release_chatcontent();
  void set_allocated_chatcontent(::std::string* chatcontent);

  // optional bytes chatUserName = 4;
  bool has_chatusername() const;
  void clear_chatusername();
  static const int kChatUserNameFieldNumber = 4;
  const ::std::string& chatusername() const;
  void set_chatusername(const ::std::string& value);
  #if LANG_CXX11
  void set_chatusername(::std::string&& value);
  #endif
  void set_chatusername(const char* value);
  void set_chatusername(const void* value, size_t size);
  ::std::string* mutable_chatusername();
  ::std::string* release_chatusername();
  void set_allocated_chatusername(::std::string* chatusername);

  // optional int32 isShortcut = 1;
  bool has_isshortcut() const;
  void clear_isshortcut();
  static const int kIsShortcutFieldNumber = 1;
  ::google::protobuf::int32 isshortcut() const;
  void set_isshortcut(::google::protobuf::int32 value);

  // optional int32 chatUserId = 3;
  bool has_chatuserid() const;
  void clear_chatuserid();
  static const int kChatUserIdFieldNumber = 3;
  ::google::protobuf::int32 chatuserid() const;
  void set_chatuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerChatRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatcontent_;
  ::google::protobuf::internal::ArenaStringPtr chatusername_;
  ::google::protobuf::int32 isshortcut_;
  ::google::protobuf::int32 chatuserid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerChatResponse) */ {
 public:
  PlayerChatResponse();
  virtual ~PlayerChatResponse();

  PlayerChatResponse(const PlayerChatResponse& from);

  inline PlayerChatResponse& operator=(const PlayerChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatResponse(PlayerChatResponse&& from) noexcept
    : PlayerChatResponse() {
    *this = ::std::move(from);
  }

  inline PlayerChatResponse& operator=(PlayerChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChatResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerChatResponse*>(
               &_PlayerChatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(PlayerChatResponse* other);
  friend void swap(PlayerChatResponse& a, PlayerChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatResponse* New() const final {
    return CreateMaybeMessage<PlayerChatResponse>(NULL);
  }

  PlayerChatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChatResponse& from);
  void MergeFrom(const PlayerChatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerChatResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyUsePropsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyUsePropsRequest) */ {
 public:
  ApplyUsePropsRequest();
  virtual ~ApplyUsePropsRequest();

  ApplyUsePropsRequest(const ApplyUsePropsRequest& from);

  inline ApplyUsePropsRequest& operator=(const ApplyUsePropsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyUsePropsRequest(ApplyUsePropsRequest&& from) noexcept
    : ApplyUsePropsRequest() {
    *this = ::std::move(from);
  }

  inline ApplyUsePropsRequest& operator=(ApplyUsePropsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyUsePropsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyUsePropsRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyUsePropsRequest*>(
               &_ApplyUsePropsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(ApplyUsePropsRequest* other);
  friend void swap(ApplyUsePropsRequest& a, ApplyUsePropsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyUsePropsRequest* New() const final {
    return CreateMaybeMessage<ApplyUsePropsRequest>(NULL);
  }

  ApplyUsePropsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyUsePropsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyUsePropsRequest& from);
  void MergeFrom(const ApplyUsePropsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyUsePropsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes propsName = 4;
  bool has_propsname() const;
  void clear_propsname();
  static const int kPropsNameFieldNumber = 4;
  const ::std::string& propsname() const;
  void set_propsname(const ::std::string& value);
  #if LANG_CXX11
  void set_propsname(::std::string&& value);
  #endif
  void set_propsname(const char* value);
  void set_propsname(const void* value, size_t size);
  ::std::string* mutable_propsname();
  ::std::string* release_propsname();
  void set_allocated_propsname(::std::string* propsname);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 acceptUserId = 3;
  bool has_acceptuserid() const;
  void clear_acceptuserid();
  static const int kAcceptUserIdFieldNumber = 3;
  ::google::protobuf::int32 acceptuserid() const;
  void set_acceptuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyUsePropsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr propsname_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 acceptuserid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyUsePropsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyUsePropsResponse) */ {
 public:
  ApplyUsePropsResponse();
  virtual ~ApplyUsePropsResponse();

  ApplyUsePropsResponse(const ApplyUsePropsResponse& from);

  inline ApplyUsePropsResponse& operator=(const ApplyUsePropsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyUsePropsResponse(ApplyUsePropsResponse&& from) noexcept
    : ApplyUsePropsResponse() {
    *this = ::std::move(from);
  }

  inline ApplyUsePropsResponse& operator=(ApplyUsePropsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyUsePropsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyUsePropsResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyUsePropsResponse*>(
               &_ApplyUsePropsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(ApplyUsePropsResponse* other);
  friend void swap(ApplyUsePropsResponse& a, ApplyUsePropsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyUsePropsResponse* New() const final {
    return CreateMaybeMessage<ApplyUsePropsResponse>(NULL);
  }

  ApplyUsePropsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyUsePropsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyUsePropsResponse& from);
  void MergeFrom(const ApplyUsePropsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyUsePropsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyUsePropsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerUsePropsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerUsePropsRequest) */ {
 public:
  PlayerUsePropsRequest();
  virtual ~PlayerUsePropsRequest();

  PlayerUsePropsRequest(const PlayerUsePropsRequest& from);

  inline PlayerUsePropsRequest& operator=(const PlayerUsePropsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerUsePropsRequest(PlayerUsePropsRequest&& from) noexcept
    : PlayerUsePropsRequest() {
    *this = ::std::move(from);
  }

  inline PlayerUsePropsRequest& operator=(PlayerUsePropsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerUsePropsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerUsePropsRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerUsePropsRequest*>(
               &_PlayerUsePropsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(PlayerUsePropsRequest* other);
  friend void swap(PlayerUsePropsRequest& a, PlayerUsePropsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerUsePropsRequest* New() const final {
    return CreateMaybeMessage<PlayerUsePropsRequest>(NULL);
  }

  PlayerUsePropsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerUsePropsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerUsePropsRequest& from);
  void MergeFrom(const PlayerUsePropsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerUsePropsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes propsName = 3;
  bool has_propsname() const;
  void clear_propsname();
  static const int kPropsNameFieldNumber = 3;
  const ::std::string& propsname() const;
  void set_propsname(const ::std::string& value);
  #if LANG_CXX11
  void set_propsname(::std::string&& value);
  #endif
  void set_propsname(const char* value);
  void set_propsname(const void* value, size_t size);
  ::std::string* mutable_propsname();
  ::std::string* release_propsname();
  void set_allocated_propsname(::std::string* propsname);

  // optional int32 applyUserId = 1;
  bool has_applyuserid() const;
  void clear_applyuserid();
  static const int kApplyUserIdFieldNumber = 1;
  ::google::protobuf::int32 applyuserid() const;
  void set_applyuserid(::google::protobuf::int32 value);

  // optional int32 acceptUserId = 2;
  bool has_acceptuserid() const;
  void clear_acceptuserid();
  static const int kAcceptUserIdFieldNumber = 2;
  ::google::protobuf::int32 acceptuserid() const;
  void set_acceptuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerUsePropsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr propsname_;
  ::google::protobuf::int32 applyuserid_;
  ::google::protobuf::int32 acceptuserid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerUsePropsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerUsePropsResponse) */ {
 public:
  PlayerUsePropsResponse();
  virtual ~PlayerUsePropsResponse();

  PlayerUsePropsResponse(const PlayerUsePropsResponse& from);

  inline PlayerUsePropsResponse& operator=(const PlayerUsePropsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerUsePropsResponse(PlayerUsePropsResponse&& from) noexcept
    : PlayerUsePropsResponse() {
    *this = ::std::move(from);
  }

  inline PlayerUsePropsResponse& operator=(PlayerUsePropsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerUsePropsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerUsePropsResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerUsePropsResponse*>(
               &_PlayerUsePropsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(PlayerUsePropsResponse* other);
  friend void swap(PlayerUsePropsResponse& a, PlayerUsePropsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerUsePropsResponse* New() const final {
    return CreateMaybeMessage<PlayerUsePropsResponse>(NULL);
  }

  PlayerUsePropsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerUsePropsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerUsePropsResponse& from);
  void MergeFrom(const PlayerUsePropsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerUsePropsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerUsePropsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentGiftRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentGiftRequest) */ {
 public:
  ApplyPresentGiftRequest();
  virtual ~ApplyPresentGiftRequest();

  ApplyPresentGiftRequest(const ApplyPresentGiftRequest& from);

  inline ApplyPresentGiftRequest& operator=(const ApplyPresentGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentGiftRequest(ApplyPresentGiftRequest&& from) noexcept
    : ApplyPresentGiftRequest() {
    *this = ::std::move(from);
  }

  inline ApplyPresentGiftRequest& operator=(ApplyPresentGiftRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentGiftRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentGiftRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentGiftRequest*>(
               &_ApplyPresentGiftRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(ApplyPresentGiftRequest* other);
  friend void swap(ApplyPresentGiftRequest& a, ApplyPresentGiftRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentGiftRequest* New() const final {
    return CreateMaybeMessage<ApplyPresentGiftRequest>(NULL);
  }

  ApplyPresentGiftRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentGiftRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentGiftRequest& from);
  void MergeFrom(const ApplyPresentGiftRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentGiftRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 acceptorId = 4;
  int acceptorid_size() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 4;
  ::google::protobuf::int32 acceptorid(int index) const;
  void set_acceptorid(int index, ::google::protobuf::int32 value);
  void add_acceptorid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      acceptorid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_acceptorid();

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 giftId = 3;
  bool has_giftid() const;
  void clear_giftid();
  static const int kGiftIdFieldNumber = 3;
  ::google::protobuf::int32 giftid() const;
  void set_giftid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentGiftRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > acceptorid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 giftid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentGiftResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentGiftResponse) */ {
 public:
  ApplyPresentGiftResponse();
  virtual ~ApplyPresentGiftResponse();

  ApplyPresentGiftResponse(const ApplyPresentGiftResponse& from);

  inline ApplyPresentGiftResponse& operator=(const ApplyPresentGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentGiftResponse(ApplyPresentGiftResponse&& from) noexcept
    : ApplyPresentGiftResponse() {
    *this = ::std::move(from);
  }

  inline ApplyPresentGiftResponse& operator=(ApplyPresentGiftResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentGiftResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentGiftResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentGiftResponse*>(
               &_ApplyPresentGiftResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(ApplyPresentGiftResponse* other);
  friend void swap(ApplyPresentGiftResponse& a, ApplyPresentGiftResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentGiftResponse* New() const final {
    return CreateMaybeMessage<ApplyPresentGiftResponse>(NULL);
  }

  ApplyPresentGiftResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentGiftResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentGiftResponse& from);
  void MergeFrom(const ApplyPresentGiftResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentGiftResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentGiftResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentGiftRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentGiftRequest) */ {
 public:
  PlayerPresentGiftRequest();
  virtual ~PlayerPresentGiftRequest();

  PlayerPresentGiftRequest(const PlayerPresentGiftRequest& from);

  inline PlayerPresentGiftRequest& operator=(const PlayerPresentGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentGiftRequest(PlayerPresentGiftRequest&& from) noexcept
    : PlayerPresentGiftRequest() {
    *this = ::std::move(from);
  }

  inline PlayerPresentGiftRequest& operator=(PlayerPresentGiftRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentGiftRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentGiftRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentGiftRequest*>(
               &_PlayerPresentGiftRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(PlayerPresentGiftRequest* other);
  friend void swap(PlayerPresentGiftRequest& a, PlayerPresentGiftRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentGiftRequest* New() const final {
    return CreateMaybeMessage<PlayerPresentGiftRequest>(NULL);
  }

  PlayerPresentGiftRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentGiftRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentGiftRequest& from);
  void MergeFrom(const PlayerPresentGiftRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentGiftRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 acceptorId = 3;
  int acceptorid_size() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 3;
  ::google::protobuf::int32 acceptorid(int index) const;
  void set_acceptorid(int index, ::google::protobuf::int32 value);
  void add_acceptorid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      acceptorid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_acceptorid();

  // optional int32 presenterId = 1;
  bool has_presenterid() const;
  void clear_presenterid();
  static const int kPresenterIdFieldNumber = 1;
  ::google::protobuf::int32 presenterid() const;
  void set_presenterid(::google::protobuf::int32 value);

  // optional int32 giftId = 2;
  bool has_giftid() const;
  void clear_giftid();
  static const int kGiftIdFieldNumber = 2;
  ::google::protobuf::int32 giftid() const;
  void set_giftid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentGiftRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > acceptorid_;
  ::google::protobuf::int32 presenterid_;
  ::google::protobuf::int32 giftid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentGiftResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentGiftResponse) */ {
 public:
  PlayerPresentGiftResponse();
  virtual ~PlayerPresentGiftResponse();

  PlayerPresentGiftResponse(const PlayerPresentGiftResponse& from);

  inline PlayerPresentGiftResponse& operator=(const PlayerPresentGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentGiftResponse(PlayerPresentGiftResponse&& from) noexcept
    : PlayerPresentGiftResponse() {
    *this = ::std::move(from);
  }

  inline PlayerPresentGiftResponse& operator=(PlayerPresentGiftResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentGiftResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentGiftResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentGiftResponse*>(
               &_PlayerPresentGiftResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(PlayerPresentGiftResponse* other);
  friend void swap(PlayerPresentGiftResponse& a, PlayerPresentGiftResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentGiftResponse* New() const final {
    return CreateMaybeMessage<PlayerPresentGiftResponse>(NULL);
  }

  PlayerPresentGiftResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentGiftResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentGiftResponse& from);
  void MergeFrom(const PlayerPresentGiftResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentGiftResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentGiftResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentGiftNewInterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentGiftNewInterRequest) */ {
 public:
  ApplyPresentGiftNewInterRequest();
  virtual ~ApplyPresentGiftNewInterRequest();

  ApplyPresentGiftNewInterRequest(const ApplyPresentGiftNewInterRequest& from);

  inline ApplyPresentGiftNewInterRequest& operator=(const ApplyPresentGiftNewInterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentGiftNewInterRequest(ApplyPresentGiftNewInterRequest&& from) noexcept
    : ApplyPresentGiftNewInterRequest() {
    *this = ::std::move(from);
  }

  inline ApplyPresentGiftNewInterRequest& operator=(ApplyPresentGiftNewInterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentGiftNewInterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentGiftNewInterRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentGiftNewInterRequest*>(
               &_ApplyPresentGiftNewInterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(ApplyPresentGiftNewInterRequest* other);
  friend void swap(ApplyPresentGiftNewInterRequest& a, ApplyPresentGiftNewInterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentGiftNewInterRequest* New() const final {
    return CreateMaybeMessage<ApplyPresentGiftNewInterRequest>(NULL);
  }

  ApplyPresentGiftNewInterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentGiftNewInterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentGiftNewInterRequest& from);
  void MergeFrom(const ApplyPresentGiftNewInterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentGiftNewInterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 acceptorId = 5;
  int acceptorid_size() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 5;
  ::google::protobuf::int32 acceptorid(int index) const;
  void set_acceptorid(int index, ::google::protobuf::int32 value);
  void add_acceptorid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      acceptorid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_acceptorid();

  // optional bytes giftUrl = 4;
  bool has_gifturl() const;
  void clear_gifturl();
  static const int kGiftUrlFieldNumber = 4;
  const ::std::string& gifturl() const;
  void set_gifturl(const ::std::string& value);
  #if LANG_CXX11
  void set_gifturl(::std::string&& value);
  #endif
  void set_gifturl(const char* value);
  void set_gifturl(const void* value, size_t size);
  ::std::string* mutable_gifturl();
  ::std::string* release_gifturl();
  void set_allocated_gifturl(::std::string* gifturl);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 giftId = 3;
  bool has_giftid() const;
  void clear_giftid();
  static const int kGiftIdFieldNumber = 3;
  ::google::protobuf::int32 giftid() const;
  void set_giftid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentGiftNewInterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > acceptorid_;
  ::google::protobuf::internal::ArenaStringPtr gifturl_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 giftid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentGiftNewInterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentGiftNewInterResponse) */ {
 public:
  ApplyPresentGiftNewInterResponse();
  virtual ~ApplyPresentGiftNewInterResponse();

  ApplyPresentGiftNewInterResponse(const ApplyPresentGiftNewInterResponse& from);

  inline ApplyPresentGiftNewInterResponse& operator=(const ApplyPresentGiftNewInterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentGiftNewInterResponse(ApplyPresentGiftNewInterResponse&& from) noexcept
    : ApplyPresentGiftNewInterResponse() {
    *this = ::std::move(from);
  }

  inline ApplyPresentGiftNewInterResponse& operator=(ApplyPresentGiftNewInterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentGiftNewInterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentGiftNewInterResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentGiftNewInterResponse*>(
               &_ApplyPresentGiftNewInterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(ApplyPresentGiftNewInterResponse* other);
  friend void swap(ApplyPresentGiftNewInterResponse& a, ApplyPresentGiftNewInterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentGiftNewInterResponse* New() const final {
    return CreateMaybeMessage<ApplyPresentGiftNewInterResponse>(NULL);
  }

  ApplyPresentGiftNewInterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentGiftNewInterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentGiftNewInterResponse& from);
  void MergeFrom(const ApplyPresentGiftNewInterResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentGiftNewInterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentGiftNewInterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentChipsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentChipsRequest) */ {
 public:
  ApplyPresentChipsRequest();
  virtual ~ApplyPresentChipsRequest();

  ApplyPresentChipsRequest(const ApplyPresentChipsRequest& from);

  inline ApplyPresentChipsRequest& operator=(const ApplyPresentChipsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentChipsRequest(ApplyPresentChipsRequest&& from) noexcept
    : ApplyPresentChipsRequest() {
    *this = ::std::move(from);
  }

  inline ApplyPresentChipsRequest& operator=(ApplyPresentChipsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentChipsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentChipsRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentChipsRequest*>(
               &_ApplyPresentChipsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(ApplyPresentChipsRequest* other);
  friend void swap(ApplyPresentChipsRequest& a, ApplyPresentChipsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentChipsRequest* New() const final {
    return CreateMaybeMessage<ApplyPresentChipsRequest>(NULL);
  }

  ApplyPresentChipsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentChipsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentChipsRequest& from);
  void MergeFrom(const ApplyPresentChipsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentChipsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int64 chipsCount = 4;
  bool has_chipscount() const;
  void clear_chipscount();
  static const int kChipsCountFieldNumber = 4;
  ::google::protobuf::int64 chipscount() const;
  void set_chipscount(::google::protobuf::int64 value);

  // optional int32 acceptorId = 3;
  bool has_acceptorid() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 3;
  ::google::protobuf::int32 acceptorid() const;
  void set_acceptorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentChipsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int64 chipscount_;
  ::google::protobuf::int32 acceptorid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPresentChipsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPresentChipsResponse) */ {
 public:
  ApplyPresentChipsResponse();
  virtual ~ApplyPresentChipsResponse();

  ApplyPresentChipsResponse(const ApplyPresentChipsResponse& from);

  inline ApplyPresentChipsResponse& operator=(const ApplyPresentChipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPresentChipsResponse(ApplyPresentChipsResponse&& from) noexcept
    : ApplyPresentChipsResponse() {
    *this = ::std::move(from);
  }

  inline ApplyPresentChipsResponse& operator=(ApplyPresentChipsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPresentChipsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPresentChipsResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyPresentChipsResponse*>(
               &_ApplyPresentChipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(ApplyPresentChipsResponse* other);
  friend void swap(ApplyPresentChipsResponse& a, ApplyPresentChipsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPresentChipsResponse* New() const final {
    return CreateMaybeMessage<ApplyPresentChipsResponse>(NULL);
  }

  ApplyPresentChipsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPresentChipsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPresentChipsResponse& from);
  void MergeFrom(const ApplyPresentChipsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPresentChipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPresentChipsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentChipsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentChipsRequest) */ {
 public:
  PlayerPresentChipsRequest();
  virtual ~PlayerPresentChipsRequest();

  PlayerPresentChipsRequest(const PlayerPresentChipsRequest& from);

  inline PlayerPresentChipsRequest& operator=(const PlayerPresentChipsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentChipsRequest(PlayerPresentChipsRequest&& from) noexcept
    : PlayerPresentChipsRequest() {
    *this = ::std::move(from);
  }

  inline PlayerPresentChipsRequest& operator=(PlayerPresentChipsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentChipsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentChipsRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentChipsRequest*>(
               &_PlayerPresentChipsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(PlayerPresentChipsRequest* other);
  friend void swap(PlayerPresentChipsRequest& a, PlayerPresentChipsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentChipsRequest* New() const final {
    return CreateMaybeMessage<PlayerPresentChipsRequest>(NULL);
  }

  PlayerPresentChipsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentChipsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentChipsRequest& from);
  void MergeFrom(const PlayerPresentChipsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentChipsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 presenterId = 1;
  bool has_presenterid() const;
  void clear_presenterid();
  static const int kPresenterIdFieldNumber = 1;
  ::google::protobuf::int32 presenterid() const;
  void set_presenterid(::google::protobuf::int32 value);

  // optional int32 acceptorId = 2;
  bool has_acceptorid() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 2;
  ::google::protobuf::int32 acceptorid() const;
  void set_acceptorid(::google::protobuf::int32 value);

  // optional int64 chipsCount = 3;
  bool has_chipscount() const;
  void clear_chipscount();
  static const int kChipsCountFieldNumber = 3;
  ::google::protobuf::int64 chipscount() const;
  void set_chipscount(::google::protobuf::int64 value);

  // optional int64 presenterCarry = 4;
  bool has_presentercarry() const;
  void clear_presentercarry();
  static const int kPresenterCarryFieldNumber = 4;
  ::google::protobuf::int64 presentercarry() const;
  void set_presentercarry(::google::protobuf::int64 value);

  // optional int64 acceptorCarry = 5;
  bool has_acceptorcarry() const;
  void clear_acceptorcarry();
  static const int kAcceptorCarryFieldNumber = 5;
  ::google::protobuf::int64 acceptorcarry() const;
  void set_acceptorcarry(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentChipsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 presenterid_;
  ::google::protobuf::int32 acceptorid_;
  ::google::protobuf::int64 chipscount_;
  ::google::protobuf::int64 presentercarry_;
  ::google::protobuf::int64 acceptorcarry_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentChipsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentChipsResponse) */ {
 public:
  PlayerPresentChipsResponse();
  virtual ~PlayerPresentChipsResponse();

  PlayerPresentChipsResponse(const PlayerPresentChipsResponse& from);

  inline PlayerPresentChipsResponse& operator=(const PlayerPresentChipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentChipsResponse(PlayerPresentChipsResponse&& from) noexcept
    : PlayerPresentChipsResponse() {
    *this = ::std::move(from);
  }

  inline PlayerPresentChipsResponse& operator=(PlayerPresentChipsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentChipsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentChipsResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentChipsResponse*>(
               &_PlayerPresentChipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(PlayerPresentChipsResponse* other);
  friend void swap(PlayerPresentChipsResponse& a, PlayerPresentChipsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentChipsResponse* New() const final {
    return CreateMaybeMessage<PlayerPresentChipsResponse>(NULL);
  }

  PlayerPresentChipsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentChipsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentChipsResponse& from);
  void MergeFrom(const PlayerPresentChipsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentChipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentChipsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentGiftNewInterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentGiftNewInterRequest) */ {
 public:
  PlayerPresentGiftNewInterRequest();
  virtual ~PlayerPresentGiftNewInterRequest();

  PlayerPresentGiftNewInterRequest(const PlayerPresentGiftNewInterRequest& from);

  inline PlayerPresentGiftNewInterRequest& operator=(const PlayerPresentGiftNewInterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentGiftNewInterRequest(PlayerPresentGiftNewInterRequest&& from) noexcept
    : PlayerPresentGiftNewInterRequest() {
    *this = ::std::move(from);
  }

  inline PlayerPresentGiftNewInterRequest& operator=(PlayerPresentGiftNewInterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentGiftNewInterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentGiftNewInterRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentGiftNewInterRequest*>(
               &_PlayerPresentGiftNewInterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(PlayerPresentGiftNewInterRequest* other);
  friend void swap(PlayerPresentGiftNewInterRequest& a, PlayerPresentGiftNewInterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentGiftNewInterRequest* New() const final {
    return CreateMaybeMessage<PlayerPresentGiftNewInterRequest>(NULL);
  }

  PlayerPresentGiftNewInterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentGiftNewInterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentGiftNewInterRequest& from);
  void MergeFrom(const PlayerPresentGiftNewInterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentGiftNewInterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 acceptorId = 4;
  int acceptorid_size() const;
  void clear_acceptorid();
  static const int kAcceptorIdFieldNumber = 4;
  ::google::protobuf::int32 acceptorid(int index) const;
  void set_acceptorid(int index, ::google::protobuf::int32 value);
  void add_acceptorid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      acceptorid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_acceptorid();

  // optional bytes giftUrl = 3;
  bool has_gifturl() const;
  void clear_gifturl();
  static const int kGiftUrlFieldNumber = 3;
  const ::std::string& gifturl() const;
  void set_gifturl(const ::std::string& value);
  #if LANG_CXX11
  void set_gifturl(::std::string&& value);
  #endif
  void set_gifturl(const char* value);
  void set_gifturl(const void* value, size_t size);
  ::std::string* mutable_gifturl();
  ::std::string* release_gifturl();
  void set_allocated_gifturl(::std::string* gifturl);

  // optional int32 presenterId = 1;
  bool has_presenterid() const;
  void clear_presenterid();
  static const int kPresenterIdFieldNumber = 1;
  ::google::protobuf::int32 presenterid() const;
  void set_presenterid(::google::protobuf::int32 value);

  // optional int32 giftId = 2;
  bool has_giftid() const;
  void clear_giftid();
  static const int kGiftIdFieldNumber = 2;
  ::google::protobuf::int32 giftid() const;
  void set_giftid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentGiftNewInterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > acceptorid_;
  ::google::protobuf::internal::ArenaStringPtr gifturl_;
  ::google::protobuf::int32 presenterid_;
  ::google::protobuf::int32 giftid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPresentGiftNewInterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPresentGiftNewInterResponse) */ {
 public:
  PlayerPresentGiftNewInterResponse();
  virtual ~PlayerPresentGiftNewInterResponse();

  PlayerPresentGiftNewInterResponse(const PlayerPresentGiftNewInterResponse& from);

  inline PlayerPresentGiftNewInterResponse& operator=(const PlayerPresentGiftNewInterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPresentGiftNewInterResponse(PlayerPresentGiftNewInterResponse&& from) noexcept
    : PlayerPresentGiftNewInterResponse() {
    *this = ::std::move(from);
  }

  inline PlayerPresentGiftNewInterResponse& operator=(PlayerPresentGiftNewInterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPresentGiftNewInterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPresentGiftNewInterResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerPresentGiftNewInterResponse*>(
               &_PlayerPresentGiftNewInterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(PlayerPresentGiftNewInterResponse* other);
  friend void swap(PlayerPresentGiftNewInterResponse& a, PlayerPresentGiftNewInterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPresentGiftNewInterResponse* New() const final {
    return CreateMaybeMessage<PlayerPresentGiftNewInterResponse>(NULL);
  }

  PlayerPresentGiftNewInterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPresentGiftNewInterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPresentGiftNewInterResponse& from);
  void MergeFrom(const PlayerPresentGiftNewInterResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPresentGiftNewInterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPresentGiftNewInterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerEnterRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerEnterRoomRequest) */ {
 public:
  PlayerEnterRoomRequest();
  virtual ~PlayerEnterRoomRequest();

  PlayerEnterRoomRequest(const PlayerEnterRoomRequest& from);

  inline PlayerEnterRoomRequest& operator=(const PlayerEnterRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterRoomRequest(PlayerEnterRoomRequest&& from) noexcept
    : PlayerEnterRoomRequest() {
    *this = ::std::move(from);
  }

  inline PlayerEnterRoomRequest& operator=(PlayerEnterRoomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerEnterRoomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerEnterRoomRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterRoomRequest*>(
               &_PlayerEnterRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(PlayerEnterRoomRequest* other);
  friend void swap(PlayerEnterRoomRequest& a, PlayerEnterRoomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterRoomRequest* New() const final {
    return CreateMaybeMessage<PlayerEnterRoomRequest>(NULL);
  }

  PlayerEnterRoomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerEnterRoomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerEnterRoomRequest& from);
  void MergeFrom(const PlayerEnterRoomRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerEnterRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerEnterRoomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerEnterRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerEnterRoomResponse) */ {
 public:
  PlayerEnterRoomResponse();
  virtual ~PlayerEnterRoomResponse();

  PlayerEnterRoomResponse(const PlayerEnterRoomResponse& from);

  inline PlayerEnterRoomResponse& operator=(const PlayerEnterRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterRoomResponse(PlayerEnterRoomResponse&& from) noexcept
    : PlayerEnterRoomResponse() {
    *this = ::std::move(from);
  }

  inline PlayerEnterRoomResponse& operator=(PlayerEnterRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerEnterRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerEnterRoomResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterRoomResponse*>(
               &_PlayerEnterRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(PlayerEnterRoomResponse* other);
  friend void swap(PlayerEnterRoomResponse& a, PlayerEnterRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterRoomResponse* New() const final {
    return CreateMaybeMessage<PlayerEnterRoomResponse>(NULL);
  }

  PlayerEnterRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerEnterRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerEnterRoomResponse& from);
  void MergeFrom(const PlayerEnterRoomResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerEnterRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerEnterRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTransmitMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTransmitMessageRequest) */ {
 public:
  ApplyTransmitMessageRequest();
  virtual ~ApplyTransmitMessageRequest();

  ApplyTransmitMessageRequest(const ApplyTransmitMessageRequest& from);

  inline ApplyTransmitMessageRequest& operator=(const ApplyTransmitMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTransmitMessageRequest(ApplyTransmitMessageRequest&& from) noexcept
    : ApplyTransmitMessageRequest() {
    *this = ::std::move(from);
  }

  inline ApplyTransmitMessageRequest& operator=(ApplyTransmitMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTransmitMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTransmitMessageRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyTransmitMessageRequest*>(
               &_ApplyTransmitMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(ApplyTransmitMessageRequest* other);
  friend void swap(ApplyTransmitMessageRequest& a, ApplyTransmitMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTransmitMessageRequest* New() const final {
    return CreateMaybeMessage<ApplyTransmitMessageRequest>(NULL);
  }

  ApplyTransmitMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTransmitMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTransmitMessageRequest& from);
  void MergeFrom(const ApplyTransmitMessageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTransmitMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 recvUserId = 6;
  int recvuserid_size() const;
  void clear_recvuserid();
  static const int kRecvUserIdFieldNumber = 6;
  ::google::protobuf::int32 recvuserid(int index) const;
  void set_recvuserid(int index, ::google::protobuf::int32 value);
  void add_recvuserid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recvuserid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recvuserid();

  // optional bytes transmitJsonData = 5;
  bool has_transmitjsondata() const;
  void clear_transmitjsondata();
  static const int kTransmitJsonDataFieldNumber = 5;
  const ::std::string& transmitjsondata() const;
  void set_transmitjsondata(const ::std::string& value);
  #if LANG_CXX11
  void set_transmitjsondata(::std::string&& value);
  #endif
  void set_transmitjsondata(const char* value);
  void set_transmitjsondata(const void* value, size_t size);
  ::std::string* mutable_transmitjsondata();
  ::std::string* release_transmitjsondata();
  void set_allocated_transmitjsondata(::std::string* transmitjsondata);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 transmitMsgType = 3;
  bool has_transmitmsgtype() const;
  void clear_transmitmsgtype();
  static const int kTransmitMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 transmitmsgtype() const;
  void set_transmitmsgtype(::google::protobuf::int32 value);

  // optional int32 transmitMsgId = 4;
  bool has_transmitmsgid() const;
  void clear_transmitmsgid();
  static const int kTransmitMsgIdFieldNumber = 4;
  ::google::protobuf::int32 transmitmsgid() const;
  void set_transmitmsgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTransmitMessageRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recvuserid_;
  ::google::protobuf::internal::ArenaStringPtr transmitjsondata_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 transmitmsgtype_;
  ::google::protobuf::int32 transmitmsgid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTransmitMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTransmitMessageResponse) */ {
 public:
  ApplyTransmitMessageResponse();
  virtual ~ApplyTransmitMessageResponse();

  ApplyTransmitMessageResponse(const ApplyTransmitMessageResponse& from);

  inline ApplyTransmitMessageResponse& operator=(const ApplyTransmitMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTransmitMessageResponse(ApplyTransmitMessageResponse&& from) noexcept
    : ApplyTransmitMessageResponse() {
    *this = ::std::move(from);
  }

  inline ApplyTransmitMessageResponse& operator=(ApplyTransmitMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTransmitMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTransmitMessageResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyTransmitMessageResponse*>(
               &_ApplyTransmitMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(ApplyTransmitMessageResponse* other);
  friend void swap(ApplyTransmitMessageResponse& a, ApplyTransmitMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTransmitMessageResponse* New() const final {
    return CreateMaybeMessage<ApplyTransmitMessageResponse>(NULL);
  }

  ApplyTransmitMessageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTransmitMessageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTransmitMessageResponse& from);
  void MergeFrom(const ApplyTransmitMessageResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTransmitMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTransmitMessageResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTransmitMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTransmitMessageRequest) */ {
 public:
  PlayerTransmitMessageRequest();
  virtual ~PlayerTransmitMessageRequest();

  PlayerTransmitMessageRequest(const PlayerTransmitMessageRequest& from);

  inline PlayerTransmitMessageRequest& operator=(const PlayerTransmitMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTransmitMessageRequest(PlayerTransmitMessageRequest&& from) noexcept
    : PlayerTransmitMessageRequest() {
    *this = ::std::move(from);
  }

  inline PlayerTransmitMessageRequest& operator=(PlayerTransmitMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTransmitMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTransmitMessageRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerTransmitMessageRequest*>(
               &_PlayerTransmitMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(PlayerTransmitMessageRequest* other);
  friend void swap(PlayerTransmitMessageRequest& a, PlayerTransmitMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTransmitMessageRequest* New() const final {
    return CreateMaybeMessage<PlayerTransmitMessageRequest>(NULL);
  }

  PlayerTransmitMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTransmitMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTransmitMessageRequest& from);
  void MergeFrom(const PlayerTransmitMessageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTransmitMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes transmitJsonData = 3;
  bool has_transmitjsondata() const;
  void clear_transmitjsondata();
  static const int kTransmitJsonDataFieldNumber = 3;
  const ::std::string& transmitjsondata() const;
  void set_transmitjsondata(const ::std::string& value);
  #if LANG_CXX11
  void set_transmitjsondata(::std::string&& value);
  #endif
  void set_transmitjsondata(const char* value);
  void set_transmitjsondata(const void* value, size_t size);
  ::std::string* mutable_transmitjsondata();
  ::std::string* release_transmitjsondata();
  void set_allocated_transmitjsondata(::std::string* transmitjsondata);

  // optional int32 transmitMsgType = 1;
  bool has_transmitmsgtype() const;
  void clear_transmitmsgtype();
  static const int kTransmitMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 transmitmsgtype() const;
  void set_transmitmsgtype(::google::protobuf::int32 value);

  // optional int32 transmitMsgId = 2;
  bool has_transmitmsgid() const;
  void clear_transmitmsgid();
  static const int kTransmitMsgIdFieldNumber = 2;
  ::google::protobuf::int32 transmitmsgid() const;
  void set_transmitmsgid(::google::protobuf::int32 value);

  // optional int32 sendUserId = 4;
  bool has_senduserid() const;
  void clear_senduserid();
  static const int kSendUserIdFieldNumber = 4;
  ::google::protobuf::int32 senduserid() const;
  void set_senduserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTransmitMessageRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr transmitjsondata_;
  ::google::protobuf::int32 transmitmsgtype_;
  ::google::protobuf::int32 transmitmsgid_;
  ::google::protobuf::int32 senduserid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTransmitMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTransmitMessageResponse) */ {
 public:
  PlayerTransmitMessageResponse();
  virtual ~PlayerTransmitMessageResponse();

  PlayerTransmitMessageResponse(const PlayerTransmitMessageResponse& from);

  inline PlayerTransmitMessageResponse& operator=(const PlayerTransmitMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTransmitMessageResponse(PlayerTransmitMessageResponse&& from) noexcept
    : PlayerTransmitMessageResponse() {
    *this = ::std::move(from);
  }

  inline PlayerTransmitMessageResponse& operator=(PlayerTransmitMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTransmitMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTransmitMessageResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerTransmitMessageResponse*>(
               &_PlayerTransmitMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(PlayerTransmitMessageResponse* other);
  friend void swap(PlayerTransmitMessageResponse& a, PlayerTransmitMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTransmitMessageResponse* New() const final {
    return CreateMaybeMessage<PlayerTransmitMessageResponse>(NULL);
  }

  PlayerTransmitMessageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTransmitMessageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTransmitMessageResponse& from);
  void MergeFrom(const PlayerTransmitMessageResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTransmitMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTransmitMessageResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTrusteeOnRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTrusteeOnRequest) */ {
 public:
  ApplyTrusteeOnRequest();
  virtual ~ApplyTrusteeOnRequest();

  ApplyTrusteeOnRequest(const ApplyTrusteeOnRequest& from);

  inline ApplyTrusteeOnRequest& operator=(const ApplyTrusteeOnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTrusteeOnRequest(ApplyTrusteeOnRequest&& from) noexcept
    : ApplyTrusteeOnRequest() {
    *this = ::std::move(from);
  }

  inline ApplyTrusteeOnRequest& operator=(ApplyTrusteeOnRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTrusteeOnRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTrusteeOnRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyTrusteeOnRequest*>(
               &_ApplyTrusteeOnRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(ApplyTrusteeOnRequest* other);
  friend void swap(ApplyTrusteeOnRequest& a, ApplyTrusteeOnRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTrusteeOnRequest* New() const final {
    return CreateMaybeMessage<ApplyTrusteeOnRequest>(NULL);
  }

  ApplyTrusteeOnRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTrusteeOnRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTrusteeOnRequest& from);
  void MergeFrom(const ApplyTrusteeOnRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTrusteeOnRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTrusteeOnRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTrusteeOnResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTrusteeOnResponse) */ {
 public:
  ApplyTrusteeOnResponse();
  virtual ~ApplyTrusteeOnResponse();

  ApplyTrusteeOnResponse(const ApplyTrusteeOnResponse& from);

  inline ApplyTrusteeOnResponse& operator=(const ApplyTrusteeOnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTrusteeOnResponse(ApplyTrusteeOnResponse&& from) noexcept
    : ApplyTrusteeOnResponse() {
    *this = ::std::move(from);
  }

  inline ApplyTrusteeOnResponse& operator=(ApplyTrusteeOnResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTrusteeOnResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTrusteeOnResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyTrusteeOnResponse*>(
               &_ApplyTrusteeOnResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(ApplyTrusteeOnResponse* other);
  friend void swap(ApplyTrusteeOnResponse& a, ApplyTrusteeOnResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTrusteeOnResponse* New() const final {
    return CreateMaybeMessage<ApplyTrusteeOnResponse>(NULL);
  }

  ApplyTrusteeOnResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTrusteeOnResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTrusteeOnResponse& from);
  void MergeFrom(const ApplyTrusteeOnResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTrusteeOnResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTrusteeOnResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTrusteeOnRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTrusteeOnRequest) */ {
 public:
  PlayerTrusteeOnRequest();
  virtual ~PlayerTrusteeOnRequest();

  PlayerTrusteeOnRequest(const PlayerTrusteeOnRequest& from);

  inline PlayerTrusteeOnRequest& operator=(const PlayerTrusteeOnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTrusteeOnRequest(PlayerTrusteeOnRequest&& from) noexcept
    : PlayerTrusteeOnRequest() {
    *this = ::std::move(from);
  }

  inline PlayerTrusteeOnRequest& operator=(PlayerTrusteeOnRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTrusteeOnRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTrusteeOnRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerTrusteeOnRequest*>(
               &_PlayerTrusteeOnRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(PlayerTrusteeOnRequest* other);
  friend void swap(PlayerTrusteeOnRequest& a, PlayerTrusteeOnRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTrusteeOnRequest* New() const final {
    return CreateMaybeMessage<PlayerTrusteeOnRequest>(NULL);
  }

  PlayerTrusteeOnRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTrusteeOnRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTrusteeOnRequest& from);
  void MergeFrom(const PlayerTrusteeOnRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTrusteeOnRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTrusteeOnRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTrusteeOnResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTrusteeOnResponse) */ {
 public:
  PlayerTrusteeOnResponse();
  virtual ~PlayerTrusteeOnResponse();

  PlayerTrusteeOnResponse(const PlayerTrusteeOnResponse& from);

  inline PlayerTrusteeOnResponse& operator=(const PlayerTrusteeOnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTrusteeOnResponse(PlayerTrusteeOnResponse&& from) noexcept
    : PlayerTrusteeOnResponse() {
    *this = ::std::move(from);
  }

  inline PlayerTrusteeOnResponse& operator=(PlayerTrusteeOnResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTrusteeOnResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTrusteeOnResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerTrusteeOnResponse*>(
               &_PlayerTrusteeOnResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(PlayerTrusteeOnResponse* other);
  friend void swap(PlayerTrusteeOnResponse& a, PlayerTrusteeOnResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTrusteeOnResponse* New() const final {
    return CreateMaybeMessage<PlayerTrusteeOnResponse>(NULL);
  }

  PlayerTrusteeOnResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTrusteeOnResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTrusteeOnResponse& from);
  void MergeFrom(const PlayerTrusteeOnResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTrusteeOnResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTrusteeOnResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTrusteeOffRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTrusteeOffRequest) */ {
 public:
  ApplyTrusteeOffRequest();
  virtual ~ApplyTrusteeOffRequest();

  ApplyTrusteeOffRequest(const ApplyTrusteeOffRequest& from);

  inline ApplyTrusteeOffRequest& operator=(const ApplyTrusteeOffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTrusteeOffRequest(ApplyTrusteeOffRequest&& from) noexcept
    : ApplyTrusteeOffRequest() {
    *this = ::std::move(from);
  }

  inline ApplyTrusteeOffRequest& operator=(ApplyTrusteeOffRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTrusteeOffRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTrusteeOffRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyTrusteeOffRequest*>(
               &_ApplyTrusteeOffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(ApplyTrusteeOffRequest* other);
  friend void swap(ApplyTrusteeOffRequest& a, ApplyTrusteeOffRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTrusteeOffRequest* New() const final {
    return CreateMaybeMessage<ApplyTrusteeOffRequest>(NULL);
  }

  ApplyTrusteeOffRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTrusteeOffRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTrusteeOffRequest& from);
  void MergeFrom(const ApplyTrusteeOffRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTrusteeOffRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTrusteeOffRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyTrusteeOffResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyTrusteeOffResponse) */ {
 public:
  ApplyTrusteeOffResponse();
  virtual ~ApplyTrusteeOffResponse();

  ApplyTrusteeOffResponse(const ApplyTrusteeOffResponse& from);

  inline ApplyTrusteeOffResponse& operator=(const ApplyTrusteeOffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyTrusteeOffResponse(ApplyTrusteeOffResponse&& from) noexcept
    : ApplyTrusteeOffResponse() {
    *this = ::std::move(from);
  }

  inline ApplyTrusteeOffResponse& operator=(ApplyTrusteeOffResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyTrusteeOffResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyTrusteeOffResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyTrusteeOffResponse*>(
               &_ApplyTrusteeOffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(ApplyTrusteeOffResponse* other);
  friend void swap(ApplyTrusteeOffResponse& a, ApplyTrusteeOffResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyTrusteeOffResponse* New() const final {
    return CreateMaybeMessage<ApplyTrusteeOffResponse>(NULL);
  }

  ApplyTrusteeOffResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyTrusteeOffResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyTrusteeOffResponse& from);
  void MergeFrom(const ApplyTrusteeOffResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyTrusteeOffResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyTrusteeOffResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTrusteeOffRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTrusteeOffRequest) */ {
 public:
  PlayerTrusteeOffRequest();
  virtual ~PlayerTrusteeOffRequest();

  PlayerTrusteeOffRequest(const PlayerTrusteeOffRequest& from);

  inline PlayerTrusteeOffRequest& operator=(const PlayerTrusteeOffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTrusteeOffRequest(PlayerTrusteeOffRequest&& from) noexcept
    : PlayerTrusteeOffRequest() {
    *this = ::std::move(from);
  }

  inline PlayerTrusteeOffRequest& operator=(PlayerTrusteeOffRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTrusteeOffRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTrusteeOffRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerTrusteeOffRequest*>(
               &_PlayerTrusteeOffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(PlayerTrusteeOffRequest* other);
  friend void swap(PlayerTrusteeOffRequest& a, PlayerTrusteeOffRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTrusteeOffRequest* New() const final {
    return CreateMaybeMessage<PlayerTrusteeOffRequest>(NULL);
  }

  PlayerTrusteeOffRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTrusteeOffRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTrusteeOffRequest& from);
  void MergeFrom(const PlayerTrusteeOffRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTrusteeOffRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTrusteeOffRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerTrusteeOffResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerTrusteeOffResponse) */ {
 public:
  PlayerTrusteeOffResponse();
  virtual ~PlayerTrusteeOffResponse();

  PlayerTrusteeOffResponse(const PlayerTrusteeOffResponse& from);

  inline PlayerTrusteeOffResponse& operator=(const PlayerTrusteeOffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTrusteeOffResponse(PlayerTrusteeOffResponse&& from) noexcept
    : PlayerTrusteeOffResponse() {
    *this = ::std::move(from);
  }

  inline PlayerTrusteeOffResponse& operator=(PlayerTrusteeOffResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerTrusteeOffResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerTrusteeOffResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerTrusteeOffResponse*>(
               &_PlayerTrusteeOffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(PlayerTrusteeOffResponse* other);
  friend void swap(PlayerTrusteeOffResponse& a, PlayerTrusteeOffResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTrusteeOffResponse* New() const final {
    return CreateMaybeMessage<PlayerTrusteeOffResponse>(NULL);
  }

  PlayerTrusteeOffResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerTrusteeOffResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerTrusteeOffResponse& from);
  void MergeFrom(const PlayerTrusteeOffResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTrusteeOffResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerTrusteeOffResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ReadyStartGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ReadyStartGameRequest) */ {
 public:
  ReadyStartGameRequest();
  virtual ~ReadyStartGameRequest();

  ReadyStartGameRequest(const ReadyStartGameRequest& from);

  inline ReadyStartGameRequest& operator=(const ReadyStartGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadyStartGameRequest(ReadyStartGameRequest&& from) noexcept
    : ReadyStartGameRequest() {
    *this = ::std::move(from);
  }

  inline ReadyStartGameRequest& operator=(ReadyStartGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadyStartGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadyStartGameRequest* internal_default_instance() {
    return reinterpret_cast<const ReadyStartGameRequest*>(
               &_ReadyStartGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(ReadyStartGameRequest* other);
  friend void swap(ReadyStartGameRequest& a, ReadyStartGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadyStartGameRequest* New() const final {
    return CreateMaybeMessage<ReadyStartGameRequest>(NULL);
  }

  ReadyStartGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadyStartGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadyStartGameRequest& from);
  void MergeFrom(const ReadyStartGameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadyStartGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ReadyStartGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ReadyStartGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ReadyStartGameResponse) */ {
 public:
  ReadyStartGameResponse();
  virtual ~ReadyStartGameResponse();

  ReadyStartGameResponse(const ReadyStartGameResponse& from);

  inline ReadyStartGameResponse& operator=(const ReadyStartGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadyStartGameResponse(ReadyStartGameResponse&& from) noexcept
    : ReadyStartGameResponse() {
    *this = ::std::move(from);
  }

  inline ReadyStartGameResponse& operator=(ReadyStartGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadyStartGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadyStartGameResponse* internal_default_instance() {
    return reinterpret_cast<const ReadyStartGameResponse*>(
               &_ReadyStartGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(ReadyStartGameResponse* other);
  friend void swap(ReadyStartGameResponse& a, ReadyStartGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadyStartGameResponse* New() const final {
    return CreateMaybeMessage<ReadyStartGameResponse>(NULL);
  }

  ReadyStartGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadyStartGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadyStartGameResponse& from);
  void MergeFrom(const ReadyStartGameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadyStartGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ReadyStartGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class DealCardsReqeust : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.DealCardsReqeust) */ {
 public:
  DealCardsReqeust();
  virtual ~DealCardsReqeust();

  DealCardsReqeust(const DealCardsReqeust& from);

  inline DealCardsReqeust& operator=(const DealCardsReqeust& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealCardsReqeust(DealCardsReqeust&& from) noexcept
    : DealCardsReqeust() {
    *this = ::std::move(from);
  }

  inline DealCardsReqeust& operator=(DealCardsReqeust&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DealCardsReqeust& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DealCardsReqeust* internal_default_instance() {
    return reinterpret_cast<const DealCardsReqeust*>(
               &_DealCardsReqeust_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(DealCardsReqeust* other);
  friend void swap(DealCardsReqeust& a, DealCardsReqeust& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealCardsReqeust* New() const final {
    return CreateMaybeMessage<DealCardsReqeust>(NULL);
  }

  DealCardsReqeust* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DealCardsReqeust>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DealCardsReqeust& from);
  void MergeFrom(const DealCardsReqeust& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DealCardsReqeust* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.MsgCard handCard = 2;
  int handcard_size() const;
  void clear_handcard();
  static const int kHandCardFieldNumber = 2;
  ::GameMsg::MsgCard* mutable_handcard(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_handcard();
  const ::GameMsg::MsgCard& handcard(int index) const;
  ::GameMsg::MsgCard* add_handcard();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      handcard() const;

  // repeated int32 dealCardsOrder = 3;
  int dealcardsorder_size() const;
  void clear_dealcardsorder();
  static const int kDealCardsOrderFieldNumber = 3;
  ::google::protobuf::int32 dealcardsorder(int index) const;
  void set_dealcardsorder(int index, ::google::protobuf::int32 value);
  void add_dealcardsorder(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dealcardsorder() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dealcardsorder();

  // optional .GameMsg.MsgCard jokerCard = 5;
  bool has_jokercard() const;
  void clear_jokercard();
  static const int kJokerCardFieldNumber = 5;
  const ::GameMsg::MsgCard& jokercard() const;
  ::GameMsg::MsgCard* release_jokercard();
  ::GameMsg::MsgCard* mutable_jokercard();
  void set_allocated_jokercard(::GameMsg::MsgCard* jokercard);

  // optional .GameMsg.MsgCard firstPoolCard = 6;
  bool has_firstpoolcard() const;
  void clear_firstpoolcard();
  static const int kFirstPoolCardFieldNumber = 6;
  const ::GameMsg::MsgCard& firstpoolcard() const;
  ::GameMsg::MsgCard* release_firstpoolcard();
  ::GameMsg::MsgCard* mutable_firstpoolcard();
  void set_allocated_firstpoolcard(::GameMsg::MsgCard* firstpoolcard);

  // optional int32 dealerSeat = 1;
  bool has_dealerseat() const;
  void clear_dealerseat();
  static const int kDealerSeatFieldNumber = 1;
  ::google::protobuf::int32 dealerseat() const;
  void set_dealerseat(::google::protobuf::int32 value);

  // optional int32 dealCardCount = 4;
  bool has_dealcardcount() const;
  void clear_dealcardcount();
  static const int kDealCardCountFieldNumber = 4;
  ::google::protobuf::int32 dealcardcount() const;
  void set_dealcardcount(::google::protobuf::int32 value);

  // optional int32 bottomCardCount = 7;
  bool has_bottomcardcount() const;
  void clear_bottomcardcount();
  static const int kBottomCardCountFieldNumber = 7;
  ::google::protobuf::int32 bottomcardcount() const;
  void set_bottomcardcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.DealCardsReqeust)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > handcard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dealcardsorder_;
  ::GameMsg::MsgCard* jokercard_;
  ::GameMsg::MsgCard* firstpoolcard_;
  ::google::protobuf::int32 dealerseat_;
  ::google::protobuf::int32 dealcardcount_;
  ::google::protobuf::int32 bottomcardcount_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class DealCardsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.DealCardsResponse) */ {
 public:
  DealCardsResponse();
  virtual ~DealCardsResponse();

  DealCardsResponse(const DealCardsResponse& from);

  inline DealCardsResponse& operator=(const DealCardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealCardsResponse(DealCardsResponse&& from) noexcept
    : DealCardsResponse() {
    *this = ::std::move(from);
  }

  inline DealCardsResponse& operator=(DealCardsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DealCardsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DealCardsResponse* internal_default_instance() {
    return reinterpret_cast<const DealCardsResponse*>(
               &_DealCardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(DealCardsResponse* other);
  friend void swap(DealCardsResponse& a, DealCardsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealCardsResponse* New() const final {
    return CreateMaybeMessage<DealCardsResponse>(NULL);
  }

  DealCardsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DealCardsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DealCardsResponse& from);
  void MergeFrom(const DealCardsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DealCardsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.DealCardsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ActivePlayerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ActivePlayerRequest) */ {
 public:
  ActivePlayerRequest();
  virtual ~ActivePlayerRequest();

  ActivePlayerRequest(const ActivePlayerRequest& from);

  inline ActivePlayerRequest& operator=(const ActivePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivePlayerRequest(ActivePlayerRequest&& from) noexcept
    : ActivePlayerRequest() {
    *this = ::std::move(from);
  }

  inline ActivePlayerRequest& operator=(ActivePlayerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ActivePlayerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActivePlayerRequest* internal_default_instance() {
    return reinterpret_cast<const ActivePlayerRequest*>(
               &_ActivePlayerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(ActivePlayerRequest* other);
  friend void swap(ActivePlayerRequest& a, ActivePlayerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivePlayerRequest* New() const final {
    return CreateMaybeMessage<ActivePlayerRequest>(NULL);
  }

  ActivePlayerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActivePlayerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActivePlayerRequest& from);
  void MergeFrom(const ActivePlayerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActivePlayerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional bool isPoolCardCanDig = 2;
  bool has_ispoolcardcandig() const;
  void clear_ispoolcardcandig();
  static const int kIsPoolCardCanDigFieldNumber = 2;
  bool ispoolcardcandig() const;
  void set_ispoolcardcandig(bool value);

  // @@protoc_insertion_point(class_scope:GameMsg.ActivePlayerRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  bool ispoolcardcandig_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ActivePlayerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ActivePlayerResponse) */ {
 public:
  ActivePlayerResponse();
  virtual ~ActivePlayerResponse();

  ActivePlayerResponse(const ActivePlayerResponse& from);

  inline ActivePlayerResponse& operator=(const ActivePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivePlayerResponse(ActivePlayerResponse&& from) noexcept
    : ActivePlayerResponse() {
    *this = ::std::move(from);
  }

  inline ActivePlayerResponse& operator=(ActivePlayerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ActivePlayerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActivePlayerResponse* internal_default_instance() {
    return reinterpret_cast<const ActivePlayerResponse*>(
               &_ActivePlayerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(ActivePlayerResponse* other);
  friend void swap(ActivePlayerResponse& a, ActivePlayerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivePlayerResponse* New() const final {
    return CreateMaybeMessage<ActivePlayerResponse>(NULL);
  }

  ActivePlayerResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActivePlayerResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActivePlayerResponse& from);
  void MergeFrom(const ActivePlayerResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActivePlayerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ActivePlayerResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDigCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDigCardRequest) */ {
 public:
  ApplyDigCardRequest();
  virtual ~ApplyDigCardRequest();

  ApplyDigCardRequest(const ApplyDigCardRequest& from);

  inline ApplyDigCardRequest& operator=(const ApplyDigCardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDigCardRequest(ApplyDigCardRequest&& from) noexcept
    : ApplyDigCardRequest() {
    *this = ::std::move(from);
  }

  inline ApplyDigCardRequest& operator=(ApplyDigCardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDigCardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDigCardRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyDigCardRequest*>(
               &_ApplyDigCardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(ApplyDigCardRequest* other);
  friend void swap(ApplyDigCardRequest& a, ApplyDigCardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDigCardRequest* New() const final {
    return CreateMaybeMessage<ApplyDigCardRequest>(NULL);
  }

  ApplyDigCardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDigCardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDigCardRequest& from);
  void MergeFrom(const ApplyDigCardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDigCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 digType = 3;
  bool has_digtype() const;
  void clear_digtype();
  static const int kDigTypeFieldNumber = 3;
  ::google::protobuf::int32 digtype() const;
  void set_digtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDigCardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 digtype_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDigCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDigCardResponse) */ {
 public:
  ApplyDigCardResponse();
  virtual ~ApplyDigCardResponse();

  ApplyDigCardResponse(const ApplyDigCardResponse& from);

  inline ApplyDigCardResponse& operator=(const ApplyDigCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDigCardResponse(ApplyDigCardResponse&& from) noexcept
    : ApplyDigCardResponse() {
    *this = ::std::move(from);
  }

  inline ApplyDigCardResponse& operator=(ApplyDigCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDigCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDigCardResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyDigCardResponse*>(
               &_ApplyDigCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(ApplyDigCardResponse* other);
  friend void swap(ApplyDigCardResponse& a, ApplyDigCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDigCardResponse* New() const final {
    return CreateMaybeMessage<ApplyDigCardResponse>(NULL);
  }

  ApplyDigCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDigCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDigCardResponse& from);
  void MergeFrom(const ApplyDigCardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDigCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDigCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDigCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDigCardRequest) */ {
 public:
  PlayerDigCardRequest();
  virtual ~PlayerDigCardRequest();

  PlayerDigCardRequest(const PlayerDigCardRequest& from);

  inline PlayerDigCardRequest& operator=(const PlayerDigCardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDigCardRequest(PlayerDigCardRequest&& from) noexcept
    : PlayerDigCardRequest() {
    *this = ::std::move(from);
  }

  inline PlayerDigCardRequest& operator=(PlayerDigCardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDigCardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDigCardRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerDigCardRequest*>(
               &_PlayerDigCardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(PlayerDigCardRequest* other);
  friend void swap(PlayerDigCardRequest& a, PlayerDigCardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDigCardRequest* New() const final {
    return CreateMaybeMessage<PlayerDigCardRequest>(NULL);
  }

  PlayerDigCardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDigCardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDigCardRequest& from);
  void MergeFrom(const PlayerDigCardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDigCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GameMsg.MsgCard card = 3;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 3;
  const ::GameMsg::MsgCard& card() const;
  ::GameMsg::MsgCard* release_card();
  ::GameMsg::MsgCard* mutable_card();
  void set_allocated_card(::GameMsg::MsgCard* card);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 digType = 2;
  bool has_digtype() const;
  void clear_digtype();
  static const int kDigTypeFieldNumber = 2;
  ::google::protobuf::int32 digtype() const;
  void set_digtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDigCardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::GameMsg::MsgCard* card_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 digtype_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDigCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDigCardResponse) */ {
 public:
  PlayerDigCardResponse();
  virtual ~PlayerDigCardResponse();

  PlayerDigCardResponse(const PlayerDigCardResponse& from);

  inline PlayerDigCardResponse& operator=(const PlayerDigCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDigCardResponse(PlayerDigCardResponse&& from) noexcept
    : PlayerDigCardResponse() {
    *this = ::std::move(from);
  }

  inline PlayerDigCardResponse& operator=(PlayerDigCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDigCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDigCardResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerDigCardResponse*>(
               &_PlayerDigCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(PlayerDigCardResponse* other);
  friend void swap(PlayerDigCardResponse& a, PlayerDigCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDigCardResponse* New() const final {
    return CreateMaybeMessage<PlayerDigCardResponse>(NULL);
  }

  PlayerDigCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDigCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDigCardResponse& from);
  void MergeFrom(const PlayerDigCardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDigCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDigCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDropRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDropRequest) */ {
 public:
  ApplyDropRequest();
  virtual ~ApplyDropRequest();

  ApplyDropRequest(const ApplyDropRequest& from);

  inline ApplyDropRequest& operator=(const ApplyDropRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDropRequest(ApplyDropRequest&& from) noexcept
    : ApplyDropRequest() {
    *this = ::std::move(from);
  }

  inline ApplyDropRequest& operator=(ApplyDropRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDropRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDropRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyDropRequest*>(
               &_ApplyDropRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(ApplyDropRequest* other);
  friend void swap(ApplyDropRequest& a, ApplyDropRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDropRequest* New() const final {
    return CreateMaybeMessage<ApplyDropRequest>(NULL);
  }

  ApplyDropRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDropRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDropRequest& from);
  void MergeFrom(const ApplyDropRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDropRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDropRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDropResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDropResponse) */ {
 public:
  ApplyDropResponse();
  virtual ~ApplyDropResponse();

  ApplyDropResponse(const ApplyDropResponse& from);

  inline ApplyDropResponse& operator=(const ApplyDropResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDropResponse(ApplyDropResponse&& from) noexcept
    : ApplyDropResponse() {
    *this = ::std::move(from);
  }

  inline ApplyDropResponse& operator=(ApplyDropResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDropResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDropResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyDropResponse*>(
               &_ApplyDropResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(ApplyDropResponse* other);
  friend void swap(ApplyDropResponse& a, ApplyDropResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDropResponse* New() const final {
    return CreateMaybeMessage<ApplyDropResponse>(NULL);
  }

  ApplyDropResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDropResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDropResponse& from);
  void MergeFrom(const ApplyDropResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDropResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDropResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDropRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDropRequest) */ {
 public:
  PlayerDropRequest();
  virtual ~PlayerDropRequest();

  PlayerDropRequest(const PlayerDropRequest& from);

  inline PlayerDropRequest& operator=(const PlayerDropRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDropRequest(PlayerDropRequest&& from) noexcept
    : PlayerDropRequest() {
    *this = ::std::move(from);
  }

  inline PlayerDropRequest& operator=(PlayerDropRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDropRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDropRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerDropRequest*>(
               &_PlayerDropRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(PlayerDropRequest* other);
  friend void swap(PlayerDropRequest& a, PlayerDropRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDropRequest* New() const final {
    return CreateMaybeMessage<PlayerDropRequest>(NULL);
  }

  PlayerDropRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDropRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDropRequest& from);
  void MergeFrom(const PlayerDropRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDropRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GameMsg.MsgCard dropCard = 4;
  bool has_dropcard() const;
  void clear_dropcard();
  static const int kDropCardFieldNumber = 4;
  const ::GameMsg::MsgCard& dropcard() const;
  ::GameMsg::MsgCard* release_dropcard();
  ::GameMsg::MsgCard* mutable_dropcard();
  void set_allocated_dropcard(::GameMsg::MsgCard* dropcard);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 dropScore = 2;
  bool has_dropscore() const;
  void clear_dropscore();
  static const int kDropScoreFieldNumber = 2;
  ::google::protobuf::int32 dropscore() const;
  void set_dropscore(::google::protobuf::int32 value);

  // optional int64 dropChips = 3;
  bool has_dropchips() const;
  void clear_dropchips();
  static const int kDropChipsFieldNumber = 3;
  ::google::protobuf::int64 dropchips() const;
  void set_dropchips(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDropRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::GameMsg::MsgCard* dropcard_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 dropscore_;
  ::google::protobuf::int64 dropchips_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDropResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDropResponse) */ {
 public:
  PlayerDropResponse();
  virtual ~PlayerDropResponse();

  PlayerDropResponse(const PlayerDropResponse& from);

  inline PlayerDropResponse& operator=(const PlayerDropResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDropResponse(PlayerDropResponse&& from) noexcept
    : PlayerDropResponse() {
    *this = ::std::move(from);
  }

  inline PlayerDropResponse& operator=(PlayerDropResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDropResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDropResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerDropResponse*>(
               &_PlayerDropResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(PlayerDropResponse* other);
  friend void swap(PlayerDropResponse& a, PlayerDropResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDropResponse* New() const final {
    return CreateMaybeMessage<PlayerDropResponse>(NULL);
  }

  PlayerDropResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDropResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDropResponse& from);
  void MergeFrom(const PlayerDropResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDropResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDropResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDeclareRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDeclareRequest) */ {
 public:
  ApplyDeclareRequest();
  virtual ~ApplyDeclareRequest();

  ApplyDeclareRequest(const ApplyDeclareRequest& from);

  inline ApplyDeclareRequest& operator=(const ApplyDeclareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDeclareRequest(ApplyDeclareRequest&& from) noexcept
    : ApplyDeclareRequest() {
    *this = ::std::move(from);
  }

  inline ApplyDeclareRequest& operator=(ApplyDeclareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDeclareRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDeclareRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyDeclareRequest*>(
               &_ApplyDeclareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(ApplyDeclareRequest* other);
  friend void swap(ApplyDeclareRequest& a, ApplyDeclareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDeclareRequest* New() const final {
    return CreateMaybeMessage<ApplyDeclareRequest>(NULL);
  }

  ApplyDeclareRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDeclareRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDeclareRequest& from);
  void MergeFrom(const ApplyDeclareRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDeclareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 4;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 4;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional .GameMsg.MsgCard declareCard = 3;
  bool has_declarecard() const;
  void clear_declarecard();
  static const int kDeclareCardFieldNumber = 3;
  const ::GameMsg::MsgCard& declarecard() const;
  ::GameMsg::MsgCard* release_declarecard();
  ::GameMsg::MsgCard* mutable_declarecard();
  void set_allocated_declarecard(::GameMsg::MsgCard* declarecard);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDeclareRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::GameMsg::MsgCard* declarecard_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyDeclareResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyDeclareResponse) */ {
 public:
  ApplyDeclareResponse();
  virtual ~ApplyDeclareResponse();

  ApplyDeclareResponse(const ApplyDeclareResponse& from);

  inline ApplyDeclareResponse& operator=(const ApplyDeclareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyDeclareResponse(ApplyDeclareResponse&& from) noexcept
    : ApplyDeclareResponse() {
    *this = ::std::move(from);
  }

  inline ApplyDeclareResponse& operator=(ApplyDeclareResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyDeclareResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyDeclareResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyDeclareResponse*>(
               &_ApplyDeclareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(ApplyDeclareResponse* other);
  friend void swap(ApplyDeclareResponse& a, ApplyDeclareResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyDeclareResponse* New() const final {
    return CreateMaybeMessage<ApplyDeclareResponse>(NULL);
  }

  ApplyDeclareResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyDeclareResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyDeclareResponse& from);
  void MergeFrom(const ApplyDeclareResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyDeclareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyDeclareResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDeclareRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDeclareRequest) */ {
 public:
  PlayerDeclareRequest();
  virtual ~PlayerDeclareRequest();

  PlayerDeclareRequest(const PlayerDeclareRequest& from);

  inline PlayerDeclareRequest& operator=(const PlayerDeclareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDeclareRequest(PlayerDeclareRequest&& from) noexcept
    : PlayerDeclareRequest() {
    *this = ::std::move(from);
  }

  inline PlayerDeclareRequest& operator=(PlayerDeclareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDeclareRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDeclareRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerDeclareRequest*>(
               &_PlayerDeclareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(PlayerDeclareRequest* other);
  friend void swap(PlayerDeclareRequest& a, PlayerDeclareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDeclareRequest* New() const final {
    return CreateMaybeMessage<PlayerDeclareRequest>(NULL);
  }

  PlayerDeclareRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDeclareRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDeclareRequest& from);
  void MergeFrom(const PlayerDeclareRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDeclareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 3;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 3;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional .GameMsg.MsgCard declareCard = 2;
  bool has_declarecard() const;
  void clear_declarecard();
  static const int kDeclareCardFieldNumber = 2;
  const ::GameMsg::MsgCard& declarecard() const;
  ::GameMsg::MsgCard* release_declarecard();
  ::GameMsg::MsgCard* mutable_declarecard();
  void set_allocated_declarecard(::GameMsg::MsgCard* declarecard);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDeclareRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::GameMsg::MsgCard* declarecard_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerDeclareResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerDeclareResponse) */ {
 public:
  PlayerDeclareResponse();
  virtual ~PlayerDeclareResponse();

  PlayerDeclareResponse(const PlayerDeclareResponse& from);

  inline PlayerDeclareResponse& operator=(const PlayerDeclareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDeclareResponse(PlayerDeclareResponse&& from) noexcept
    : PlayerDeclareResponse() {
    *this = ::std::move(from);
  }

  inline PlayerDeclareResponse& operator=(PlayerDeclareResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerDeclareResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDeclareResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerDeclareResponse*>(
               &_PlayerDeclareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(PlayerDeclareResponse* other);
  friend void swap(PlayerDeclareResponse& a, PlayerDeclareResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDeclareResponse* New() const final {
    return CreateMaybeMessage<PlayerDeclareResponse>(NULL);
  }

  PlayerDeclareResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerDeclareResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerDeclareResponse& from);
  void MergeFrom(const PlayerDeclareResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerDeclareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerDeclareResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyLoseDeclareRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyLoseDeclareRequest) */ {
 public:
  ApplyLoseDeclareRequest();
  virtual ~ApplyLoseDeclareRequest();

  ApplyLoseDeclareRequest(const ApplyLoseDeclareRequest& from);

  inline ApplyLoseDeclareRequest& operator=(const ApplyLoseDeclareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyLoseDeclareRequest(ApplyLoseDeclareRequest&& from) noexcept
    : ApplyLoseDeclareRequest() {
    *this = ::std::move(from);
  }

  inline ApplyLoseDeclareRequest& operator=(ApplyLoseDeclareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyLoseDeclareRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyLoseDeclareRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyLoseDeclareRequest*>(
               &_ApplyLoseDeclareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(ApplyLoseDeclareRequest* other);
  friend void swap(ApplyLoseDeclareRequest& a, ApplyLoseDeclareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyLoseDeclareRequest* New() const final {
    return CreateMaybeMessage<ApplyLoseDeclareRequest>(NULL);
  }

  ApplyLoseDeclareRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyLoseDeclareRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyLoseDeclareRequest& from);
  void MergeFrom(const ApplyLoseDeclareRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyLoseDeclareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 3;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 3;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyLoseDeclareRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyLoseDeclareResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyLoseDeclareResponse) */ {
 public:
  ApplyLoseDeclareResponse();
  virtual ~ApplyLoseDeclareResponse();

  ApplyLoseDeclareResponse(const ApplyLoseDeclareResponse& from);

  inline ApplyLoseDeclareResponse& operator=(const ApplyLoseDeclareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyLoseDeclareResponse(ApplyLoseDeclareResponse&& from) noexcept
    : ApplyLoseDeclareResponse() {
    *this = ::std::move(from);
  }

  inline ApplyLoseDeclareResponse& operator=(ApplyLoseDeclareResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyLoseDeclareResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyLoseDeclareResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyLoseDeclareResponse*>(
               &_ApplyLoseDeclareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(ApplyLoseDeclareResponse* other);
  friend void swap(ApplyLoseDeclareResponse& a, ApplyLoseDeclareResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyLoseDeclareResponse* New() const final {
    return CreateMaybeMessage<ApplyLoseDeclareResponse>(NULL);
  }

  ApplyLoseDeclareResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyLoseDeclareResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyLoseDeclareResponse& from);
  void MergeFrom(const ApplyLoseDeclareResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyLoseDeclareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyLoseDeclareResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerLoseDeclareRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerLoseDeclareRequest) */ {
 public:
  PlayerLoseDeclareRequest();
  virtual ~PlayerLoseDeclareRequest();

  PlayerLoseDeclareRequest(const PlayerLoseDeclareRequest& from);

  inline PlayerLoseDeclareRequest& operator=(const PlayerLoseDeclareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoseDeclareRequest(PlayerLoseDeclareRequest&& from) noexcept
    : PlayerLoseDeclareRequest() {
    *this = ::std::move(from);
  }

  inline PlayerLoseDeclareRequest& operator=(PlayerLoseDeclareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerLoseDeclareRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoseDeclareRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerLoseDeclareRequest*>(
               &_PlayerLoseDeclareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(PlayerLoseDeclareRequest* other);
  friend void swap(PlayerLoseDeclareRequest& a, PlayerLoseDeclareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoseDeclareRequest* New() const final {
    return CreateMaybeMessage<PlayerLoseDeclareRequest>(NULL);
  }

  PlayerLoseDeclareRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLoseDeclareRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerLoseDeclareRequest& from);
  void MergeFrom(const PlayerLoseDeclareRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLoseDeclareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 2;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 2;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 score = 3;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int64 chips = 4;
  bool has_chips() const;
  void clear_chips();
  static const int kChipsFieldNumber = 4;
  ::google::protobuf::int64 chips() const;
  void set_chips(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerLoseDeclareRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int64 chips_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerLoseDeclareResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerLoseDeclareResponse) */ {
 public:
  PlayerLoseDeclareResponse();
  virtual ~PlayerLoseDeclareResponse();

  PlayerLoseDeclareResponse(const PlayerLoseDeclareResponse& from);

  inline PlayerLoseDeclareResponse& operator=(const PlayerLoseDeclareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoseDeclareResponse(PlayerLoseDeclareResponse&& from) noexcept
    : PlayerLoseDeclareResponse() {
    *this = ::std::move(from);
  }

  inline PlayerLoseDeclareResponse& operator=(PlayerLoseDeclareResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerLoseDeclareResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoseDeclareResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerLoseDeclareResponse*>(
               &_PlayerLoseDeclareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(PlayerLoseDeclareResponse* other);
  friend void swap(PlayerLoseDeclareResponse& a, PlayerLoseDeclareResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoseDeclareResponse* New() const final {
    return CreateMaybeMessage<PlayerLoseDeclareResponse>(NULL);
  }

  PlayerLoseDeclareResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLoseDeclareResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerLoseDeclareResponse& from);
  void MergeFrom(const PlayerLoseDeclareResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLoseDeclareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerLoseDeclareResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPostCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPostCardRequest) */ {
 public:
  ApplyPostCardRequest();
  virtual ~ApplyPostCardRequest();

  ApplyPostCardRequest(const ApplyPostCardRequest& from);

  inline ApplyPostCardRequest& operator=(const ApplyPostCardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPostCardRequest(ApplyPostCardRequest&& from) noexcept
    : ApplyPostCardRequest() {
    *this = ::std::move(from);
  }

  inline ApplyPostCardRequest& operator=(ApplyPostCardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPostCardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPostCardRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyPostCardRequest*>(
               &_ApplyPostCardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(ApplyPostCardRequest* other);
  friend void swap(ApplyPostCardRequest& a, ApplyPostCardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPostCardRequest* New() const final {
    return CreateMaybeMessage<ApplyPostCardRequest>(NULL);
  }

  ApplyPostCardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPostCardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPostCardRequest& from);
  void MergeFrom(const ApplyPostCardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPostCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GameMsg.MsgCard card = 3;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 3;
  const ::GameMsg::MsgCard& card() const;
  ::GameMsg::MsgCard* release_card();
  ::GameMsg::MsgCard* mutable_card();
  void set_allocated_card(::GameMsg::MsgCard* card);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 appScore = 4 [default = -1];
  bool has_appscore() const;
  void clear_appscore();
  static const int kAppScoreFieldNumber = 4;
  ::google::protobuf::int32 appscore() const;
  void set_appscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPostCardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::GameMsg::MsgCard* card_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 appscore_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyPostCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyPostCardResponse) */ {
 public:
  ApplyPostCardResponse();
  virtual ~ApplyPostCardResponse();

  ApplyPostCardResponse(const ApplyPostCardResponse& from);

  inline ApplyPostCardResponse& operator=(const ApplyPostCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyPostCardResponse(ApplyPostCardResponse&& from) noexcept
    : ApplyPostCardResponse() {
    *this = ::std::move(from);
  }

  inline ApplyPostCardResponse& operator=(ApplyPostCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyPostCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyPostCardResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyPostCardResponse*>(
               &_ApplyPostCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(ApplyPostCardResponse* other);
  friend void swap(ApplyPostCardResponse& a, ApplyPostCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyPostCardResponse* New() const final {
    return CreateMaybeMessage<ApplyPostCardResponse>(NULL);
  }

  ApplyPostCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyPostCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyPostCardResponse& from);
  void MergeFrom(const ApplyPostCardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyPostCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.MsgCard handCards = 1;
  int handcards_size() const;
  void clear_handcards();
  static const int kHandCardsFieldNumber = 1;
  ::GameMsg::MsgCard* mutable_handcards(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_handcards();
  const ::GameMsg::MsgCard& handcards(int index) const;
  ::GameMsg::MsgCard* add_handcards();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      handcards() const;

  // repeated .GameMsg.MsgCard poolCards = 2;
  int poolcards_size() const;
  void clear_poolcards();
  static const int kPoolCardsFieldNumber = 2;
  ::GameMsg::MsgCard* mutable_poolcards(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
      mutable_poolcards();
  const ::GameMsg::MsgCard& poolcards(int index) const;
  ::GameMsg::MsgCard* add_poolcards();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
      poolcards() const;

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyPostCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > handcards_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard > poolcards_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPostCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPostCardRequest) */ {
 public:
  PlayerPostCardRequest();
  virtual ~PlayerPostCardRequest();

  PlayerPostCardRequest(const PlayerPostCardRequest& from);

  inline PlayerPostCardRequest& operator=(const PlayerPostCardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPostCardRequest(PlayerPostCardRequest&& from) noexcept
    : PlayerPostCardRequest() {
    *this = ::std::move(from);
  }

  inline PlayerPostCardRequest& operator=(PlayerPostCardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPostCardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPostCardRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerPostCardRequest*>(
               &_PlayerPostCardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(PlayerPostCardRequest* other);
  friend void swap(PlayerPostCardRequest& a, PlayerPostCardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPostCardRequest* New() const final {
    return CreateMaybeMessage<PlayerPostCardRequest>(NULL);
  }

  PlayerPostCardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPostCardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPostCardRequest& from);
  void MergeFrom(const PlayerPostCardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPostCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GameMsg.MsgCard card = 2;
  bool has_card() const;
  void clear_card();
  static const int kCardFieldNumber = 2;
  const ::GameMsg::MsgCard& card() const;
  ::GameMsg::MsgCard* release_card();
  ::GameMsg::MsgCard* mutable_card();
  void set_allocated_card(::GameMsg::MsgCard* card);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPostCardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::GameMsg::MsgCard* card_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerPostCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerPostCardResponse) */ {
 public:
  PlayerPostCardResponse();
  virtual ~PlayerPostCardResponse();

  PlayerPostCardResponse(const PlayerPostCardResponse& from);

  inline PlayerPostCardResponse& operator=(const PlayerPostCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPostCardResponse(PlayerPostCardResponse&& from) noexcept
    : PlayerPostCardResponse() {
    *this = ::std::move(from);
  }

  inline PlayerPostCardResponse& operator=(PlayerPostCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerPostCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPostCardResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerPostCardResponse*>(
               &_PlayerPostCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(PlayerPostCardResponse* other);
  friend void swap(PlayerPostCardResponse& a, PlayerPostCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPostCardResponse* New() const final {
    return CreateMaybeMessage<PlayerPostCardResponse>(NULL);
  }

  PlayerPostCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerPostCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerPostCardResponse& from);
  void MergeFrom(const PlayerPostCardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerPostCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerPostCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class LoserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.LoserInfo) */ {
 public:
  LoserInfo();
  virtual ~LoserInfo();

  LoserInfo(const LoserInfo& from);

  inline LoserInfo& operator=(const LoserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoserInfo(LoserInfo&& from) noexcept
    : LoserInfo() {
    *this = ::std::move(from);
  }

  inline LoserInfo& operator=(LoserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoserInfo* internal_default_instance() {
    return reinterpret_cast<const LoserInfo*>(
               &_LoserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(LoserInfo* other);
  friend void swap(LoserInfo& a, LoserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoserInfo* New() const final {
    return CreateMaybeMessage<LoserInfo>(NULL);
  }

  LoserInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoserInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoserInfo& from);
  void MergeFrom(const LoserInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup cardGroup = 3;
  int cardgroup_size() const;
  void clear_cardgroup();
  static const int kCardGroupFieldNumber = 3;
  ::GameMsg::PB_CardGroup* mutable_cardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_cardgroup();
  const ::GameMsg::PB_CardGroup& cardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_cardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      cardgroup() const;

  // optional int64 loseAccount = 2;
  bool has_loseaccount() const;
  void clear_loseaccount();
  static const int kLoseAccountFieldNumber = 2;
  ::google::protobuf::int64 loseaccount() const;
  void set_loseaccount(::google::protobuf::int64 value);

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 score = 4;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 isDrop = 5;
  bool has_isdrop() const;
  void clear_isdrop();
  static const int kIsDropFieldNumber = 5;
  ::google::protobuf::int32 isdrop() const;
  void set_isdrop(::google::protobuf::int32 value);

  // optional int32 cardScore = 6;
  bool has_cardscore() const;
  void clear_cardscore();
  static const int kCardScoreFieldNumber = 6;
  ::google::protobuf::int32 cardscore() const;
  void set_cardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.LoserInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > cardgroup_;
  ::google::protobuf::int64 loseaccount_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 isdrop_;
  ::google::protobuf::int32 cardscore_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class GameOverRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.GameOverRequest) */ {
 public:
  GameOverRequest();
  virtual ~GameOverRequest();

  GameOverRequest(const GameOverRequest& from);

  inline GameOverRequest& operator=(const GameOverRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameOverRequest(GameOverRequest&& from) noexcept
    : GameOverRequest() {
    *this = ::std::move(from);
  }

  inline GameOverRequest& operator=(GameOverRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameOverRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameOverRequest* internal_default_instance() {
    return reinterpret_cast<const GameOverRequest*>(
               &_GameOverRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(GameOverRequest* other);
  friend void swap(GameOverRequest& a, GameOverRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameOverRequest* New() const final {
    return CreateMaybeMessage<GameOverRequest>(NULL);
  }

  GameOverRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameOverRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameOverRequest& from);
  void MergeFrom(const GameOverRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameOverRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMsg.PB_CardGroup winnerCardGroup = 3;
  int winnercardgroup_size() const;
  void clear_winnercardgroup();
  static const int kWinnerCardGroupFieldNumber = 3;
  ::GameMsg::PB_CardGroup* mutable_winnercardgroup(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
      mutable_winnercardgroup();
  const ::GameMsg::PB_CardGroup& winnercardgroup(int index) const;
  ::GameMsg::PB_CardGroup* add_winnercardgroup();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
      winnercardgroup() const;

  // repeated .GameMsg.LoserInfo loserInfo = 4;
  int loserinfo_size() const;
  void clear_loserinfo();
  static const int kLoserInfoFieldNumber = 4;
  ::GameMsg::LoserInfo* mutable_loserinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::LoserInfo >*
      mutable_loserinfo();
  const ::GameMsg::LoserInfo& loserinfo(int index) const;
  ::GameMsg::LoserInfo* add_loserinfo();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::LoserInfo >&
      loserinfo() const;

  // repeated .GameMsg.PlayerChips playerChips = 5;
  int playerchips_size() const;
  void clear_playerchips();
  static const int kPlayerChipsFieldNumber = 5;
  ::GameMsg::PlayerChips* mutable_playerchips(int index);
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerChips >*
      mutable_playerchips();
  const ::GameMsg::PlayerChips& playerchips(int index) const;
  ::GameMsg::PlayerChips* add_playerchips();
  const ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerChips >&
      playerchips() const;

  // optional int64 winAccount = 2;
  bool has_winaccount() const;
  void clear_winaccount();
  static const int kWinAccountFieldNumber = 2;
  ::google::protobuf::int64 winaccount() const;
  void set_winaccount(::google::protobuf::int64 value);

  // optional int32 winnerId = 1;
  bool has_winnerid() const;
  void clear_winnerid();
  static const int kWinnerIdFieldNumber = 1;
  ::google::protobuf::int32 winnerid() const;
  void set_winnerid(::google::protobuf::int32 value);

  // optional int32 winnerScore = 6;
  bool has_winnerscore() const;
  void clear_winnerscore();
  static const int kWinnerScoreFieldNumber = 6;
  ::google::protobuf::int32 winnerscore() const;
  void set_winnerscore(::google::protobuf::int32 value);

  // optional int32 gameoverType = 7;
  bool has_gameovertype() const;
  void clear_gameovertype();
  static const int kGameoverTypeFieldNumber = 7;
  ::google::protobuf::int32 gameovertype() const;
  void set_gameovertype(::google::protobuf::int32 value);

  // optional int32 winnerCardScore = 8;
  bool has_winnercardscore() const;
  void clear_winnercardscore();
  static const int kWinnerCardScoreFieldNumber = 8;
  ::google::protobuf::int32 winnercardscore() const;
  void set_winnercardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.GameOverRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup > winnercardgroup_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::LoserInfo > loserinfo_;
  ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerChips > playerchips_;
  ::google::protobuf::int64 winaccount_;
  ::google::protobuf::int32 winnerid_;
  ::google::protobuf::int32 winnerscore_;
  ::google::protobuf::int32 gameovertype_;
  ::google::protobuf::int32 winnercardscore_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class GameOverResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.GameOverResponse) */ {
 public:
  GameOverResponse();
  virtual ~GameOverResponse();

  GameOverResponse(const GameOverResponse& from);

  inline GameOverResponse& operator=(const GameOverResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameOverResponse(GameOverResponse&& from) noexcept
    : GameOverResponse() {
    *this = ::std::move(from);
  }

  inline GameOverResponse& operator=(GameOverResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameOverResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameOverResponse* internal_default_instance() {
    return reinterpret_cast<const GameOverResponse*>(
               &_GameOverResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(GameOverResponse* other);
  friend void swap(GameOverResponse& a, GameOverResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameOverResponse* New() const final {
    return CreateMaybeMessage<GameOverResponse>(NULL);
  }

  GameOverResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameOverResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameOverResponse& from);
  void MergeFrom(const GameOverResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameOverResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.GameOverResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyRoomStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyRoomStatusRequest) */ {
 public:
  ApplyRoomStatusRequest();
  virtual ~ApplyRoomStatusRequest();

  ApplyRoomStatusRequest(const ApplyRoomStatusRequest& from);

  inline ApplyRoomStatusRequest& operator=(const ApplyRoomStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyRoomStatusRequest(ApplyRoomStatusRequest&& from) noexcept
    : ApplyRoomStatusRequest() {
    *this = ::std::move(from);
  }

  inline ApplyRoomStatusRequest& operator=(ApplyRoomStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyRoomStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyRoomStatusRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyRoomStatusRequest*>(
               &_ApplyRoomStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(ApplyRoomStatusRequest* other);
  friend void swap(ApplyRoomStatusRequest& a, ApplyRoomStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyRoomStatusRequest* New() const final {
    return CreateMaybeMessage<ApplyRoomStatusRequest>(NULL);
  }

  ApplyRoomStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyRoomStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyRoomStatusRequest& from);
  void MergeFrom(const ApplyRoomStatusRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyRoomStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyRoomStatusRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyRoomStatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyRoomStatusResponse) */ {
 public:
  ApplyRoomStatusResponse();
  virtual ~ApplyRoomStatusResponse();

  ApplyRoomStatusResponse(const ApplyRoomStatusResponse& from);

  inline ApplyRoomStatusResponse& operator=(const ApplyRoomStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyRoomStatusResponse(ApplyRoomStatusResponse&& from) noexcept
    : ApplyRoomStatusResponse() {
    *this = ::std::move(from);
  }

  inline ApplyRoomStatusResponse& operator=(ApplyRoomStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyRoomStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyRoomStatusResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyRoomStatusResponse*>(
               &_ApplyRoomStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(ApplyRoomStatusResponse* other);
  friend void swap(ApplyRoomStatusResponse& a, ApplyRoomStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyRoomStatusResponse* New() const final {
    return CreateMaybeMessage<ApplyRoomStatusResponse>(NULL);
  }

  ApplyRoomStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyRoomStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyRoomStatusResponse& from);
  void MergeFrom(const ApplyRoomStatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyRoomStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyRoomStatusResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class NotifyWaitGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.NotifyWaitGameRequest) */ {
 public:
  NotifyWaitGameRequest();
  virtual ~NotifyWaitGameRequest();

  NotifyWaitGameRequest(const NotifyWaitGameRequest& from);

  inline NotifyWaitGameRequest& operator=(const NotifyWaitGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NotifyWaitGameRequest(NotifyWaitGameRequest&& from) noexcept
    : NotifyWaitGameRequest() {
    *this = ::std::move(from);
  }

  inline NotifyWaitGameRequest& operator=(NotifyWaitGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NotifyWaitGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyWaitGameRequest* internal_default_instance() {
    return reinterpret_cast<const NotifyWaitGameRequest*>(
               &_NotifyWaitGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(NotifyWaitGameRequest* other);
  friend void swap(NotifyWaitGameRequest& a, NotifyWaitGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotifyWaitGameRequest* New() const final {
    return CreateMaybeMessage<NotifyWaitGameRequest>(NULL);
  }

  NotifyWaitGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NotifyWaitGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NotifyWaitGameRequest& from);
  void MergeFrom(const NotifyWaitGameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyWaitGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional int32 seconds = 2;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.NotifyWaitGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 seconds_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class NotifyWaitGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.NotifyWaitGameResponse) */ {
 public:
  NotifyWaitGameResponse();
  virtual ~NotifyWaitGameResponse();

  NotifyWaitGameResponse(const NotifyWaitGameResponse& from);

  inline NotifyWaitGameResponse& operator=(const NotifyWaitGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NotifyWaitGameResponse(NotifyWaitGameResponse&& from) noexcept
    : NotifyWaitGameResponse() {
    *this = ::std::move(from);
  }

  inline NotifyWaitGameResponse& operator=(NotifyWaitGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NotifyWaitGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyWaitGameResponse* internal_default_instance() {
    return reinterpret_cast<const NotifyWaitGameResponse*>(
               &_NotifyWaitGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(NotifyWaitGameResponse* other);
  friend void swap(NotifyWaitGameResponse& a, NotifyWaitGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotifyWaitGameResponse* New() const final {
    return CreateMaybeMessage<NotifyWaitGameResponse>(NULL);
  }

  NotifyWaitGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NotifyWaitGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NotifyWaitGameResponse& from);
  void MergeFrom(const NotifyWaitGameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyWaitGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.NotifyWaitGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ShuffleCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ShuffleCardRequest) */ {
 public:
  ShuffleCardRequest();
  virtual ~ShuffleCardRequest();

  ShuffleCardRequest(const ShuffleCardRequest& from);

  inline ShuffleCardRequest& operator=(const ShuffleCardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShuffleCardRequest(ShuffleCardRequest&& from) noexcept
    : ShuffleCardRequest() {
    *this = ::std::move(from);
  }

  inline ShuffleCardRequest& operator=(ShuffleCardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ShuffleCardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShuffleCardRequest* internal_default_instance() {
    return reinterpret_cast<const ShuffleCardRequest*>(
               &_ShuffleCardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(ShuffleCardRequest* other);
  friend void swap(ShuffleCardRequest& a, ShuffleCardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShuffleCardRequest* New() const final {
    return CreateMaybeMessage<ShuffleCardRequest>(NULL);
  }

  ShuffleCardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShuffleCardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShuffleCardRequest& from);
  void MergeFrom(const ShuffleCardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShuffleCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 poolCardCount = 1;
  bool has_poolcardcount() const;
  void clear_poolcardcount();
  static const int kPoolCardCountFieldNumber = 1;
  ::google::protobuf::int32 poolcardcount() const;
  void set_poolcardcount(::google::protobuf::int32 value);

  // optional int32 bottomCardCount = 2;
  bool has_bottomcardcount() const;
  void clear_bottomcardcount();
  static const int kBottomCardCountFieldNumber = 2;
  ::google::protobuf::int32 bottomcardcount() const;
  void set_bottomcardcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ShuffleCardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 poolcardcount_;
  ::google::protobuf::int32 bottomcardcount_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ShuffleCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ShuffleCardResponse) */ {
 public:
  ShuffleCardResponse();
  virtual ~ShuffleCardResponse();

  ShuffleCardResponse(const ShuffleCardResponse& from);

  inline ShuffleCardResponse& operator=(const ShuffleCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShuffleCardResponse(ShuffleCardResponse&& from) noexcept
    : ShuffleCardResponse() {
    *this = ::std::move(from);
  }

  inline ShuffleCardResponse& operator=(ShuffleCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ShuffleCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShuffleCardResponse* internal_default_instance() {
    return reinterpret_cast<const ShuffleCardResponse*>(
               &_ShuffleCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(ShuffleCardResponse* other);
  friend void swap(ShuffleCardResponse& a, ShuffleCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShuffleCardResponse* New() const final {
    return CreateMaybeMessage<ShuffleCardResponse>(NULL);
  }

  ShuffleCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShuffleCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShuffleCardResponse& from);
  void MergeFrom(const ShuffleCardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShuffleCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ShuffleCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyCloseAccountBoxRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyCloseAccountBoxRequest) */ {
 public:
  ApplyCloseAccountBoxRequest();
  virtual ~ApplyCloseAccountBoxRequest();

  ApplyCloseAccountBoxRequest(const ApplyCloseAccountBoxRequest& from);

  inline ApplyCloseAccountBoxRequest& operator=(const ApplyCloseAccountBoxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyCloseAccountBoxRequest(ApplyCloseAccountBoxRequest&& from) noexcept
    : ApplyCloseAccountBoxRequest() {
    *this = ::std::move(from);
  }

  inline ApplyCloseAccountBoxRequest& operator=(ApplyCloseAccountBoxRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyCloseAccountBoxRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyCloseAccountBoxRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyCloseAccountBoxRequest*>(
               &_ApplyCloseAccountBoxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(ApplyCloseAccountBoxRequest* other);
  friend void swap(ApplyCloseAccountBoxRequest& a, ApplyCloseAccountBoxRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyCloseAccountBoxRequest* New() const final {
    return CreateMaybeMessage<ApplyCloseAccountBoxRequest>(NULL);
  }

  ApplyCloseAccountBoxRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyCloseAccountBoxRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyCloseAccountBoxRequest& from);
  void MergeFrom(const ApplyCloseAccountBoxRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyCloseAccountBoxRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyCloseAccountBoxRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 roomid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class ApplyCloseAccountBoxResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.ApplyCloseAccountBoxResponse) */ {
 public:
  ApplyCloseAccountBoxResponse();
  virtual ~ApplyCloseAccountBoxResponse();

  ApplyCloseAccountBoxResponse(const ApplyCloseAccountBoxResponse& from);

  inline ApplyCloseAccountBoxResponse& operator=(const ApplyCloseAccountBoxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyCloseAccountBoxResponse(ApplyCloseAccountBoxResponse&& from) noexcept
    : ApplyCloseAccountBoxResponse() {
    *this = ::std::move(from);
  }

  inline ApplyCloseAccountBoxResponse& operator=(ApplyCloseAccountBoxResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ApplyCloseAccountBoxResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyCloseAccountBoxResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyCloseAccountBoxResponse*>(
               &_ApplyCloseAccountBoxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(ApplyCloseAccountBoxResponse* other);
  friend void swap(ApplyCloseAccountBoxResponse& a, ApplyCloseAccountBoxResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyCloseAccountBoxResponse* New() const final {
    return CreateMaybeMessage<ApplyCloseAccountBoxResponse>(NULL);
  }

  ApplyCloseAccountBoxResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyCloseAccountBoxResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyCloseAccountBoxResponse& from);
  void MergeFrom(const ApplyCloseAccountBoxResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyCloseAccountBoxResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.ApplyCloseAccountBoxResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCloseAccountBoxRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerCloseAccountBoxRequest) */ {
 public:
  PlayerCloseAccountBoxRequest();
  virtual ~PlayerCloseAccountBoxRequest();

  PlayerCloseAccountBoxRequest(const PlayerCloseAccountBoxRequest& from);

  inline PlayerCloseAccountBoxRequest& operator=(const PlayerCloseAccountBoxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCloseAccountBoxRequest(PlayerCloseAccountBoxRequest&& from) noexcept
    : PlayerCloseAccountBoxRequest() {
    *this = ::std::move(from);
  }

  inline PlayerCloseAccountBoxRequest& operator=(PlayerCloseAccountBoxRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCloseAccountBoxRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCloseAccountBoxRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerCloseAccountBoxRequest*>(
               &_PlayerCloseAccountBoxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(PlayerCloseAccountBoxRequest* other);
  friend void swap(PlayerCloseAccountBoxRequest& a, PlayerCloseAccountBoxRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCloseAccountBoxRequest* New() const final {
    return CreateMaybeMessage<PlayerCloseAccountBoxRequest>(NULL);
  }

  PlayerCloseAccountBoxRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCloseAccountBoxRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCloseAccountBoxRequest& from);
  void MergeFrom(const PlayerCloseAccountBoxRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCloseAccountBoxRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerCloseAccountBoxRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCloseAccountBoxResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg.PlayerCloseAccountBoxResponse) */ {
 public:
  PlayerCloseAccountBoxResponse();
  virtual ~PlayerCloseAccountBoxResponse();

  PlayerCloseAccountBoxResponse(const PlayerCloseAccountBoxResponse& from);

  inline PlayerCloseAccountBoxResponse& operator=(const PlayerCloseAccountBoxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCloseAccountBoxResponse(PlayerCloseAccountBoxResponse&& from) noexcept
    : PlayerCloseAccountBoxResponse() {
    *this = ::std::move(from);
  }

  inline PlayerCloseAccountBoxResponse& operator=(PlayerCloseAccountBoxResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCloseAccountBoxResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCloseAccountBoxResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerCloseAccountBoxResponse*>(
               &_PlayerCloseAccountBoxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(PlayerCloseAccountBoxResponse* other);
  friend void swap(PlayerCloseAccountBoxResponse& a, PlayerCloseAccountBoxResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCloseAccountBoxResponse* New() const final {
    return CreateMaybeMessage<PlayerCloseAccountBoxResponse>(NULL);
  }

  PlayerCloseAccountBoxResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCloseAccountBoxResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCloseAccountBoxResponse& from);
  void MergeFrom(const PlayerCloseAccountBoxResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCloseAccountBoxResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GameMsg.PlayerCloseAccountBoxResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameMsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EmptyGameRequest

// -------------------------------------------------------------------

// NormalGameResponse

// -------------------------------------------------------------------

// MsgCard

// optional int32 point = 1;
inline bool MsgCard::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCard::clear_point() {
  point_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 MsgCard::point() const {
  // @@protoc_insertion_point(field_get:GameMsg.MsgCard.point)
  return point_;
}
inline void MsgCard::set_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  point_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.MsgCard.point)
}

// optional int32 color = 2;
inline bool MsgCard::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCard::clear_color() {
  color_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 MsgCard::color() const {
  // @@protoc_insertion_point(field_get:GameMsg.MsgCard.color)
  return color_;
}
inline void MsgCard::set_color(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  color_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.MsgCard.color)
}

// -------------------------------------------------------------------

// PB_CardGroup

// repeated .GameMsg.MsgCard cards = 1;
inline int PB_CardGroup::cards_size() const {
  return cards_.size();
}
inline void PB_CardGroup::clear_cards() {
  cards_.Clear();
}
inline ::GameMsg::MsgCard* PB_CardGroup::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.PB_CardGroup.cards)
  return cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
PB_CardGroup::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PB_CardGroup.cards)
  return &cards_;
}
inline const ::GameMsg::MsgCard& PB_CardGroup::cards(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PB_CardGroup.cards)
  return cards_.Get(index);
}
inline ::GameMsg::MsgCard* PB_CardGroup::add_cards() {
  // @@protoc_insertion_point(field_add:GameMsg.PB_CardGroup.cards)
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
PB_CardGroup::cards() const {
  // @@protoc_insertion_point(field_list:GameMsg.PB_CardGroup.cards)
  return cards_;
}

// optional int32 type = 2;
inline bool PB_CardGroup::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_CardGroup::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PB_CardGroup::type() const {
  // @@protoc_insertion_point(field_get:GameMsg.PB_CardGroup.type)
  return type_;
}
inline void PB_CardGroup::set_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PB_CardGroup.type)
}

// -------------------------------------------------------------------

// ApplyFlushRoomRequest

// optional int32 userId = 1;
inline bool ApplyFlushRoomRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyFlushRoomRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyFlushRoomRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFlushRoomRequest.userId)
  return userid_;
}
inline void ApplyFlushRoomRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFlushRoomRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyFlushRoomRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyFlushRoomRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyFlushRoomRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFlushRoomRequest.roomId)
  return roomid_;
}
inline void ApplyFlushRoomRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFlushRoomRequest.roomId)
}

// optional bytes playerName = 3;
inline bool ApplyFlushRoomRequest::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyFlushRoomRequest::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyFlushRoomRequest::playername() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFlushRoomRequest.playerName)
  return playername_.GetNoArena();
}
inline void ApplyFlushRoomRequest::set_playername(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFlushRoomRequest.playerName)
}
#if LANG_CXX11
inline void ApplyFlushRoomRequest::set_playername(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyFlushRoomRequest.playerName)
}
#endif
inline void ApplyFlushRoomRequest::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyFlushRoomRequest.playerName)
}
inline void ApplyFlushRoomRequest::set_playername(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyFlushRoomRequest.playerName)
}
inline ::std::string* ApplyFlushRoomRequest::mutable_playername() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyFlushRoomRequest.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyFlushRoomRequest::release_playername() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyFlushRoomRequest.playerName)
  if (!has_playername()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return playername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyFlushRoomRequest::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyFlushRoomRequest.playerName)
}

// -------------------------------------------------------------------

// ApplyFlushRoomResponse

// -------------------------------------------------------------------

// ApplyEnterRoomRequest

// optional int32 userId = 1;
inline bool ApplyEnterRoomRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyEnterRoomRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyEnterRoomRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyEnterRoomRequest.userId)
  return userid_;
}
inline void ApplyEnterRoomRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyEnterRoomRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyEnterRoomRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyEnterRoomRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyEnterRoomRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyEnterRoomRequest.roomId)
  return roomid_;
}
inline void ApplyEnterRoomRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyEnterRoomRequest.roomId)
}

// optional bytes playerName = 3;
inline bool ApplyEnterRoomRequest::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyEnterRoomRequest::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyEnterRoomRequest::playername() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyEnterRoomRequest.playerName)
  return playername_.GetNoArena();
}
inline void ApplyEnterRoomRequest::set_playername(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyEnterRoomRequest.playerName)
}
#if LANG_CXX11
inline void ApplyEnterRoomRequest::set_playername(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyEnterRoomRequest.playerName)
}
#endif
inline void ApplyEnterRoomRequest::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyEnterRoomRequest.playerName)
}
inline void ApplyEnterRoomRequest::set_playername(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyEnterRoomRequest.playerName)
}
inline ::std::string* ApplyEnterRoomRequest::mutable_playername() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyEnterRoomRequest.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyEnterRoomRequest::release_playername() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyEnterRoomRequest.playerName)
  if (!has_playername()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return playername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyEnterRoomRequest::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyEnterRoomRequest.playerName)
}

// -------------------------------------------------------------------

// ApplyEnterRoomResponse

// -------------------------------------------------------------------

// PlayerInfo

// optional int32 id = 1;
inline bool PlayerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.id)
  return id_;
}
inline void PlayerInfo::set_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.id)
}

// optional bytes name = 2;
inline bool PlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.name)
  return name_.GetNoArena();
}
inline void PlayerInfo::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.name)
}
#if LANG_CXX11
inline void PlayerInfo::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerInfo.name)
}
#endif
inline void PlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerInfo.name)
}
inline void PlayerInfo::set_name(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerInfo.name)
}
inline ::std::string* PlayerInfo::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerInfo.name)
  if (!has_name()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerInfo.name)
}

// optional int64 totalChips = 3;
inline bool PlayerInfo::has_totalchips() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInfo::clear_totalchips() {
  totalchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerInfo::totalchips() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.totalChips)
  return totalchips_;
}
inline void PlayerInfo::set_totalchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  totalchips_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.totalChips)
}

// optional int32 status = 4;
inline bool PlayerInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerInfo::status() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.status)
  return status_;
}
inline void PlayerInfo::set_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  status_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.status)
}

// optional int32 seatNumber = 5;
inline bool PlayerInfo::has_seatnumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerInfo::clear_seatnumber() {
  seatnumber_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 PlayerInfo::seatnumber() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.seatNumber)
  return seatnumber_;
}
inline void PlayerInfo::set_seatnumber(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  seatnumber_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.seatNumber)
}

// optional int32 score = 6;
inline bool PlayerInfo::has_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerInfo::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 PlayerInfo::score() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.score)
  return score_;
}
inline void PlayerInfo::set_score(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  score_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.score)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 7;
inline int PlayerInfo::cardgroup_size() const {
  return cardgroup_.size();
}
inline void PlayerInfo::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* PlayerInfo::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerInfo.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
PlayerInfo::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PlayerInfo.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& PlayerInfo::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* PlayerInfo::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.PlayerInfo.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
PlayerInfo::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.PlayerInfo.cardGroup)
  return cardgroup_;
}

// optional int32 handCardCount = 8;
inline bool PlayerInfo::has_handcardcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerInfo::clear_handcardcount() {
  handcardcount_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 PlayerInfo::handcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerInfo.handCardCount)
  return handcardcount_;
}
inline void PlayerInfo::set_handcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  handcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerInfo.handCardCount)
}

// -------------------------------------------------------------------

// PB_IngamePlayer

// optional int32 userId = 1;
inline bool PB_IngamePlayer::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_IngamePlayer::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PB_IngamePlayer::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PB_IngamePlayer.userId)
  return userid_;
}
inline void PB_IngamePlayer::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PB_IngamePlayer.userId)
}

// optional int32 seatNum = 2;
inline bool PB_IngamePlayer::has_seatnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_IngamePlayer::clear_seatnum() {
  seatnum_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PB_IngamePlayer::seatnum() const {
  // @@protoc_insertion_point(field_get:GameMsg.PB_IngamePlayer.seatNum)
  return seatnum_;
}
inline void PB_IngamePlayer::set_seatnum(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  seatnum_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PB_IngamePlayer.seatNum)
}

// -------------------------------------------------------------------

// FlushRoomRequest

// optional int64 smallBlind = 1;
inline bool FlushRoomRequest::has_smallblind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FlushRoomRequest::clear_smallblind() {
  smallblind_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int64 FlushRoomRequest::smallblind() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.smallBlind)
  return smallblind_;
}
inline void FlushRoomRequest::set_smallblind(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  smallblind_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.smallBlind)
}

// optional int64 minCarry = 2;
inline bool FlushRoomRequest::has_mincarry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FlushRoomRequest::clear_mincarry() {
  mincarry_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 FlushRoomRequest::mincarry() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.minCarry)
  return mincarry_;
}
inline void FlushRoomRequest::set_mincarry(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  mincarry_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.minCarry)
}

// optional int32 gameStatus = 3;
inline bool FlushRoomRequest::has_gamestatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FlushRoomRequest::clear_gamestatus() {
  gamestatus_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 FlushRoomRequest::gamestatus() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.gameStatus)
  return gamestatus_;
}
inline void FlushRoomRequest::set_gamestatus(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  gamestatus_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.gameStatus)
}

// optional int32 maxPlaying = 4;
inline bool FlushRoomRequest::has_maxplaying() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FlushRoomRequest::clear_maxplaying() {
  maxplaying_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 FlushRoomRequest::maxplaying() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.maxPlaying)
  return maxplaying_;
}
inline void FlushRoomRequest::set_maxplaying(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxplaying_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.maxPlaying)
}

// repeated .GameMsg.PlayerInfo player = 5;
inline int FlushRoomRequest::player_size() const {
  return player_.size();
}
inline void FlushRoomRequest::clear_player() {
  player_.Clear();
}
inline ::GameMsg::PlayerInfo* FlushRoomRequest::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.FlushRoomRequest.player)
  return player_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerInfo >*
FlushRoomRequest::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.FlushRoomRequest.player)
  return &player_;
}
inline const ::GameMsg::PlayerInfo& FlushRoomRequest::player(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.player)
  return player_.Get(index);
}
inline ::GameMsg::PlayerInfo* FlushRoomRequest::add_player() {
  // @@protoc_insertion_point(field_add:GameMsg.FlushRoomRequest.player)
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerInfo >&
FlushRoomRequest::player() const {
  // @@protoc_insertion_point(field_list:GameMsg.FlushRoomRequest.player)
  return player_;
}

// optional int32 roomType = 6;
inline bool FlushRoomRequest::has_roomtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FlushRoomRequest::clear_roomtype() {
  roomtype_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 FlushRoomRequest::roomtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.roomType)
  return roomtype_;
}
inline void FlushRoomRequest::set_roomtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.roomType)
}

// optional int32 deskType = 7;
inline bool FlushRoomRequest::has_desktype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FlushRoomRequest::clear_desktype() {
  desktype_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 FlushRoomRequest::desktype() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.deskType)
  return desktype_;
}
inline void FlushRoomRequest::set_desktype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  desktype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.deskType)
}

// repeated .GameMsg.MsgCard cardPool = 8;
inline int FlushRoomRequest::cardpool_size() const {
  return cardpool_.size();
}
inline void FlushRoomRequest::clear_cardpool() {
  cardpool_.Clear();
}
inline ::GameMsg::MsgCard* FlushRoomRequest::mutable_cardpool(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.FlushRoomRequest.cardPool)
  return cardpool_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
FlushRoomRequest::mutable_cardpool() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.FlushRoomRequest.cardPool)
  return &cardpool_;
}
inline const ::GameMsg::MsgCard& FlushRoomRequest::cardpool(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.cardPool)
  return cardpool_.Get(index);
}
inline ::GameMsg::MsgCard* FlushRoomRequest::add_cardpool() {
  // @@protoc_insertion_point(field_add:GameMsg.FlushRoomRequest.cardPool)
  return cardpool_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
FlushRoomRequest::cardpool() const {
  // @@protoc_insertion_point(field_list:GameMsg.FlushRoomRequest.cardPool)
  return cardpool_;
}

// optional int32 bottomCardCount = 9;
inline bool FlushRoomRequest::has_bottomcardcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FlushRoomRequest::clear_bottomcardcount() {
  bottomcardcount_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 FlushRoomRequest::bottomcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.bottomCardCount)
  return bottomcardcount_;
}
inline void FlushRoomRequest::set_bottomcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  bottomcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.bottomCardCount)
}

// optional .GameMsg.MsgCard jokerCard = 10;
inline bool FlushRoomRequest::has_jokercard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FlushRoomRequest::clear_jokercard() {
  if (jokercard_ != NULL) jokercard_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& FlushRoomRequest::jokercard() const {
  const ::GameMsg::MsgCard* p = jokercard_;
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.jokerCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* FlushRoomRequest::release_jokercard() {
  // @@protoc_insertion_point(field_release:GameMsg.FlushRoomRequest.jokerCard)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = jokercard_;
  jokercard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* FlushRoomRequest::mutable_jokercard() {
  _has_bits_[0] |= 0x00000001u;
  if (jokercard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    jokercard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.FlushRoomRequest.jokerCard)
  return jokercard_;
}
inline void FlushRoomRequest::set_allocated_jokercard(::GameMsg::MsgCard* jokercard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete jokercard_;
  }
  if (jokercard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jokercard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jokercard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  jokercard_ = jokercard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.FlushRoomRequest.jokerCard)
}

// optional int64 chipsPool = 11;
inline bool FlushRoomRequest::has_chipspool() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FlushRoomRequest::clear_chipspool() {
  chipspool_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int64 FlushRoomRequest::chipspool() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.chipsPool)
  return chipspool_;
}
inline void FlushRoomRequest::set_chipspool(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  chipspool_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.chipsPool)
}

// optional int32 currentActiveSeat = 12;
inline bool FlushRoomRequest::has_currentactiveseat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FlushRoomRequest::clear_currentactiveseat() {
  currentactiveseat_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 FlushRoomRequest::currentactiveseat() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.currentActiveSeat)
  return currentactiveseat_;
}
inline void FlushRoomRequest::set_currentactiveseat(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  currentactiveseat_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.currentActiveSeat)
}

// optional int32 dealerIndex = 13;
inline bool FlushRoomRequest::has_dealerindex() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FlushRoomRequest::clear_dealerindex() {
  dealerindex_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::int32 FlushRoomRequest::dealerindex() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.dealerIndex)
  return dealerindex_;
}
inline void FlushRoomRequest::set_dealerindex(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  dealerindex_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.dealerIndex)
}

// optional int32 timeLeft = 14;
inline bool FlushRoomRequest::has_timeleft() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FlushRoomRequest::clear_timeleft() {
  timeleft_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::int32 FlushRoomRequest::timeleft() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.timeLeft)
  return timeleft_;
}
inline void FlushRoomRequest::set_timeleft(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.timeLeft)
}

// optional int32 applyDeclareSeatnum = 15;
inline bool FlushRoomRequest::has_applydeclareseatnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FlushRoomRequest::clear_applydeclareseatnum() {
  applydeclareseatnum_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::applydeclareseatnum() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.applyDeclareSeatnum)
  return applydeclareseatnum_;
}
inline void FlushRoomRequest::set_applydeclareseatnum(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  applydeclareseatnum_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.applyDeclareSeatnum)
}

// optional int32 active1Sec = 16;
inline bool FlushRoomRequest::has_active1sec() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FlushRoomRequest::clear_active1sec() {
  active1sec_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::active1sec() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.active1Sec)
  return active1sec_;
}
inline void FlushRoomRequest::set_active1sec(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  active1sec_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.active1Sec)
}

// optional int32 active2Sec = 17;
inline bool FlushRoomRequest::has_active2sec() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FlushRoomRequest::clear_active2sec() {
  active2sec_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::active2sec() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.active2Sec)
  return active2sec_;
}
inline void FlushRoomRequest::set_active2sec(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  active2sec_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.active2Sec)
}

// optional int32 distributSec = 18;
inline bool FlushRoomRequest::has_distributsec() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FlushRoomRequest::clear_distributsec() {
  distributsec_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::distributsec() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.distributSec)
  return distributsec_;
}
inline void FlushRoomRequest::set_distributsec(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  distributsec_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.distributSec)
}

// optional int32 declareSec = 19;
inline bool FlushRoomRequest::has_declaresec() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FlushRoomRequest::clear_declaresec() {
  declaresec_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::declaresec() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.declareSec)
  return declaresec_;
}
inline void FlushRoomRequest::set_declaresec(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  declaresec_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.declareSec)
}

// optional int32 waitGameSec = 20;
inline bool FlushRoomRequest::has_waitgamesec() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FlushRoomRequest::clear_waitgamesec() {
  waitgamesec_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::waitgamesec() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.waitGameSec)
  return waitgamesec_;
}
inline void FlushRoomRequest::set_waitgamesec(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  waitgamesec_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.waitGameSec)
}

// repeated .GameMsg.MsgCard handCard = 21;
inline int FlushRoomRequest::handcard_size() const {
  return handcard_.size();
}
inline void FlushRoomRequest::clear_handcard() {
  handcard_.Clear();
}
inline ::GameMsg::MsgCard* FlushRoomRequest::mutable_handcard(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.FlushRoomRequest.handCard)
  return handcard_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
FlushRoomRequest::mutable_handcard() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.FlushRoomRequest.handCard)
  return &handcard_;
}
inline const ::GameMsg::MsgCard& FlushRoomRequest::handcard(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.handCard)
  return handcard_.Get(index);
}
inline ::GameMsg::MsgCard* FlushRoomRequest::add_handcard() {
  // @@protoc_insertion_point(field_add:GameMsg.FlushRoomRequest.handCard)
  return handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
FlushRoomRequest::handcard() const {
  // @@protoc_insertion_point(field_list:GameMsg.FlushRoomRequest.handCard)
  return handcard_;
}

// optional int32 dropScore1 = 22;
inline bool FlushRoomRequest::has_dropscore1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FlushRoomRequest::clear_dropscore1() {
  dropscore1_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::dropscore1() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.dropScore1)
  return dropscore1_;
}
inline void FlushRoomRequest::set_dropscore1(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  dropscore1_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.dropScore1)
}

// optional int32 dropScore2 = 23;
inline bool FlushRoomRequest::has_dropscore2() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FlushRoomRequest::clear_dropscore2() {
  dropscore2_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::int32 FlushRoomRequest::dropscore2() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.dropScore2)
  return dropscore2_;
}
inline void FlushRoomRequest::set_dropscore2(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  dropscore2_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.dropScore2)
}

// optional bool isPoolCardCanDig = 24;
inline bool FlushRoomRequest::has_ispoolcardcandig() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FlushRoomRequest::clear_ispoolcardcandig() {
  ispoolcardcandig_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool FlushRoomRequest::ispoolcardcandig() const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.isPoolCardCanDig)
  return ispoolcardcandig_;
}
inline void FlushRoomRequest::set_ispoolcardcandig(bool value) {
  _has_bits_[0] |= 0x00100000u;
  ispoolcardcandig_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.FlushRoomRequest.isPoolCardCanDig)
}

// repeated .GameMsg.PB_IngamePlayer ingamePlayer = 25;
inline int FlushRoomRequest::ingameplayer_size() const {
  return ingameplayer_.size();
}
inline void FlushRoomRequest::clear_ingameplayer() {
  ingameplayer_.Clear();
}
inline ::GameMsg::PB_IngamePlayer* FlushRoomRequest::mutable_ingameplayer(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.FlushRoomRequest.ingamePlayer)
  return ingameplayer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_IngamePlayer >*
FlushRoomRequest::mutable_ingameplayer() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.FlushRoomRequest.ingamePlayer)
  return &ingameplayer_;
}
inline const ::GameMsg::PB_IngamePlayer& FlushRoomRequest::ingameplayer(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.FlushRoomRequest.ingamePlayer)
  return ingameplayer_.Get(index);
}
inline ::GameMsg::PB_IngamePlayer* FlushRoomRequest::add_ingameplayer() {
  // @@protoc_insertion_point(field_add:GameMsg.FlushRoomRequest.ingamePlayer)
  return ingameplayer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_IngamePlayer >&
FlushRoomRequest::ingameplayer() const {
  // @@protoc_insertion_point(field_list:GameMsg.FlushRoomRequest.ingamePlayer)
  return ingameplayer_;
}

// -------------------------------------------------------------------

// FlushRoomResponse

// -------------------------------------------------------------------

// ApplySeatRequest

// optional int32 userId = 1;
inline bool ApplySeatRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplySeatRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplySeatRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplySeatRequest.userId)
  return userid_;
}
inline void ApplySeatRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplySeatRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplySeatRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplySeatRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplySeatRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplySeatRequest.roomId)
  return roomid_;
}
inline void ApplySeatRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplySeatRequest.roomId)
}

// optional int32 seatNumber = 3;
inline bool ApplySeatRequest::has_seatnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplySeatRequest::clear_seatnumber() {
  seatnumber_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplySeatRequest::seatnumber() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplySeatRequest.seatNumber)
  return seatnumber_;
}
inline void ApplySeatRequest::set_seatnumber(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  seatnumber_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplySeatRequest.seatNumber)
}

// optional int32 autoBuyIn = 4;
inline bool ApplySeatRequest::has_autobuyin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplySeatRequest::clear_autobuyin() {
  autobuyin_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplySeatRequest::autobuyin() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplySeatRequest.autoBuyIn)
  return autobuyin_;
}
inline void ApplySeatRequest::set_autobuyin(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  autobuyin_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplySeatRequest.autoBuyIn)
}

// -------------------------------------------------------------------

// ApplySeatResponse

// -------------------------------------------------------------------

// PlayerSitDownRequest

// optional int32 userId = 1;
inline bool PlayerSitDownRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSitDownRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerSitDownRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerSitDownRequest.userId)
  return userid_;
}
inline void PlayerSitDownRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerSitDownRequest.userId)
}

// optional bytes playerName = 2;
inline bool PlayerSitDownRequest::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSitDownRequest::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerSitDownRequest::playername() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerSitDownRequest.playerName)
  return playername_.GetNoArena();
}
inline void PlayerSitDownRequest::set_playername(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerSitDownRequest.playerName)
}
#if LANG_CXX11
inline void PlayerSitDownRequest::set_playername(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerSitDownRequest.playerName)
}
#endif
inline void PlayerSitDownRequest::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerSitDownRequest.playerName)
}
inline void PlayerSitDownRequest::set_playername(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerSitDownRequest.playerName)
}
inline ::std::string* PlayerSitDownRequest::mutable_playername() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerSitDownRequest.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerSitDownRequest::release_playername() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerSitDownRequest.playerName)
  if (!has_playername()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return playername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerSitDownRequest::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerSitDownRequest.playerName)
}

// optional int32 seatNumber = 3;
inline bool PlayerSitDownRequest::has_seatnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSitDownRequest::clear_seatnumber() {
  seatnumber_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerSitDownRequest::seatnumber() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerSitDownRequest.seatNumber)
  return seatnumber_;
}
inline void PlayerSitDownRequest::set_seatnumber(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  seatnumber_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerSitDownRequest.seatNumber)
}

// -------------------------------------------------------------------

// PlayerSitDownResponse

// -------------------------------------------------------------------

// ApplyStandupRequest

// optional int32 userId = 1;
inline bool ApplyStandupRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyStandupRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyStandupRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyStandupRequest.userId)
  return userid_;
}
inline void ApplyStandupRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyStandupRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyStandupRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyStandupRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyStandupRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyStandupRequest.roomId)
  return roomid_;
}
inline void ApplyStandupRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyStandupRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyStandupResponse

// -------------------------------------------------------------------

// PlayerStandUpRequest

// optional int32 userId = 1;
inline bool PlayerStandUpRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerStandUpRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerStandUpRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerStandUpRequest.userId)
  return userid_;
}
inline void PlayerStandUpRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerStandUpRequest.userId)
}

// optional int32 standUpReason = 2;
inline bool PlayerStandUpRequest::has_standupreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerStandUpRequest::clear_standupreason() {
  standupreason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerStandUpRequest::standupreason() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerStandUpRequest.standUpReason)
  return standupreason_;
}
inline void PlayerStandUpRequest::set_standupreason(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  standupreason_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerStandUpRequest.standUpReason)
}

// -------------------------------------------------------------------

// PlayerStandUpResponse

// -------------------------------------------------------------------

// ApplyQuitRoomRequest

// optional int32 userId = 1;
inline bool ApplyQuitRoomRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyQuitRoomRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyQuitRoomRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyQuitRoomRequest.userId)
  return userid_;
}
inline void ApplyQuitRoomRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyQuitRoomRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyQuitRoomRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyQuitRoomRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyQuitRoomRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyQuitRoomRequest.roomId)
  return roomid_;
}
inline void ApplyQuitRoomRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyQuitRoomRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyQuitRoomResponse

// -------------------------------------------------------------------

// PlayerQuitRoomRequest

// optional int32 userId = 1;
inline bool PlayerQuitRoomRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerQuitRoomRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerQuitRoomRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerQuitRoomRequest.userId)
  return userid_;
}
inline void PlayerQuitRoomRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerQuitRoomRequest.userId)
}

// optional int32 quitReason = 2;
inline bool PlayerQuitRoomRequest::has_quitreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerQuitRoomRequest::clear_quitreason() {
  quitreason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerQuitRoomRequest::quitreason() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerQuitRoomRequest.quitReason)
  return quitreason_;
}
inline void PlayerQuitRoomRequest::set_quitreason(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  quitreason_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerQuitRoomRequest.quitReason)
}

// -------------------------------------------------------------------

// PlayerQuitRoomResponse

// -------------------------------------------------------------------

// PlayerChips

// optional int32 userId = 1;
inline bool PlayerChips::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChips::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerChips::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChips.userId)
  return userid_;
}
inline void PlayerChips::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChips.userId)
}

// optional int64 currentChips = 2;
inline bool PlayerChips::has_currentchips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChips::clear_currentchips() {
  currentchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 PlayerChips::currentchips() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChips.currentChips)
  return currentchips_;
}
inline void PlayerChips::set_currentchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  currentchips_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChips.currentChips)
}

// -------------------------------------------------------------------

// PlayerBuyinRequest

// optional bool buyResult = 1;
inline bool PlayerBuyinRequest::has_buyresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBuyinRequest::clear_buyresult() {
  buyresult_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PlayerBuyinRequest::buyresult() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerBuyinRequest.buyResult)
  return buyresult_;
}
inline void PlayerBuyinRequest::set_buyresult(bool value) {
  _has_bits_[0] |= 0x00000002u;
  buyresult_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerBuyinRequest.buyResult)
}

// optional int64 buyinCount = 2;
inline bool PlayerBuyinRequest::has_buyincount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBuyinRequest::clear_buyincount() {
  buyincount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 PlayerBuyinRequest::buyincount() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerBuyinRequest.buyinCount)
  return buyincount_;
}
inline void PlayerBuyinRequest::set_buyincount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  buyincount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerBuyinRequest.buyinCount)
}

// -------------------------------------------------------------------

// PlayerBuyinResponse

// -------------------------------------------------------------------

// ApplyFaceShowRequest

// optional int32 userId = 1;
inline bool ApplyFaceShowRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyFaceShowRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyFaceShowRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFaceShowRequest.userId)
  return userid_;
}
inline void ApplyFaceShowRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFaceShowRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyFaceShowRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyFaceShowRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyFaceShowRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFaceShowRequest.roomId)
  return roomid_;
}
inline void ApplyFaceShowRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFaceShowRequest.roomId)
}

// optional int32 faceId = 3;
inline bool ApplyFaceShowRequest::has_faceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyFaceShowRequest::clear_faceid() {
  faceid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyFaceShowRequest::faceid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyFaceShowRequest.faceId)
  return faceid_;
}
inline void ApplyFaceShowRequest::set_faceid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  faceid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyFaceShowRequest.faceId)
}

// -------------------------------------------------------------------

// ApplyFaceShowResponse

// -------------------------------------------------------------------

// PlayerFaceShowRequest

// optional int32 userId = 1;
inline bool PlayerFaceShowRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerFaceShowRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerFaceShowRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerFaceShowRequest.userId)
  return userid_;
}
inline void PlayerFaceShowRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerFaceShowRequest.userId)
}

// optional int32 faceId = 2;
inline bool PlayerFaceShowRequest::has_faceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerFaceShowRequest::clear_faceid() {
  faceid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerFaceShowRequest::faceid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerFaceShowRequest.faceId)
  return faceid_;
}
inline void PlayerFaceShowRequest::set_faceid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  faceid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerFaceShowRequest.faceId)
}

// -------------------------------------------------------------------

// PlayerFaceShowResponse

// -------------------------------------------------------------------

// ApplyChatRequest

// optional int32 userId = 1;
inline bool ApplyChatRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyChatRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyChatRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyChatRequest.userId)
  return userid_;
}
inline void ApplyChatRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyChatRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyChatRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyChatRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyChatRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyChatRequest.roomId)
  return roomid_;
}
inline void ApplyChatRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyChatRequest.roomId)
}

// optional int32 IsShortcut = 3;
inline bool ApplyChatRequest::has_isshortcut() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyChatRequest::clear_isshortcut() {
  isshortcut_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyChatRequest::isshortcut() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyChatRequest.IsShortcut)
  return isshortcut_;
}
inline void ApplyChatRequest::set_isshortcut(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  isshortcut_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyChatRequest.IsShortcut)
}

// optional bytes chatContent = 4;
inline bool ApplyChatRequest::has_chatcontent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyChatRequest::clear_chatcontent() {
  chatcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyChatRequest::chatcontent() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyChatRequest.chatContent)
  return chatcontent_.GetNoArena();
}
inline void ApplyChatRequest::set_chatcontent(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyChatRequest.chatContent)
}
#if LANG_CXX11
inline void ApplyChatRequest::set_chatcontent(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyChatRequest.chatContent)
}
#endif
inline void ApplyChatRequest::set_chatcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyChatRequest.chatContent)
}
inline void ApplyChatRequest::set_chatcontent(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyChatRequest.chatContent)
}
inline ::std::string* ApplyChatRequest::mutable_chatcontent() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyChatRequest.chatContent)
  return chatcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyChatRequest::release_chatcontent() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyChatRequest.chatContent)
  if (!has_chatcontent()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return chatcontent_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyChatRequest::set_allocated_chatcontent(::std::string* chatcontent) {
  if (chatcontent != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chatcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatcontent);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyChatRequest.chatContent)
}

// -------------------------------------------------------------------

// ApplyChatResponse

// -------------------------------------------------------------------

// PlayerChatRequest

// optional int32 isShortcut = 1;
inline bool PlayerChatRequest::has_isshortcut() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerChatRequest::clear_isshortcut() {
  isshortcut_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerChatRequest::isshortcut() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChatRequest.isShortcut)
  return isshortcut_;
}
inline void PlayerChatRequest::set_isshortcut(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  isshortcut_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChatRequest.isShortcut)
}

// optional bytes chatContent = 2;
inline bool PlayerChatRequest::has_chatcontent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChatRequest::clear_chatcontent() {
  chatcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerChatRequest::chatcontent() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChatRequest.chatContent)
  return chatcontent_.GetNoArena();
}
inline void PlayerChatRequest::set_chatcontent(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChatRequest.chatContent)
}
#if LANG_CXX11
inline void PlayerChatRequest::set_chatcontent(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerChatRequest.chatContent)
}
#endif
inline void PlayerChatRequest::set_chatcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerChatRequest.chatContent)
}
inline void PlayerChatRequest::set_chatcontent(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  chatcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerChatRequest.chatContent)
}
inline ::std::string* PlayerChatRequest::mutable_chatcontent() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerChatRequest.chatContent)
  return chatcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerChatRequest::release_chatcontent() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerChatRequest.chatContent)
  if (!has_chatcontent()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return chatcontent_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerChatRequest::set_allocated_chatcontent(::std::string* chatcontent) {
  if (chatcontent != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chatcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatcontent);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerChatRequest.chatContent)
}

// optional int32 chatUserId = 3;
inline bool PlayerChatRequest::has_chatuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerChatRequest::clear_chatuserid() {
  chatuserid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 PlayerChatRequest::chatuserid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChatRequest.chatUserId)
  return chatuserid_;
}
inline void PlayerChatRequest::set_chatuserid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  chatuserid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChatRequest.chatUserId)
}

// optional bytes chatUserName = 4;
inline bool PlayerChatRequest::has_chatusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChatRequest::clear_chatusername() {
  chatusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PlayerChatRequest::chatusername() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerChatRequest.chatUserName)
  return chatusername_.GetNoArena();
}
inline void PlayerChatRequest::set_chatusername(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  chatusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerChatRequest.chatUserName)
}
#if LANG_CXX11
inline void PlayerChatRequest::set_chatusername(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  chatusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerChatRequest.chatUserName)
}
#endif
inline void PlayerChatRequest::set_chatusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000002u;
  chatusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerChatRequest.chatUserName)
}
inline void PlayerChatRequest::set_chatusername(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  chatusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerChatRequest.chatUserName)
}
inline ::std::string* PlayerChatRequest::mutable_chatusername() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerChatRequest.chatUserName)
  return chatusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerChatRequest::release_chatusername() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerChatRequest.chatUserName)
  if (!has_chatusername()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000002u;
  return chatusername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerChatRequest::set_allocated_chatusername(::std::string* chatusername) {
  if (chatusername != NULL) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  chatusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatusername);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerChatRequest.chatUserName)
}

// -------------------------------------------------------------------

// PlayerChatResponse

// -------------------------------------------------------------------

// ApplyUsePropsRequest

// optional int32 userId = 1;
inline bool ApplyUsePropsRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyUsePropsRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyUsePropsRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyUsePropsRequest.userId)
  return userid_;
}
inline void ApplyUsePropsRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyUsePropsRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyUsePropsRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyUsePropsRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyUsePropsRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyUsePropsRequest.roomId)
  return roomid_;
}
inline void ApplyUsePropsRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyUsePropsRequest.roomId)
}

// optional int32 acceptUserId = 3;
inline bool ApplyUsePropsRequest::has_acceptuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyUsePropsRequest::clear_acceptuserid() {
  acceptuserid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyUsePropsRequest::acceptuserid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyUsePropsRequest.acceptUserId)
  return acceptuserid_;
}
inline void ApplyUsePropsRequest::set_acceptuserid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  acceptuserid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyUsePropsRequest.acceptUserId)
}

// optional bytes propsName = 4;
inline bool ApplyUsePropsRequest::has_propsname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyUsePropsRequest::clear_propsname() {
  propsname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyUsePropsRequest::propsname() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyUsePropsRequest.propsName)
  return propsname_.GetNoArena();
}
inline void ApplyUsePropsRequest::set_propsname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyUsePropsRequest.propsName)
}
#if LANG_CXX11
inline void ApplyUsePropsRequest::set_propsname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyUsePropsRequest.propsName)
}
#endif
inline void ApplyUsePropsRequest::set_propsname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyUsePropsRequest.propsName)
}
inline void ApplyUsePropsRequest::set_propsname(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyUsePropsRequest.propsName)
}
inline ::std::string* ApplyUsePropsRequest::mutable_propsname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyUsePropsRequest.propsName)
  return propsname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyUsePropsRequest::release_propsname() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyUsePropsRequest.propsName)
  if (!has_propsname()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return propsname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyUsePropsRequest::set_allocated_propsname(::std::string* propsname) {
  if (propsname != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  propsname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), propsname);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyUsePropsRequest.propsName)
}

// -------------------------------------------------------------------

// ApplyUsePropsResponse

// -------------------------------------------------------------------

// PlayerUsePropsRequest

// optional int32 applyUserId = 1;
inline bool PlayerUsePropsRequest::has_applyuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerUsePropsRequest::clear_applyuserid() {
  applyuserid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerUsePropsRequest::applyuserid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerUsePropsRequest.applyUserId)
  return applyuserid_;
}
inline void PlayerUsePropsRequest::set_applyuserid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  applyuserid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerUsePropsRequest.applyUserId)
}

// optional int32 acceptUserId = 2;
inline bool PlayerUsePropsRequest::has_acceptuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerUsePropsRequest::clear_acceptuserid() {
  acceptuserid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerUsePropsRequest::acceptuserid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerUsePropsRequest.acceptUserId)
  return acceptuserid_;
}
inline void PlayerUsePropsRequest::set_acceptuserid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  acceptuserid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerUsePropsRequest.acceptUserId)
}

// optional bytes propsName = 3;
inline bool PlayerUsePropsRequest::has_propsname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerUsePropsRequest::clear_propsname() {
  propsname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerUsePropsRequest::propsname() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerUsePropsRequest.propsName)
  return propsname_.GetNoArena();
}
inline void PlayerUsePropsRequest::set_propsname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerUsePropsRequest.propsName)
}
#if LANG_CXX11
inline void PlayerUsePropsRequest::set_propsname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerUsePropsRequest.propsName)
}
#endif
inline void PlayerUsePropsRequest::set_propsname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerUsePropsRequest.propsName)
}
inline void PlayerUsePropsRequest::set_propsname(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  propsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerUsePropsRequest.propsName)
}
inline ::std::string* PlayerUsePropsRequest::mutable_propsname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerUsePropsRequest.propsName)
  return propsname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerUsePropsRequest::release_propsname() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerUsePropsRequest.propsName)
  if (!has_propsname()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return propsname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerUsePropsRequest::set_allocated_propsname(::std::string* propsname) {
  if (propsname != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  propsname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), propsname);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerUsePropsRequest.propsName)
}

// -------------------------------------------------------------------

// PlayerUsePropsResponse

// -------------------------------------------------------------------

// ApplyPresentGiftRequest

// optional int32 userId = 1;
inline bool ApplyPresentGiftRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyPresentGiftRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyPresentGiftRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftRequest.userId)
  return userid_;
}
inline void ApplyPresentGiftRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyPresentGiftRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyPresentGiftRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyPresentGiftRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftRequest.roomId)
  return roomid_;
}
inline void ApplyPresentGiftRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftRequest.roomId)
}

// optional int32 giftId = 3;
inline bool ApplyPresentGiftRequest::has_giftid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyPresentGiftRequest::clear_giftid() {
  giftid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyPresentGiftRequest::giftid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftRequest.giftId)
  return giftid_;
}
inline void ApplyPresentGiftRequest::set_giftid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  giftid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftRequest.giftId)
}

// repeated int32 acceptorId = 4;
inline int ApplyPresentGiftRequest::acceptorid_size() const {
  return acceptorid_.size();
}
inline void ApplyPresentGiftRequest::clear_acceptorid() {
  acceptorid_.Clear();
}
inline ::google::protobuf::int32 ApplyPresentGiftRequest::acceptorid(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftRequest.acceptorId)
  return acceptorid_.Get(index);
}
inline void ApplyPresentGiftRequest::set_acceptorid(int index, ::google::protobuf::int32 value) {
  acceptorid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftRequest.acceptorId)
}
inline void ApplyPresentGiftRequest::add_acceptorid(::google::protobuf::int32 value) {
  acceptorid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.ApplyPresentGiftRequest.acceptorId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ApplyPresentGiftRequest::acceptorid() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyPresentGiftRequest.acceptorId)
  return acceptorid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ApplyPresentGiftRequest::mutable_acceptorid() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyPresentGiftRequest.acceptorId)
  return &acceptorid_;
}

// -------------------------------------------------------------------

// ApplyPresentGiftResponse

// -------------------------------------------------------------------

// PlayerPresentGiftRequest

// optional int32 presenterId = 1;
inline bool PlayerPresentGiftRequest::has_presenterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerPresentGiftRequest::clear_presenterid() {
  presenterid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerPresentGiftRequest::presenterid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftRequest.presenterId)
  return presenterid_;
}
inline void PlayerPresentGiftRequest::set_presenterid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  presenterid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftRequest.presenterId)
}

// optional int32 giftId = 2;
inline bool PlayerPresentGiftRequest::has_giftid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerPresentGiftRequest::clear_giftid() {
  giftid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerPresentGiftRequest::giftid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftRequest.giftId)
  return giftid_;
}
inline void PlayerPresentGiftRequest::set_giftid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  giftid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftRequest.giftId)
}

// repeated int32 acceptorId = 3;
inline int PlayerPresentGiftRequest::acceptorid_size() const {
  return acceptorid_.size();
}
inline void PlayerPresentGiftRequest::clear_acceptorid() {
  acceptorid_.Clear();
}
inline ::google::protobuf::int32 PlayerPresentGiftRequest::acceptorid(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftRequest.acceptorId)
  return acceptorid_.Get(index);
}
inline void PlayerPresentGiftRequest::set_acceptorid(int index, ::google::protobuf::int32 value) {
  acceptorid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftRequest.acceptorId)
}
inline void PlayerPresentGiftRequest::add_acceptorid(::google::protobuf::int32 value) {
  acceptorid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.PlayerPresentGiftRequest.acceptorId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerPresentGiftRequest::acceptorid() const {
  // @@protoc_insertion_point(field_list:GameMsg.PlayerPresentGiftRequest.acceptorId)
  return acceptorid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerPresentGiftRequest::mutable_acceptorid() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PlayerPresentGiftRequest.acceptorId)
  return &acceptorid_;
}

// -------------------------------------------------------------------

// PlayerPresentGiftResponse

// -------------------------------------------------------------------

// ApplyPresentGiftNewInterRequest

// optional int32 userId = 1;
inline bool ApplyPresentGiftNewInterRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyPresentGiftNewInterRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyPresentGiftNewInterRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftNewInterRequest.userId)
  return userid_;
}
inline void ApplyPresentGiftNewInterRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftNewInterRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyPresentGiftNewInterRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyPresentGiftNewInterRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyPresentGiftNewInterRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftNewInterRequest.roomId)
  return roomid_;
}
inline void ApplyPresentGiftNewInterRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftNewInterRequest.roomId)
}

// optional int32 giftId = 3;
inline bool ApplyPresentGiftNewInterRequest::has_giftid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyPresentGiftNewInterRequest::clear_giftid() {
  giftid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyPresentGiftNewInterRequest::giftid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftNewInterRequest.giftId)
  return giftid_;
}
inline void ApplyPresentGiftNewInterRequest::set_giftid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  giftid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftNewInterRequest.giftId)
}

// optional bytes giftUrl = 4;
inline bool ApplyPresentGiftNewInterRequest::has_gifturl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyPresentGiftNewInterRequest::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyPresentGiftNewInterRequest::gifturl() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
  return gifturl_.GetNoArena();
}
inline void ApplyPresentGiftNewInterRequest::set_gifturl(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
}
#if LANG_CXX11
inline void ApplyPresentGiftNewInterRequest::set_gifturl(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
}
#endif
inline void ApplyPresentGiftNewInterRequest::set_gifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
}
inline void ApplyPresentGiftNewInterRequest::set_gifturl(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
}
inline ::std::string* ApplyPresentGiftNewInterRequest::mutable_gifturl() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyPresentGiftNewInterRequest::release_gifturl() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
  if (!has_gifturl()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gifturl_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyPresentGiftNewInterRequest::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyPresentGiftNewInterRequest.giftUrl)
}

// repeated int32 acceptorId = 5;
inline int ApplyPresentGiftNewInterRequest::acceptorid_size() const {
  return acceptorid_.size();
}
inline void ApplyPresentGiftNewInterRequest::clear_acceptorid() {
  acceptorid_.Clear();
}
inline ::google::protobuf::int32 ApplyPresentGiftNewInterRequest::acceptorid(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentGiftNewInterRequest.acceptorId)
  return acceptorid_.Get(index);
}
inline void ApplyPresentGiftNewInterRequest::set_acceptorid(int index, ::google::protobuf::int32 value) {
  acceptorid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentGiftNewInterRequest.acceptorId)
}
inline void ApplyPresentGiftNewInterRequest::add_acceptorid(::google::protobuf::int32 value) {
  acceptorid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.ApplyPresentGiftNewInterRequest.acceptorId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ApplyPresentGiftNewInterRequest::acceptorid() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyPresentGiftNewInterRequest.acceptorId)
  return acceptorid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ApplyPresentGiftNewInterRequest::mutable_acceptorid() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyPresentGiftNewInterRequest.acceptorId)
  return &acceptorid_;
}

// -------------------------------------------------------------------

// ApplyPresentGiftNewInterResponse

// -------------------------------------------------------------------

// ApplyPresentChipsRequest

// optional int32 userId = 1;
inline bool ApplyPresentChipsRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyPresentChipsRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyPresentChipsRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentChipsRequest.userId)
  return userid_;
}
inline void ApplyPresentChipsRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentChipsRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyPresentChipsRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyPresentChipsRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyPresentChipsRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentChipsRequest.roomId)
  return roomid_;
}
inline void ApplyPresentChipsRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentChipsRequest.roomId)
}

// optional int32 acceptorId = 3;
inline bool ApplyPresentChipsRequest::has_acceptorid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyPresentChipsRequest::clear_acceptorid() {
  acceptorid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyPresentChipsRequest::acceptorid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentChipsRequest.acceptorId)
  return acceptorid_;
}
inline void ApplyPresentChipsRequest::set_acceptorid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  acceptorid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentChipsRequest.acceptorId)
}

// optional int64 chipsCount = 4;
inline bool ApplyPresentChipsRequest::has_chipscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyPresentChipsRequest::clear_chipscount() {
  chipscount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 ApplyPresentChipsRequest::chipscount() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPresentChipsRequest.chipsCount)
  return chipscount_;
}
inline void ApplyPresentChipsRequest::set_chipscount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  chipscount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPresentChipsRequest.chipsCount)
}

// -------------------------------------------------------------------

// ApplyPresentChipsResponse

// -------------------------------------------------------------------

// PlayerPresentChipsRequest

// optional int32 presenterId = 1;
inline bool PlayerPresentChipsRequest::has_presenterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerPresentChipsRequest::clear_presenterid() {
  presenterid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerPresentChipsRequest::presenterid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentChipsRequest.presenterId)
  return presenterid_;
}
inline void PlayerPresentChipsRequest::set_presenterid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  presenterid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentChipsRequest.presenterId)
}

// optional int32 acceptorId = 2;
inline bool PlayerPresentChipsRequest::has_acceptorid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerPresentChipsRequest::clear_acceptorid() {
  acceptorid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerPresentChipsRequest::acceptorid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentChipsRequest.acceptorId)
  return acceptorid_;
}
inline void PlayerPresentChipsRequest::set_acceptorid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  acceptorid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentChipsRequest.acceptorId)
}

// optional int64 chipsCount = 3;
inline bool PlayerPresentChipsRequest::has_chipscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerPresentChipsRequest::clear_chipscount() {
  chipscount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerPresentChipsRequest::chipscount() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentChipsRequest.chipsCount)
  return chipscount_;
}
inline void PlayerPresentChipsRequest::set_chipscount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  chipscount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentChipsRequest.chipsCount)
}

// optional int64 presenterCarry = 4;
inline bool PlayerPresentChipsRequest::has_presentercarry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerPresentChipsRequest::clear_presentercarry() {
  presentercarry_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerPresentChipsRequest::presentercarry() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentChipsRequest.presenterCarry)
  return presentercarry_;
}
inline void PlayerPresentChipsRequest::set_presentercarry(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  presentercarry_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentChipsRequest.presenterCarry)
}

// optional int64 acceptorCarry = 5;
inline bool PlayerPresentChipsRequest::has_acceptorcarry() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerPresentChipsRequest::clear_acceptorcarry() {
  acceptorcarry_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 PlayerPresentChipsRequest::acceptorcarry() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentChipsRequest.acceptorCarry)
  return acceptorcarry_;
}
inline void PlayerPresentChipsRequest::set_acceptorcarry(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  acceptorcarry_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentChipsRequest.acceptorCarry)
}

// -------------------------------------------------------------------

// PlayerPresentChipsResponse

// -------------------------------------------------------------------

// PlayerPresentGiftNewInterRequest

// optional int32 presenterId = 1;
inline bool PlayerPresentGiftNewInterRequest::has_presenterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerPresentGiftNewInterRequest::clear_presenterid() {
  presenterid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerPresentGiftNewInterRequest::presenterid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftNewInterRequest.presenterId)
  return presenterid_;
}
inline void PlayerPresentGiftNewInterRequest::set_presenterid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  presenterid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftNewInterRequest.presenterId)
}

// optional int32 giftId = 2;
inline bool PlayerPresentGiftNewInterRequest::has_giftid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerPresentGiftNewInterRequest::clear_giftid() {
  giftid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerPresentGiftNewInterRequest::giftid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftNewInterRequest.giftId)
  return giftid_;
}
inline void PlayerPresentGiftNewInterRequest::set_giftid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  giftid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftNewInterRequest.giftId)
}

// optional bytes giftUrl = 3;
inline bool PlayerPresentGiftNewInterRequest::has_gifturl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerPresentGiftNewInterRequest::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerPresentGiftNewInterRequest::gifturl() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
  return gifturl_.GetNoArena();
}
inline void PlayerPresentGiftNewInterRequest::set_gifturl(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
}
#if LANG_CXX11
inline void PlayerPresentGiftNewInterRequest::set_gifturl(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
}
#endif
inline void PlayerPresentGiftNewInterRequest::set_gifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
}
inline void PlayerPresentGiftNewInterRequest::set_gifturl(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
}
inline ::std::string* PlayerPresentGiftNewInterRequest::mutable_gifturl() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerPresentGiftNewInterRequest::release_gifturl() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
  if (!has_gifturl()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gifturl_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerPresentGiftNewInterRequest::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerPresentGiftNewInterRequest.giftUrl)
}

// repeated int32 acceptorId = 4;
inline int PlayerPresentGiftNewInterRequest::acceptorid_size() const {
  return acceptorid_.size();
}
inline void PlayerPresentGiftNewInterRequest::clear_acceptorid() {
  acceptorid_.Clear();
}
inline ::google::protobuf::int32 PlayerPresentGiftNewInterRequest::acceptorid(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPresentGiftNewInterRequest.acceptorId)
  return acceptorid_.Get(index);
}
inline void PlayerPresentGiftNewInterRequest::set_acceptorid(int index, ::google::protobuf::int32 value) {
  acceptorid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPresentGiftNewInterRequest.acceptorId)
}
inline void PlayerPresentGiftNewInterRequest::add_acceptorid(::google::protobuf::int32 value) {
  acceptorid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.PlayerPresentGiftNewInterRequest.acceptorId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerPresentGiftNewInterRequest::acceptorid() const {
  // @@protoc_insertion_point(field_list:GameMsg.PlayerPresentGiftNewInterRequest.acceptorId)
  return acceptorid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerPresentGiftNewInterRequest::mutable_acceptorid() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PlayerPresentGiftNewInterRequest.acceptorId)
  return &acceptorid_;
}

// -------------------------------------------------------------------

// PlayerPresentGiftNewInterResponse

// -------------------------------------------------------------------

// PlayerEnterRoomRequest

// optional int32 userId = 1;
inline bool PlayerEnterRoomRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEnterRoomRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerEnterRoomRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerEnterRoomRequest.userId)
  return userid_;
}
inline void PlayerEnterRoomRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerEnterRoomRequest.userId)
}

// -------------------------------------------------------------------

// PlayerEnterRoomResponse

// -------------------------------------------------------------------

// ApplyTransmitMessageRequest

// optional int32 userId = 1;
inline bool ApplyTransmitMessageRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyTransmitMessageRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyTransmitMessageRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.userId)
  return userid_;
}
inline void ApplyTransmitMessageRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyTransmitMessageRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyTransmitMessageRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyTransmitMessageRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.roomId)
  return roomid_;
}
inline void ApplyTransmitMessageRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.roomId)
}

// optional int32 transmitMsgType = 3;
inline bool ApplyTransmitMessageRequest::has_transmitmsgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyTransmitMessageRequest::clear_transmitmsgtype() {
  transmitmsgtype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyTransmitMessageRequest::transmitmsgtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.transmitMsgType)
  return transmitmsgtype_;
}
inline void ApplyTransmitMessageRequest::set_transmitmsgtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  transmitmsgtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.transmitMsgType)
}

// optional int32 transmitMsgId = 4;
inline bool ApplyTransmitMessageRequest::has_transmitmsgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApplyTransmitMessageRequest::clear_transmitmsgid() {
  transmitmsgid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 ApplyTransmitMessageRequest::transmitmsgid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.transmitMsgId)
  return transmitmsgid_;
}
inline void ApplyTransmitMessageRequest::set_transmitmsgid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  transmitmsgid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.transmitMsgId)
}

// optional bytes transmitJsonData = 5;
inline bool ApplyTransmitMessageRequest::has_transmitjsondata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyTransmitMessageRequest::clear_transmitjsondata() {
  transmitjsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyTransmitMessageRequest::transmitjsondata() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
  return transmitjsondata_.GetNoArena();
}
inline void ApplyTransmitMessageRequest::set_transmitjsondata(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
}
#if LANG_CXX11
inline void ApplyTransmitMessageRequest::set_transmitjsondata(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
}
#endif
inline void ApplyTransmitMessageRequest::set_transmitjsondata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
}
inline void ApplyTransmitMessageRequest::set_transmitjsondata(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
}
inline ::std::string* ApplyTransmitMessageRequest::mutable_transmitjsondata() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
  return transmitjsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyTransmitMessageRequest::release_transmitjsondata() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
  if (!has_transmitjsondata()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return transmitjsondata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyTransmitMessageRequest::set_allocated_transmitjsondata(::std::string* transmitjsondata) {
  if (transmitjsondata != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transmitjsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transmitjsondata);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyTransmitMessageRequest.transmitJsonData)
}

// repeated int32 recvUserId = 6;
inline int ApplyTransmitMessageRequest::recvuserid_size() const {
  return recvuserid_.size();
}
inline void ApplyTransmitMessageRequest::clear_recvuserid() {
  recvuserid_.Clear();
}
inline ::google::protobuf::int32 ApplyTransmitMessageRequest::recvuserid(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTransmitMessageRequest.recvUserId)
  return recvuserid_.Get(index);
}
inline void ApplyTransmitMessageRequest::set_recvuserid(int index, ::google::protobuf::int32 value) {
  recvuserid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTransmitMessageRequest.recvUserId)
}
inline void ApplyTransmitMessageRequest::add_recvuserid(::google::protobuf::int32 value) {
  recvuserid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.ApplyTransmitMessageRequest.recvUserId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ApplyTransmitMessageRequest::recvuserid() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyTransmitMessageRequest.recvUserId)
  return recvuserid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ApplyTransmitMessageRequest::mutable_recvuserid() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyTransmitMessageRequest.recvUserId)
  return &recvuserid_;
}

// -------------------------------------------------------------------

// ApplyTransmitMessageResponse

// -------------------------------------------------------------------

// PlayerTransmitMessageRequest

// optional int32 transmitMsgType = 1;
inline bool PlayerTransmitMessageRequest::has_transmitmsgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTransmitMessageRequest::clear_transmitmsgtype() {
  transmitmsgtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerTransmitMessageRequest::transmitmsgtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTransmitMessageRequest.transmitMsgType)
  return transmitmsgtype_;
}
inline void PlayerTransmitMessageRequest::set_transmitmsgtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  transmitmsgtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTransmitMessageRequest.transmitMsgType)
}

// optional int32 transmitMsgId = 2;
inline bool PlayerTransmitMessageRequest::has_transmitmsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerTransmitMessageRequest::clear_transmitmsgid() {
  transmitmsgid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerTransmitMessageRequest::transmitmsgid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTransmitMessageRequest.transmitMsgId)
  return transmitmsgid_;
}
inline void PlayerTransmitMessageRequest::set_transmitmsgid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  transmitmsgid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTransmitMessageRequest.transmitMsgId)
}

// optional bytes transmitJsonData = 3;
inline bool PlayerTransmitMessageRequest::has_transmitjsondata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTransmitMessageRequest::clear_transmitjsondata() {
  transmitjsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerTransmitMessageRequest::transmitjsondata() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
  return transmitjsondata_.GetNoArena();
}
inline void PlayerTransmitMessageRequest::set_transmitjsondata(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
}
#if LANG_CXX11
inline void PlayerTransmitMessageRequest::set_transmitjsondata(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
}
#endif
inline void PlayerTransmitMessageRequest::set_transmitjsondata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
}
inline void PlayerTransmitMessageRequest::set_transmitjsondata(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  transmitjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
}
inline ::std::string* PlayerTransmitMessageRequest::mutable_transmitjsondata() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
  return transmitjsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerTransmitMessageRequest::release_transmitjsondata() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
  if (!has_transmitjsondata()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return transmitjsondata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerTransmitMessageRequest::set_allocated_transmitjsondata(::std::string* transmitjsondata) {
  if (transmitjsondata != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transmitjsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transmitjsondata);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerTransmitMessageRequest.transmitJsonData)
}

// optional int32 sendUserId = 4;
inline bool PlayerTransmitMessageRequest::has_senduserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTransmitMessageRequest::clear_senduserid() {
  senduserid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 PlayerTransmitMessageRequest::senduserid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTransmitMessageRequest.sendUserId)
  return senduserid_;
}
inline void PlayerTransmitMessageRequest::set_senduserid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  senduserid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTransmitMessageRequest.sendUserId)
}

// -------------------------------------------------------------------

// PlayerTransmitMessageResponse

// -------------------------------------------------------------------

// ApplyTrusteeOnRequest

// optional int32 userId = 1;
inline bool ApplyTrusteeOnRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyTrusteeOnRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyTrusteeOnRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTrusteeOnRequest.userId)
  return userid_;
}
inline void ApplyTrusteeOnRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTrusteeOnRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyTrusteeOnRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyTrusteeOnRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyTrusteeOnRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTrusteeOnRequest.roomId)
  return roomid_;
}
inline void ApplyTrusteeOnRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTrusteeOnRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyTrusteeOnResponse

// -------------------------------------------------------------------

// PlayerTrusteeOnRequest

// optional int32 userId = 1;
inline bool PlayerTrusteeOnRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTrusteeOnRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerTrusteeOnRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTrusteeOnRequest.userId)
  return userid_;
}
inline void PlayerTrusteeOnRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTrusteeOnRequest.userId)
}

// -------------------------------------------------------------------

// PlayerTrusteeOnResponse

// -------------------------------------------------------------------

// ApplyTrusteeOffRequest

// optional int32 userId = 1;
inline bool ApplyTrusteeOffRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyTrusteeOffRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyTrusteeOffRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTrusteeOffRequest.userId)
  return userid_;
}
inline void ApplyTrusteeOffRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTrusteeOffRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyTrusteeOffRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyTrusteeOffRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyTrusteeOffRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyTrusteeOffRequest.roomId)
  return roomid_;
}
inline void ApplyTrusteeOffRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyTrusteeOffRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyTrusteeOffResponse

// -------------------------------------------------------------------

// PlayerTrusteeOffRequest

// optional int32 userId = 1;
inline bool PlayerTrusteeOffRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTrusteeOffRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerTrusteeOffRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerTrusteeOffRequest.userId)
  return userid_;
}
inline void PlayerTrusteeOffRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerTrusteeOffRequest.userId)
}

// -------------------------------------------------------------------

// PlayerTrusteeOffResponse

// -------------------------------------------------------------------

// ReadyStartGameRequest

// -------------------------------------------------------------------

// ReadyStartGameResponse

// -------------------------------------------------------------------

// DealCardsReqeust

// optional int32 dealerSeat = 1;
inline bool DealCardsReqeust::has_dealerseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DealCardsReqeust::clear_dealerseat() {
  dealerseat_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 DealCardsReqeust::dealerseat() const {
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.dealerSeat)
  return dealerseat_;
}
inline void DealCardsReqeust::set_dealerseat(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  dealerseat_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.DealCardsReqeust.dealerSeat)
}

// repeated .GameMsg.MsgCard handCard = 2;
inline int DealCardsReqeust::handcard_size() const {
  return handcard_.size();
}
inline void DealCardsReqeust::clear_handcard() {
  handcard_.Clear();
}
inline ::GameMsg::MsgCard* DealCardsReqeust::mutable_handcard(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.DealCardsReqeust.handCard)
  return handcard_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
DealCardsReqeust::mutable_handcard() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.DealCardsReqeust.handCard)
  return &handcard_;
}
inline const ::GameMsg::MsgCard& DealCardsReqeust::handcard(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.handCard)
  return handcard_.Get(index);
}
inline ::GameMsg::MsgCard* DealCardsReqeust::add_handcard() {
  // @@protoc_insertion_point(field_add:GameMsg.DealCardsReqeust.handCard)
  return handcard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
DealCardsReqeust::handcard() const {
  // @@protoc_insertion_point(field_list:GameMsg.DealCardsReqeust.handCard)
  return handcard_;
}

// repeated int32 dealCardsOrder = 3;
inline int DealCardsReqeust::dealcardsorder_size() const {
  return dealcardsorder_.size();
}
inline void DealCardsReqeust::clear_dealcardsorder() {
  dealcardsorder_.Clear();
}
inline ::google::protobuf::int32 DealCardsReqeust::dealcardsorder(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.dealCardsOrder)
  return dealcardsorder_.Get(index);
}
inline void DealCardsReqeust::set_dealcardsorder(int index, ::google::protobuf::int32 value) {
  dealcardsorder_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.DealCardsReqeust.dealCardsOrder)
}
inline void DealCardsReqeust::add_dealcardsorder(::google::protobuf::int32 value) {
  dealcardsorder_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.DealCardsReqeust.dealCardsOrder)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DealCardsReqeust::dealcardsorder() const {
  // @@protoc_insertion_point(field_list:GameMsg.DealCardsReqeust.dealCardsOrder)
  return dealcardsorder_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DealCardsReqeust::mutable_dealcardsorder() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.DealCardsReqeust.dealCardsOrder)
  return &dealcardsorder_;
}

// optional int32 dealCardCount = 4;
inline bool DealCardsReqeust::has_dealcardcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DealCardsReqeust::clear_dealcardcount() {
  dealcardcount_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 DealCardsReqeust::dealcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.dealCardCount)
  return dealcardcount_;
}
inline void DealCardsReqeust::set_dealcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  dealcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.DealCardsReqeust.dealCardCount)
}

// optional .GameMsg.MsgCard jokerCard = 5;
inline bool DealCardsReqeust::has_jokercard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DealCardsReqeust::clear_jokercard() {
  if (jokercard_ != NULL) jokercard_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& DealCardsReqeust::jokercard() const {
  const ::GameMsg::MsgCard* p = jokercard_;
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.jokerCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* DealCardsReqeust::release_jokercard() {
  // @@protoc_insertion_point(field_release:GameMsg.DealCardsReqeust.jokerCard)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = jokercard_;
  jokercard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* DealCardsReqeust::mutable_jokercard() {
  _has_bits_[0] |= 0x00000001u;
  if (jokercard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    jokercard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.DealCardsReqeust.jokerCard)
  return jokercard_;
}
inline void DealCardsReqeust::set_allocated_jokercard(::GameMsg::MsgCard* jokercard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete jokercard_;
  }
  if (jokercard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jokercard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jokercard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  jokercard_ = jokercard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.DealCardsReqeust.jokerCard)
}

// optional .GameMsg.MsgCard firstPoolCard = 6;
inline bool DealCardsReqeust::has_firstpoolcard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DealCardsReqeust::clear_firstpoolcard() {
  if (firstpoolcard_ != NULL) firstpoolcard_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::GameMsg::MsgCard& DealCardsReqeust::firstpoolcard() const {
  const ::GameMsg::MsgCard* p = firstpoolcard_;
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.firstPoolCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* DealCardsReqeust::release_firstpoolcard() {
  // @@protoc_insertion_point(field_release:GameMsg.DealCardsReqeust.firstPoolCard)
  _has_bits_[0] &= ~0x00000002u;
  ::GameMsg::MsgCard* temp = firstpoolcard_;
  firstpoolcard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* DealCardsReqeust::mutable_firstpoolcard() {
  _has_bits_[0] |= 0x00000002u;
  if (firstpoolcard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    firstpoolcard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.DealCardsReqeust.firstPoolCard)
  return firstpoolcard_;
}
inline void DealCardsReqeust::set_allocated_firstpoolcard(::GameMsg::MsgCard* firstpoolcard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete firstpoolcard_;
  }
  if (firstpoolcard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      firstpoolcard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firstpoolcard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  firstpoolcard_ = firstpoolcard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.DealCardsReqeust.firstPoolCard)
}

// optional int32 bottomCardCount = 7;
inline bool DealCardsReqeust::has_bottomcardcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DealCardsReqeust::clear_bottomcardcount() {
  bottomcardcount_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 DealCardsReqeust::bottomcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.DealCardsReqeust.bottomCardCount)
  return bottomcardcount_;
}
inline void DealCardsReqeust::set_bottomcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  bottomcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.DealCardsReqeust.bottomCardCount)
}

// -------------------------------------------------------------------

// DealCardsResponse

// -------------------------------------------------------------------

// ActivePlayerRequest

// optional int32 userId = 1;
inline bool ActivePlayerRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivePlayerRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ActivePlayerRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ActivePlayerRequest.userId)
  return userid_;
}
inline void ActivePlayerRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ActivePlayerRequest.userId)
}

// optional bool isPoolCardCanDig = 2;
inline bool ActivePlayerRequest::has_ispoolcardcandig() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivePlayerRequest::clear_ispoolcardcandig() {
  ispoolcardcandig_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ActivePlayerRequest::ispoolcardcandig() const {
  // @@protoc_insertion_point(field_get:GameMsg.ActivePlayerRequest.isPoolCardCanDig)
  return ispoolcardcandig_;
}
inline void ActivePlayerRequest::set_ispoolcardcandig(bool value) {
  _has_bits_[0] |= 0x00000002u;
  ispoolcardcandig_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ActivePlayerRequest.isPoolCardCanDig)
}

// -------------------------------------------------------------------

// ActivePlayerResponse

// -------------------------------------------------------------------

// ApplyDigCardRequest

// optional int32 userId = 1;
inline bool ApplyDigCardRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyDigCardRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyDigCardRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDigCardRequest.userId)
  return userid_;
}
inline void ApplyDigCardRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDigCardRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyDigCardRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyDigCardRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyDigCardRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDigCardRequest.roomId)
  return roomid_;
}
inline void ApplyDigCardRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDigCardRequest.roomId)
}

// optional int32 digType = 3;
inline bool ApplyDigCardRequest::has_digtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyDigCardRequest::clear_digtype() {
  digtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyDigCardRequest::digtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDigCardRequest.digType)
  return digtype_;
}
inline void ApplyDigCardRequest::set_digtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  digtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDigCardRequest.digType)
}

// -------------------------------------------------------------------

// ApplyDigCardResponse

// -------------------------------------------------------------------

// PlayerDigCardRequest

// optional int32 userId = 1;
inline bool PlayerDigCardRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDigCardRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerDigCardRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDigCardRequest.userId)
  return userid_;
}
inline void PlayerDigCardRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDigCardRequest.userId)
}

// optional int32 digType = 2;
inline bool PlayerDigCardRequest::has_digtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerDigCardRequest::clear_digtype() {
  digtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerDigCardRequest::digtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDigCardRequest.digType)
  return digtype_;
}
inline void PlayerDigCardRequest::set_digtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  digtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDigCardRequest.digType)
}

// optional .GameMsg.MsgCard card = 3;
inline bool PlayerDigCardRequest::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDigCardRequest::clear_card() {
  if (card_ != NULL) card_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& PlayerDigCardRequest::card() const {
  const ::GameMsg::MsgCard* p = card_;
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDigCardRequest.card)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* PlayerDigCardRequest::release_card() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerDigCardRequest.card)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = card_;
  card_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* PlayerDigCardRequest::mutable_card() {
  _has_bits_[0] |= 0x00000001u;
  if (card_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    card_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerDigCardRequest.card)
  return card_;
}
inline void PlayerDigCardRequest::set_allocated_card(::GameMsg::MsgCard* card) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete card_;
  }
  if (card) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      card = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerDigCardRequest.card)
}

// -------------------------------------------------------------------

// PlayerDigCardResponse

// -------------------------------------------------------------------

// ApplyDropRequest

// optional int32 userId = 1;
inline bool ApplyDropRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyDropRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyDropRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDropRequest.userId)
  return userid_;
}
inline void ApplyDropRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDropRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyDropRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyDropRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyDropRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDropRequest.roomId)
  return roomid_;
}
inline void ApplyDropRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDropRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyDropResponse

// -------------------------------------------------------------------

// PlayerDropRequest

// optional int32 userId = 1;
inline bool PlayerDropRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDropRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerDropRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDropRequest.userId)
  return userid_;
}
inline void PlayerDropRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDropRequest.userId)
}

// optional int32 dropScore = 2;
inline bool PlayerDropRequest::has_dropscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerDropRequest::clear_dropscore() {
  dropscore_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PlayerDropRequest::dropscore() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDropRequest.dropScore)
  return dropscore_;
}
inline void PlayerDropRequest::set_dropscore(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  dropscore_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDropRequest.dropScore)
}

// optional int64 dropChips = 3;
inline bool PlayerDropRequest::has_dropchips() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerDropRequest::clear_dropchips() {
  dropchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerDropRequest::dropchips() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDropRequest.dropChips)
  return dropchips_;
}
inline void PlayerDropRequest::set_dropchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  dropchips_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDropRequest.dropChips)
}

// optional .GameMsg.MsgCard dropCard = 4;
inline bool PlayerDropRequest::has_dropcard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDropRequest::clear_dropcard() {
  if (dropcard_ != NULL) dropcard_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& PlayerDropRequest::dropcard() const {
  const ::GameMsg::MsgCard* p = dropcard_;
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDropRequest.dropCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* PlayerDropRequest::release_dropcard() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerDropRequest.dropCard)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = dropcard_;
  dropcard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* PlayerDropRequest::mutable_dropcard() {
  _has_bits_[0] |= 0x00000001u;
  if (dropcard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    dropcard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerDropRequest.dropCard)
  return dropcard_;
}
inline void PlayerDropRequest::set_allocated_dropcard(::GameMsg::MsgCard* dropcard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dropcard_;
  }
  if (dropcard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dropcard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dropcard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dropcard_ = dropcard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerDropRequest.dropCard)
}

// -------------------------------------------------------------------

// PlayerDropResponse

// -------------------------------------------------------------------

// ApplyDeclareRequest

// optional int32 userId = 1;
inline bool ApplyDeclareRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyDeclareRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyDeclareRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDeclareRequest.userId)
  return userid_;
}
inline void ApplyDeclareRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDeclareRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyDeclareRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyDeclareRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyDeclareRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDeclareRequest.roomId)
  return roomid_;
}
inline void ApplyDeclareRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyDeclareRequest.roomId)
}

// optional .GameMsg.MsgCard declareCard = 3;
inline bool ApplyDeclareRequest::has_declarecard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyDeclareRequest::clear_declarecard() {
  if (declarecard_ != NULL) declarecard_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& ApplyDeclareRequest::declarecard() const {
  const ::GameMsg::MsgCard* p = declarecard_;
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDeclareRequest.declareCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* ApplyDeclareRequest::release_declarecard() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyDeclareRequest.declareCard)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = declarecard_;
  declarecard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* ApplyDeclareRequest::mutable_declarecard() {
  _has_bits_[0] |= 0x00000001u;
  if (declarecard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    declarecard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyDeclareRequest.declareCard)
  return declarecard_;
}
inline void ApplyDeclareRequest::set_allocated_declarecard(::GameMsg::MsgCard* declarecard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete declarecard_;
  }
  if (declarecard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      declarecard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, declarecard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  declarecard_ = declarecard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyDeclareRequest.declareCard)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 4;
inline int ApplyDeclareRequest::cardgroup_size() const {
  return cardgroup_.size();
}
inline void ApplyDeclareRequest::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* ApplyDeclareRequest::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyDeclareRequest.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
ApplyDeclareRequest::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyDeclareRequest.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& ApplyDeclareRequest::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyDeclareRequest.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* ApplyDeclareRequest::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.ApplyDeclareRequest.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
ApplyDeclareRequest::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyDeclareRequest.cardGroup)
  return cardgroup_;
}

// -------------------------------------------------------------------

// ApplyDeclareResponse

// -------------------------------------------------------------------

// PlayerDeclareRequest

// optional int32 userId = 1;
inline bool PlayerDeclareRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDeclareRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerDeclareRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDeclareRequest.userId)
  return userid_;
}
inline void PlayerDeclareRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerDeclareRequest.userId)
}

// optional .GameMsg.MsgCard declareCard = 2;
inline bool PlayerDeclareRequest::has_declarecard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDeclareRequest::clear_declarecard() {
  if (declarecard_ != NULL) declarecard_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& PlayerDeclareRequest::declarecard() const {
  const ::GameMsg::MsgCard* p = declarecard_;
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDeclareRequest.declareCard)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* PlayerDeclareRequest::release_declarecard() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerDeclareRequest.declareCard)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = declarecard_;
  declarecard_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* PlayerDeclareRequest::mutable_declarecard() {
  _has_bits_[0] |= 0x00000001u;
  if (declarecard_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    declarecard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerDeclareRequest.declareCard)
  return declarecard_;
}
inline void PlayerDeclareRequest::set_allocated_declarecard(::GameMsg::MsgCard* declarecard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete declarecard_;
  }
  if (declarecard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      declarecard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, declarecard, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  declarecard_ = declarecard;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerDeclareRequest.declareCard)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 3;
inline int PlayerDeclareRequest::cardgroup_size() const {
  return cardgroup_.size();
}
inline void PlayerDeclareRequest::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* PlayerDeclareRequest::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerDeclareRequest.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
PlayerDeclareRequest::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PlayerDeclareRequest.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& PlayerDeclareRequest::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerDeclareRequest.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* PlayerDeclareRequest::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.PlayerDeclareRequest.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
PlayerDeclareRequest::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.PlayerDeclareRequest.cardGroup)
  return cardgroup_;
}

// -------------------------------------------------------------------

// PlayerDeclareResponse

// -------------------------------------------------------------------

// ApplyLoseDeclareRequest

// optional int32 userId = 1;
inline bool ApplyLoseDeclareRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyLoseDeclareRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyLoseDeclareRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyLoseDeclareRequest.userId)
  return userid_;
}
inline void ApplyLoseDeclareRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyLoseDeclareRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyLoseDeclareRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyLoseDeclareRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyLoseDeclareRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyLoseDeclareRequest.roomId)
  return roomid_;
}
inline void ApplyLoseDeclareRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyLoseDeclareRequest.roomId)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 3;
inline int ApplyLoseDeclareRequest::cardgroup_size() const {
  return cardgroup_.size();
}
inline void ApplyLoseDeclareRequest::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* ApplyLoseDeclareRequest::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyLoseDeclareRequest.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
ApplyLoseDeclareRequest::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyLoseDeclareRequest.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& ApplyLoseDeclareRequest::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyLoseDeclareRequest.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* ApplyLoseDeclareRequest::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.ApplyLoseDeclareRequest.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
ApplyLoseDeclareRequest::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyLoseDeclareRequest.cardGroup)
  return cardgroup_;
}

// -------------------------------------------------------------------

// ApplyLoseDeclareResponse

// -------------------------------------------------------------------

// PlayerLoseDeclareRequest

// optional int32 userId = 1;
inline bool PlayerLoseDeclareRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoseDeclareRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerLoseDeclareRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerLoseDeclareRequest.userId)
  return userid_;
}
inline void PlayerLoseDeclareRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerLoseDeclareRequest.userId)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 2;
inline int PlayerLoseDeclareRequest::cardgroup_size() const {
  return cardgroup_.size();
}
inline void PlayerLoseDeclareRequest::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* PlayerLoseDeclareRequest::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerLoseDeclareRequest.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
PlayerLoseDeclareRequest::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.PlayerLoseDeclareRequest.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& PlayerLoseDeclareRequest::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerLoseDeclareRequest.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* PlayerLoseDeclareRequest::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.PlayerLoseDeclareRequest.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
PlayerLoseDeclareRequest::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.PlayerLoseDeclareRequest.cardGroup)
  return cardgroup_;
}

// optional int32 score = 3;
inline bool PlayerLoseDeclareRequest::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLoseDeclareRequest::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerLoseDeclareRequest::score() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerLoseDeclareRequest.score)
  return score_;
}
inline void PlayerLoseDeclareRequest::set_score(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerLoseDeclareRequest.score)
}

// optional int64 chips = 4;
inline bool PlayerLoseDeclareRequest::has_chips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLoseDeclareRequest::clear_chips() {
  chips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerLoseDeclareRequest::chips() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerLoseDeclareRequest.chips)
  return chips_;
}
inline void PlayerLoseDeclareRequest::set_chips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  chips_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerLoseDeclareRequest.chips)
}

// -------------------------------------------------------------------

// PlayerLoseDeclareResponse

// -------------------------------------------------------------------

// ApplyPostCardRequest

// optional int32 userId = 1;
inline bool ApplyPostCardRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyPostCardRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyPostCardRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardRequest.userId)
  return userid_;
}
inline void ApplyPostCardRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPostCardRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyPostCardRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyPostCardRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ApplyPostCardRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardRequest.roomId)
  return roomid_;
}
inline void ApplyPostCardRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPostCardRequest.roomId)
}

// optional .GameMsg.MsgCard card = 3;
inline bool ApplyPostCardRequest::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyPostCardRequest::clear_card() {
  if (card_ != NULL) card_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& ApplyPostCardRequest::card() const {
  const ::GameMsg::MsgCard* p = card_;
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardRequest.card)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* ApplyPostCardRequest::release_card() {
  // @@protoc_insertion_point(field_release:GameMsg.ApplyPostCardRequest.card)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = card_;
  card_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* ApplyPostCardRequest::mutable_card() {
  _has_bits_[0] |= 0x00000001u;
  if (card_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    card_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyPostCardRequest.card)
  return card_;
}
inline void ApplyPostCardRequest::set_allocated_card(::GameMsg::MsgCard* card) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete card_;
  }
  if (card) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      card = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.ApplyPostCardRequest.card)
}

// optional int32 appScore = 4 [default = -1];
inline bool ApplyPostCardRequest::has_appscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyPostCardRequest::clear_appscore() {
  appscore_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ApplyPostCardRequest::appscore() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardRequest.appScore)
  return appscore_;
}
inline void ApplyPostCardRequest::set_appscore(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  appscore_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyPostCardRequest.appScore)
}

// -------------------------------------------------------------------

// ApplyPostCardResponse

// repeated .GameMsg.MsgCard handCards = 1;
inline int ApplyPostCardResponse::handcards_size() const {
  return handcards_.size();
}
inline void ApplyPostCardResponse::clear_handcards() {
  handcards_.Clear();
}
inline ::GameMsg::MsgCard* ApplyPostCardResponse::mutable_handcards(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyPostCardResponse.handCards)
  return handcards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
ApplyPostCardResponse::mutable_handcards() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyPostCardResponse.handCards)
  return &handcards_;
}
inline const ::GameMsg::MsgCard& ApplyPostCardResponse::handcards(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardResponse.handCards)
  return handcards_.Get(index);
}
inline ::GameMsg::MsgCard* ApplyPostCardResponse::add_handcards() {
  // @@protoc_insertion_point(field_add:GameMsg.ApplyPostCardResponse.handCards)
  return handcards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
ApplyPostCardResponse::handcards() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyPostCardResponse.handCards)
  return handcards_;
}

// repeated .GameMsg.MsgCard poolCards = 2;
inline int ApplyPostCardResponse::poolcards_size() const {
  return poolcards_.size();
}
inline void ApplyPostCardResponse::clear_poolcards() {
  poolcards_.Clear();
}
inline ::GameMsg::MsgCard* ApplyPostCardResponse::mutable_poolcards(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.ApplyPostCardResponse.poolCards)
  return poolcards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >*
ApplyPostCardResponse::mutable_poolcards() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.ApplyPostCardResponse.poolCards)
  return &poolcards_;
}
inline const ::GameMsg::MsgCard& ApplyPostCardResponse::poolcards(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyPostCardResponse.poolCards)
  return poolcards_.Get(index);
}
inline ::GameMsg::MsgCard* ApplyPostCardResponse::add_poolcards() {
  // @@protoc_insertion_point(field_add:GameMsg.ApplyPostCardResponse.poolCards)
  return poolcards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::MsgCard >&
ApplyPostCardResponse::poolcards() const {
  // @@protoc_insertion_point(field_list:GameMsg.ApplyPostCardResponse.poolCards)
  return poolcards_;
}

// -------------------------------------------------------------------

// PlayerPostCardRequest

// optional int32 userId = 1;
inline bool PlayerPostCardRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerPostCardRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerPostCardRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPostCardRequest.userId)
  return userid_;
}
inline void PlayerPostCardRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerPostCardRequest.userId)
}

// optional .GameMsg.MsgCard card = 2;
inline bool PlayerPostCardRequest::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerPostCardRequest::clear_card() {
  if (card_ != NULL) card_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::GameMsg::MsgCard& PlayerPostCardRequest::card() const {
  const ::GameMsg::MsgCard* p = card_;
  // @@protoc_insertion_point(field_get:GameMsg.PlayerPostCardRequest.card)
  return p != NULL ? *p : *reinterpret_cast<const ::GameMsg::MsgCard*>(
      &::GameMsg::_MsgCard_default_instance_);
}
inline ::GameMsg::MsgCard* PlayerPostCardRequest::release_card() {
  // @@protoc_insertion_point(field_release:GameMsg.PlayerPostCardRequest.card)
  _has_bits_[0] &= ~0x00000001u;
  ::GameMsg::MsgCard* temp = card_;
  card_ = NULL;
  return temp;
}
inline ::GameMsg::MsgCard* PlayerPostCardRequest::mutable_card() {
  _has_bits_[0] |= 0x00000001u;
  if (card_ == NULL) {
    auto* p = CreateMaybeMessage<::GameMsg::MsgCard>(GetArenaNoVirtual());
    card_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GameMsg.PlayerPostCardRequest.card)
  return card_;
}
inline void PlayerPostCardRequest::set_allocated_card(::GameMsg::MsgCard* card) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete card_;
  }
  if (card) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      card = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:GameMsg.PlayerPostCardRequest.card)
}

// -------------------------------------------------------------------

// PlayerPostCardResponse

// -------------------------------------------------------------------

// LoserInfo

// optional int32 userId = 1;
inline bool LoserInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoserInfo::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 LoserInfo::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.userId)
  return userid_;
}
inline void LoserInfo::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.LoserInfo.userId)
}

// optional int64 loseAccount = 2;
inline bool LoserInfo::has_loseaccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoserInfo::clear_loseaccount() {
  loseaccount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 LoserInfo::loseaccount() const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.loseAccount)
  return loseaccount_;
}
inline void LoserInfo::set_loseaccount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  loseaccount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.LoserInfo.loseAccount)
}

// repeated .GameMsg.PB_CardGroup cardGroup = 3;
inline int LoserInfo::cardgroup_size() const {
  return cardgroup_.size();
}
inline void LoserInfo::clear_cardgroup() {
  cardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* LoserInfo::mutable_cardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.LoserInfo.cardGroup)
  return cardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
LoserInfo::mutable_cardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.LoserInfo.cardGroup)
  return &cardgroup_;
}
inline const ::GameMsg::PB_CardGroup& LoserInfo::cardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.cardGroup)
  return cardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* LoserInfo::add_cardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.LoserInfo.cardGroup)
  return cardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
LoserInfo::cardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.LoserInfo.cardGroup)
  return cardgroup_;
}

// optional int32 score = 4;
inline bool LoserInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoserInfo::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 LoserInfo::score() const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.score)
  return score_;
}
inline void LoserInfo::set_score(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.LoserInfo.score)
}

// optional int32 isDrop = 5;
inline bool LoserInfo::has_isdrop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoserInfo::clear_isdrop() {
  isdrop_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 LoserInfo::isdrop() const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.isDrop)
  return isdrop_;
}
inline void LoserInfo::set_isdrop(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  isdrop_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.LoserInfo.isDrop)
}

// optional int32 cardScore = 6;
inline bool LoserInfo::has_cardscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoserInfo::clear_cardscore() {
  cardscore_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 LoserInfo::cardscore() const {
  // @@protoc_insertion_point(field_get:GameMsg.LoserInfo.cardScore)
  return cardscore_;
}
inline void LoserInfo::set_cardscore(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  cardscore_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.LoserInfo.cardScore)
}

// -------------------------------------------------------------------

// GameOverRequest

// optional int32 winnerId = 1;
inline bool GameOverRequest::has_winnerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameOverRequest::clear_winnerid() {
  winnerid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 GameOverRequest::winnerid() const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.winnerId)
  return winnerid_;
}
inline void GameOverRequest::set_winnerid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  winnerid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.GameOverRequest.winnerId)
}

// optional int64 winAccount = 2;
inline bool GameOverRequest::has_winaccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameOverRequest::clear_winaccount() {
  winaccount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 GameOverRequest::winaccount() const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.winAccount)
  return winaccount_;
}
inline void GameOverRequest::set_winaccount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  winaccount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.GameOverRequest.winAccount)
}

// repeated .GameMsg.PB_CardGroup winnerCardGroup = 3;
inline int GameOverRequest::winnercardgroup_size() const {
  return winnercardgroup_.size();
}
inline void GameOverRequest::clear_winnercardgroup() {
  winnercardgroup_.Clear();
}
inline ::GameMsg::PB_CardGroup* GameOverRequest::mutable_winnercardgroup(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.GameOverRequest.winnerCardGroup)
  return winnercardgroup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >*
GameOverRequest::mutable_winnercardgroup() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.GameOverRequest.winnerCardGroup)
  return &winnercardgroup_;
}
inline const ::GameMsg::PB_CardGroup& GameOverRequest::winnercardgroup(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.winnerCardGroup)
  return winnercardgroup_.Get(index);
}
inline ::GameMsg::PB_CardGroup* GameOverRequest::add_winnercardgroup() {
  // @@protoc_insertion_point(field_add:GameMsg.GameOverRequest.winnerCardGroup)
  return winnercardgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PB_CardGroup >&
GameOverRequest::winnercardgroup() const {
  // @@protoc_insertion_point(field_list:GameMsg.GameOverRequest.winnerCardGroup)
  return winnercardgroup_;
}

// repeated .GameMsg.LoserInfo loserInfo = 4;
inline int GameOverRequest::loserinfo_size() const {
  return loserinfo_.size();
}
inline void GameOverRequest::clear_loserinfo() {
  loserinfo_.Clear();
}
inline ::GameMsg::LoserInfo* GameOverRequest::mutable_loserinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.GameOverRequest.loserInfo)
  return loserinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::LoserInfo >*
GameOverRequest::mutable_loserinfo() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.GameOverRequest.loserInfo)
  return &loserinfo_;
}
inline const ::GameMsg::LoserInfo& GameOverRequest::loserinfo(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.loserInfo)
  return loserinfo_.Get(index);
}
inline ::GameMsg::LoserInfo* GameOverRequest::add_loserinfo() {
  // @@protoc_insertion_point(field_add:GameMsg.GameOverRequest.loserInfo)
  return loserinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::LoserInfo >&
GameOverRequest::loserinfo() const {
  // @@protoc_insertion_point(field_list:GameMsg.GameOverRequest.loserInfo)
  return loserinfo_;
}

// repeated .GameMsg.PlayerChips playerChips = 5;
inline int GameOverRequest::playerchips_size() const {
  return playerchips_.size();
}
inline void GameOverRequest::clear_playerchips() {
  playerchips_.Clear();
}
inline ::GameMsg::PlayerChips* GameOverRequest::mutable_playerchips(int index) {
  // @@protoc_insertion_point(field_mutable:GameMsg.GameOverRequest.playerChips)
  return playerchips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerChips >*
GameOverRequest::mutable_playerchips() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.GameOverRequest.playerChips)
  return &playerchips_;
}
inline const ::GameMsg::PlayerChips& GameOverRequest::playerchips(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.playerChips)
  return playerchips_.Get(index);
}
inline ::GameMsg::PlayerChips* GameOverRequest::add_playerchips() {
  // @@protoc_insertion_point(field_add:GameMsg.GameOverRequest.playerChips)
  return playerchips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMsg::PlayerChips >&
GameOverRequest::playerchips() const {
  // @@protoc_insertion_point(field_list:GameMsg.GameOverRequest.playerChips)
  return playerchips_;
}

// optional int32 winnerScore = 6;
inline bool GameOverRequest::has_winnerscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameOverRequest::clear_winnerscore() {
  winnerscore_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 GameOverRequest::winnerscore() const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.winnerScore)
  return winnerscore_;
}
inline void GameOverRequest::set_winnerscore(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  winnerscore_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.GameOverRequest.winnerScore)
}

// optional int32 gameoverType = 7;
inline bool GameOverRequest::has_gameovertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameOverRequest::clear_gameovertype() {
  gameovertype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 GameOverRequest::gameovertype() const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.gameoverType)
  return gameovertype_;
}
inline void GameOverRequest::set_gameovertype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  gameovertype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.GameOverRequest.gameoverType)
}

// optional int32 winnerCardScore = 8;
inline bool GameOverRequest::has_winnercardscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameOverRequest::clear_winnercardscore() {
  winnercardscore_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 GameOverRequest::winnercardscore() const {
  // @@protoc_insertion_point(field_get:GameMsg.GameOverRequest.winnerCardScore)
  return winnercardscore_;
}
inline void GameOverRequest::set_winnercardscore(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  winnercardscore_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.GameOverRequest.winnerCardScore)
}

// -------------------------------------------------------------------

// GameOverResponse

// -------------------------------------------------------------------

// ApplyRoomStatusRequest

// optional int32 userId = 1;
inline bool ApplyRoomStatusRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyRoomStatusRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyRoomStatusRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyRoomStatusRequest.userId)
  return userid_;
}
inline void ApplyRoomStatusRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyRoomStatusRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyRoomStatusRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyRoomStatusRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyRoomStatusRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyRoomStatusRequest.roomId)
  return roomid_;
}
inline void ApplyRoomStatusRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyRoomStatusRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyRoomStatusResponse

// optional int32 status = 2;
inline bool ApplyRoomStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyRoomStatusResponse::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyRoomStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyRoomStatusResponse.status)
  return status_;
}
inline void ApplyRoomStatusResponse::set_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  status_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyRoomStatusResponse.status)
}

// -------------------------------------------------------------------

// NotifyWaitGameRequest

// optional int32 flag = 1;
inline bool NotifyWaitGameRequest::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyWaitGameRequest::clear_flag() {
  flag_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 NotifyWaitGameRequest::flag() const {
  // @@protoc_insertion_point(field_get:GameMsg.NotifyWaitGameRequest.flag)
  return flag_;
}
inline void NotifyWaitGameRequest::set_flag(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  flag_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.NotifyWaitGameRequest.flag)
}

// optional int32 seconds = 2;
inline bool NotifyWaitGameRequest::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyWaitGameRequest::clear_seconds() {
  seconds_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 NotifyWaitGameRequest::seconds() const {
  // @@protoc_insertion_point(field_get:GameMsg.NotifyWaitGameRequest.seconds)
  return seconds_;
}
inline void NotifyWaitGameRequest::set_seconds(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  seconds_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.NotifyWaitGameRequest.seconds)
}

// -------------------------------------------------------------------

// NotifyWaitGameResponse

// -------------------------------------------------------------------

// ShuffleCardRequest

// optional int32 poolCardCount = 1;
inline bool ShuffleCardRequest::has_poolcardcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShuffleCardRequest::clear_poolcardcount() {
  poolcardcount_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ShuffleCardRequest::poolcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.ShuffleCardRequest.poolCardCount)
  return poolcardcount_;
}
inline void ShuffleCardRequest::set_poolcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  poolcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ShuffleCardRequest.poolCardCount)
}

// optional int32 bottomCardCount = 2;
inline bool ShuffleCardRequest::has_bottomcardcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShuffleCardRequest::clear_bottomcardcount() {
  bottomcardcount_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ShuffleCardRequest::bottomcardcount() const {
  // @@protoc_insertion_point(field_get:GameMsg.ShuffleCardRequest.bottomCardCount)
  return bottomcardcount_;
}
inline void ShuffleCardRequest::set_bottomcardcount(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  bottomcardcount_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ShuffleCardRequest.bottomCardCount)
}

// -------------------------------------------------------------------

// ShuffleCardResponse

// -------------------------------------------------------------------

// ApplyCloseAccountBoxRequest

// optional int32 userId = 1;
inline bool ApplyCloseAccountBoxRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyCloseAccountBoxRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ApplyCloseAccountBoxRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyCloseAccountBoxRequest.userId)
  return userid_;
}
inline void ApplyCloseAccountBoxRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyCloseAccountBoxRequest.userId)
}

// optional int32 roomId = 2;
inline bool ApplyCloseAccountBoxRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyCloseAccountBoxRequest::clear_roomid() {
  roomid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ApplyCloseAccountBoxRequest::roomid() const {
  // @@protoc_insertion_point(field_get:GameMsg.ApplyCloseAccountBoxRequest.roomId)
  return roomid_;
}
inline void ApplyCloseAccountBoxRequest::set_roomid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.ApplyCloseAccountBoxRequest.roomId)
}

// -------------------------------------------------------------------

// ApplyCloseAccountBoxResponse

// -------------------------------------------------------------------

// PlayerCloseAccountBoxRequest

// optional int32 userId = 1;
inline bool PlayerCloseAccountBoxRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCloseAccountBoxRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerCloseAccountBoxRequest::userid() const {
  // @@protoc_insertion_point(field_get:GameMsg.PlayerCloseAccountBoxRequest.userId)
  return userid_;
}
inline void PlayerCloseAccountBoxRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.PlayerCloseAccountBoxRequest.userId)
}

// -------------------------------------------------------------------

// PlayerCloseAccountBoxResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GameMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GameMsg::PB_CardGroup_EnumGroupType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::PB_CardGroup_EnumGroupType>() {
  return ::GameMsg::PB_CardGroup_EnumGroupType_descriptor();
}
template <> struct is_proto_enum< ::GameMsg::PlayerInfo_EnumPlayerStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::PlayerInfo_EnumPlayerStatus>() {
  return ::GameMsg::PlayerInfo_EnumPlayerStatus_descriptor();
}
template <> struct is_proto_enum< ::GameMsg::FlushRoomRequest_EnumGameStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::FlushRoomRequest_EnumGameStatus>() {
  return ::GameMsg::FlushRoomRequest_EnumGameStatus_descriptor();
}
template <> struct is_proto_enum< ::GameMsg::PlayerStandUpRequest_StandReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::PlayerStandUpRequest_StandReason>() {
  return ::GameMsg::PlayerStandUpRequest_StandReason_descriptor();
}
template <> struct is_proto_enum< ::GameMsg::EnumPokerColor> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::EnumPokerColor>() {
  return ::GameMsg::EnumPokerColor_descriptor();
}
template <> struct is_proto_enum< ::GameMsg::EnumPokerPoint> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsg::EnumPokerPoint>() {
  return ::GameMsg::EnumPokerPoint_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_GameMsg_2eproto
