// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LobbyMsg.proto

#ifndef PROTOBUF_INCLUDED_LobbyMsg_2eproto
#define PROTOBUF_INCLUDED_LobbyMsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_LobbyMsg_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_LobbyMsg_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_LobbyMsg_2eproto();
namespace LobbyMsg {
class PlayerCharmUpgradRequest;
class PlayerCharmUpgradRequestDefaultTypeInternal;
extern PlayerCharmUpgradRequestDefaultTypeInternal _PlayerCharmUpgradRequest_default_instance_;
class PlayerCharmUpgradResponse;
class PlayerCharmUpgradResponseDefaultTypeInternal;
extern PlayerCharmUpgradResponseDefaultTypeInternal _PlayerCharmUpgradResponse_default_instance_;
class PlayerChipsChangeRequest;
class PlayerChipsChangeRequestDefaultTypeInternal;
extern PlayerChipsChangeRequestDefaultTypeInternal _PlayerChipsChangeRequest_default_instance_;
class PlayerChipsChangeResponse;
class PlayerChipsChangeResponseDefaultTypeInternal;
extern PlayerChipsChangeResponseDefaultTypeInternal _PlayerChipsChangeResponse_default_instance_;
class PlayerCoinsChangeRequest;
class PlayerCoinsChangeRequestDefaultTypeInternal;
extern PlayerCoinsChangeRequestDefaultTypeInternal _PlayerCoinsChangeRequest_default_instance_;
class PlayerCoinsChangeResponse;
class PlayerCoinsChangeResponseDefaultTypeInternal;
extern PlayerCoinsChangeResponseDefaultTypeInternal _PlayerCoinsChangeResponse_default_instance_;
class PlayerLoginElsewhereRequest;
class PlayerLoginElsewhereRequestDefaultTypeInternal;
extern PlayerLoginElsewhereRequestDefaultTypeInternal _PlayerLoginElsewhereRequest_default_instance_;
class PlayerLoginElsewhereResponse;
class PlayerLoginElsewhereResponseDefaultTypeInternal;
extern PlayerLoginElsewhereResponseDefaultTypeInternal _PlayerLoginElsewhereResponse_default_instance_;
class PlayerUpgradeRequest;
class PlayerUpgradeRequestDefaultTypeInternal;
extern PlayerUpgradeRequestDefaultTypeInternal _PlayerUpgradeRequest_default_instance_;
class PlayerUpgradeResponse;
class PlayerUpgradeResponseDefaultTypeInternal;
extern PlayerUpgradeResponseDefaultTypeInternal _PlayerUpgradeResponse_default_instance_;
class UserBankruptRequest;
class UserBankruptRequestDefaultTypeInternal;
extern UserBankruptRequestDefaultTypeInternal _UserBankruptRequest_default_instance_;
class UserBankruptResponse;
class UserBankruptResponseDefaultTypeInternal;
extern UserBankruptResponseDefaultTypeInternal _UserBankruptResponse_default_instance_;
class UserCommNotifyRequest;
class UserCommNotifyRequestDefaultTypeInternal;
extern UserCommNotifyRequestDefaultTypeInternal _UserCommNotifyRequest_default_instance_;
class UserCommNotifyResponse;
class UserCommNotifyResponseDefaultTypeInternal;
extern UserCommNotifyResponseDefaultTypeInternal _UserCommNotifyResponse_default_instance_;
class UserTokenLoginDcenterRequest;
class UserTokenLoginDcenterRequestDefaultTypeInternal;
extern UserTokenLoginDcenterRequestDefaultTypeInternal _UserTokenLoginDcenterRequest_default_instance_;
class UserTokenLoginDcenterResponse;
class UserTokenLoginDcenterResponseDefaultTypeInternal;
extern UserTokenLoginDcenterResponseDefaultTypeInternal _UserTokenLoginDcenterResponse_default_instance_;
}  // namespace LobbyMsg
namespace google {
namespace protobuf {
template<> ::LobbyMsg::PlayerCharmUpgradRequest* Arena::CreateMaybeMessage<::LobbyMsg::PlayerCharmUpgradRequest>(Arena*);
template<> ::LobbyMsg::PlayerCharmUpgradResponse* Arena::CreateMaybeMessage<::LobbyMsg::PlayerCharmUpgradResponse>(Arena*);
template<> ::LobbyMsg::PlayerChipsChangeRequest* Arena::CreateMaybeMessage<::LobbyMsg::PlayerChipsChangeRequest>(Arena*);
template<> ::LobbyMsg::PlayerChipsChangeResponse* Arena::CreateMaybeMessage<::LobbyMsg::PlayerChipsChangeResponse>(Arena*);
template<> ::LobbyMsg::PlayerCoinsChangeRequest* Arena::CreateMaybeMessage<::LobbyMsg::PlayerCoinsChangeRequest>(Arena*);
template<> ::LobbyMsg::PlayerCoinsChangeResponse* Arena::CreateMaybeMessage<::LobbyMsg::PlayerCoinsChangeResponse>(Arena*);
template<> ::LobbyMsg::PlayerLoginElsewhereRequest* Arena::CreateMaybeMessage<::LobbyMsg::PlayerLoginElsewhereRequest>(Arena*);
template<> ::LobbyMsg::PlayerLoginElsewhereResponse* Arena::CreateMaybeMessage<::LobbyMsg::PlayerLoginElsewhereResponse>(Arena*);
template<> ::LobbyMsg::PlayerUpgradeRequest* Arena::CreateMaybeMessage<::LobbyMsg::PlayerUpgradeRequest>(Arena*);
template<> ::LobbyMsg::PlayerUpgradeResponse* Arena::CreateMaybeMessage<::LobbyMsg::PlayerUpgradeResponse>(Arena*);
template<> ::LobbyMsg::UserBankruptRequest* Arena::CreateMaybeMessage<::LobbyMsg::UserBankruptRequest>(Arena*);
template<> ::LobbyMsg::UserBankruptResponse* Arena::CreateMaybeMessage<::LobbyMsg::UserBankruptResponse>(Arena*);
template<> ::LobbyMsg::UserCommNotifyRequest* Arena::CreateMaybeMessage<::LobbyMsg::UserCommNotifyRequest>(Arena*);
template<> ::LobbyMsg::UserCommNotifyResponse* Arena::CreateMaybeMessage<::LobbyMsg::UserCommNotifyResponse>(Arena*);
template<> ::LobbyMsg::UserTokenLoginDcenterRequest* Arena::CreateMaybeMessage<::LobbyMsg::UserTokenLoginDcenterRequest>(Arena*);
template<> ::LobbyMsg::UserTokenLoginDcenterResponse* Arena::CreateMaybeMessage<::LobbyMsg::UserTokenLoginDcenterResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace LobbyMsg {

enum PlayerChipsChangeRequest_EnumChipChangeReason {
  PlayerChipsChangeRequest_EnumChipChangeReason_refresh_chips = 0,
  PlayerChipsChangeRequest_EnumChipChangeReason_game_buyin = 1,
  PlayerChipsChangeRequest_EnumChipChangeReason_game_give_back = 2,
  PlayerChipsChangeRequest_EnumChipChangeReason_game_start_bet = 3,
  PlayerChipsChangeRequest_EnumChipChangeReason_game_timer_award = 4,
  PlayerChipsChangeRequest_EnumChipChangeReason_login_award = 5,
  PlayerChipsChangeRequest_EnumChipChangeReason_play_task_award = 6,
  PlayerChipsChangeRequest_EnumChipChangeReason_goldcap_task_award = 7,
  PlayerChipsChangeRequest_EnumChipChangeReason_sign_award = 8,
  PlayerChipsChangeRequest_EnumChipChangeReason_friend_present = 9,
  PlayerChipsChangeRequest_EnumChipChangeReason_bankrupt_relief = 10,
  PlayerChipsChangeRequest_EnumChipChangeReason_upgrade_award = 11,
  PlayerChipsChangeRequest_EnumChipChangeReason_register_award = 12,
  PlayerChipsChangeRequest_EnumChipChangeReason_buy_in_store = 13,
  PlayerChipsChangeRequest_EnumChipChangeReason_buy_gift_cost = 14,
  PlayerChipsChangeRequest_EnumChipChangeReason_buy_gift_failed_return = 15,
  PlayerChipsChangeRequest_EnumChipChangeReason_sale_gift = 16,
  PlayerChipsChangeRequest_EnumChipChangeReason_invite_friend_award = 17,
  PlayerChipsChangeRequest_EnumChipChangeReason_gameover_account = 18,
  PlayerChipsChangeRequest_EnumChipChangeReason_purchase_prop_php = 44,
  PlayerChipsChangeRequest_EnumChipChangeReason_timely_account = 200,
  PlayerChipsChangeRequest_EnumChipChangeReason_botman_chips = 201,
  PlayerChipsChangeRequest_EnumChipChangeReason_game_tips = 202
};
bool PlayerChipsChangeRequest_EnumChipChangeReason_IsValid(int value);
const PlayerChipsChangeRequest_EnumChipChangeReason PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_MIN = PlayerChipsChangeRequest_EnumChipChangeReason_refresh_chips;
const PlayerChipsChangeRequest_EnumChipChangeReason PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_MAX = PlayerChipsChangeRequest_EnumChipChangeReason_game_tips;
const int PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_ARRAYSIZE = PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChipsChangeRequest_EnumChipChangeReason_descriptor();
inline const ::std::string& PlayerChipsChangeRequest_EnumChipChangeReason_Name(PlayerChipsChangeRequest_EnumChipChangeReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChipsChangeRequest_EnumChipChangeReason_descriptor(), value);
}
inline bool PlayerChipsChangeRequest_EnumChipChangeReason_Parse(
    const ::std::string& name, PlayerChipsChangeRequest_EnumChipChangeReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChipsChangeRequest_EnumChipChangeReason>(
    PlayerChipsChangeRequest_EnumChipChangeReason_descriptor(), name, value);
}
enum EnumKickOutReason {
  KICKFOR_LOGIN_ELSEWHERE = 0,
  KICKFOR_SEAL_ACCOUNT = 1
};
bool EnumKickOutReason_IsValid(int value);
const EnumKickOutReason EnumKickOutReason_MIN = KICKFOR_LOGIN_ELSEWHERE;
const EnumKickOutReason EnumKickOutReason_MAX = KICKFOR_SEAL_ACCOUNT;
const int EnumKickOutReason_ARRAYSIZE = EnumKickOutReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumKickOutReason_descriptor();
inline const ::std::string& EnumKickOutReason_Name(EnumKickOutReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumKickOutReason_descriptor(), value);
}
inline bool EnumKickOutReason_Parse(
    const ::std::string& name, EnumKickOutReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumKickOutReason>(
    EnumKickOutReason_descriptor(), name, value);
}
// ===================================================================

class PlayerChipsChangeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerChipsChangeRequest) */ {
 public:
  PlayerChipsChangeRequest();
  virtual ~PlayerChipsChangeRequest();

  PlayerChipsChangeRequest(const PlayerChipsChangeRequest& from);

  inline PlayerChipsChangeRequest& operator=(const PlayerChipsChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChipsChangeRequest(PlayerChipsChangeRequest&& from) noexcept
    : PlayerChipsChangeRequest() {
    *this = ::std::move(from);
  }

  inline PlayerChipsChangeRequest& operator=(PlayerChipsChangeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChipsChangeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChipsChangeRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerChipsChangeRequest*>(
               &_PlayerChipsChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PlayerChipsChangeRequest* other);
  friend void swap(PlayerChipsChangeRequest& a, PlayerChipsChangeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChipsChangeRequest* New() const final {
    return CreateMaybeMessage<PlayerChipsChangeRequest>(NULL);
  }

  PlayerChipsChangeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChipsChangeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChipsChangeRequest& from);
  void MergeFrom(const PlayerChipsChangeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChipsChangeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlayerChipsChangeRequest_EnumChipChangeReason EnumChipChangeReason;
  static const EnumChipChangeReason refresh_chips =
    PlayerChipsChangeRequest_EnumChipChangeReason_refresh_chips;
  static const EnumChipChangeReason game_buyin =
    PlayerChipsChangeRequest_EnumChipChangeReason_game_buyin;
  static const EnumChipChangeReason game_give_back =
    PlayerChipsChangeRequest_EnumChipChangeReason_game_give_back;
  static const EnumChipChangeReason game_start_bet =
    PlayerChipsChangeRequest_EnumChipChangeReason_game_start_bet;
  static const EnumChipChangeReason game_timer_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_game_timer_award;
  static const EnumChipChangeReason login_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_login_award;
  static const EnumChipChangeReason play_task_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_play_task_award;
  static const EnumChipChangeReason goldcap_task_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_goldcap_task_award;
  static const EnumChipChangeReason sign_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_sign_award;
  static const EnumChipChangeReason friend_present =
    PlayerChipsChangeRequest_EnumChipChangeReason_friend_present;
  static const EnumChipChangeReason bankrupt_relief =
    PlayerChipsChangeRequest_EnumChipChangeReason_bankrupt_relief;
  static const EnumChipChangeReason upgrade_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_upgrade_award;
  static const EnumChipChangeReason register_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_register_award;
  static const EnumChipChangeReason buy_in_store =
    PlayerChipsChangeRequest_EnumChipChangeReason_buy_in_store;
  static const EnumChipChangeReason buy_gift_cost =
    PlayerChipsChangeRequest_EnumChipChangeReason_buy_gift_cost;
  static const EnumChipChangeReason buy_gift_failed_return =
    PlayerChipsChangeRequest_EnumChipChangeReason_buy_gift_failed_return;
  static const EnumChipChangeReason sale_gift =
    PlayerChipsChangeRequest_EnumChipChangeReason_sale_gift;
  static const EnumChipChangeReason invite_friend_award =
    PlayerChipsChangeRequest_EnumChipChangeReason_invite_friend_award;
  static const EnumChipChangeReason gameover_account =
    PlayerChipsChangeRequest_EnumChipChangeReason_gameover_account;
  static const EnumChipChangeReason purchase_prop_php =
    PlayerChipsChangeRequest_EnumChipChangeReason_purchase_prop_php;
  static const EnumChipChangeReason timely_account =
    PlayerChipsChangeRequest_EnumChipChangeReason_timely_account;
  static const EnumChipChangeReason botman_chips =
    PlayerChipsChangeRequest_EnumChipChangeReason_botman_chips;
  static const EnumChipChangeReason game_tips =
    PlayerChipsChangeRequest_EnumChipChangeReason_game_tips;
  static inline bool EnumChipChangeReason_IsValid(int value) {
    return PlayerChipsChangeRequest_EnumChipChangeReason_IsValid(value);
  }
  static const EnumChipChangeReason EnumChipChangeReason_MIN =
    PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_MIN;
  static const EnumChipChangeReason EnumChipChangeReason_MAX =
    PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_MAX;
  static const int EnumChipChangeReason_ARRAYSIZE =
    PlayerChipsChangeRequest_EnumChipChangeReason_EnumChipChangeReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnumChipChangeReason_descriptor() {
    return PlayerChipsChangeRequest_EnumChipChangeReason_descriptor();
  }
  static inline const ::std::string& EnumChipChangeReason_Name(EnumChipChangeReason value) {
    return PlayerChipsChangeRequest_EnumChipChangeReason_Name(value);
  }
  static inline bool EnumChipChangeReason_Parse(const ::std::string& name,
      EnumChipChangeReason* value) {
    return PlayerChipsChangeRequest_EnumChipChangeReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 changeReason = 2;
  bool has_changereason() const;
  void clear_changereason();
  static const int kChangeReasonFieldNumber = 2;
  ::google::protobuf::int32 changereason() const;
  void set_changereason(::google::protobuf::int32 value);

  // optional int64 currentChips = 3;
  bool has_currentchips() const;
  void clear_currentchips();
  static const int kCurrentChipsFieldNumber = 3;
  ::google::protobuf::int64 currentchips() const;
  void set_currentchips(::google::protobuf::int64 value);

  // optional int64 maxChips = 4;
  bool has_maxchips() const;
  void clear_maxchips();
  static const int kMaxChipsFieldNumber = 4;
  ::google::protobuf::int64 maxchips() const;
  void set_maxchips(::google::protobuf::int64 value);

  // optional int64 outChipsCount = 5;
  bool has_outchipscount() const;
  void clear_outchipscount();
  static const int kOutChipsCountFieldNumber = 5;
  ::google::protobuf::int64 outchipscount() const;
  void set_outchipscount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerChipsChangeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 changereason_;
  ::google::protobuf::int64 currentchips_;
  ::google::protobuf::int64 maxchips_;
  ::google::protobuf::int64 outchipscount_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerChipsChangeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerChipsChangeResponse) */ {
 public:
  PlayerChipsChangeResponse();
  virtual ~PlayerChipsChangeResponse();

  PlayerChipsChangeResponse(const PlayerChipsChangeResponse& from);

  inline PlayerChipsChangeResponse& operator=(const PlayerChipsChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChipsChangeResponse(PlayerChipsChangeResponse&& from) noexcept
    : PlayerChipsChangeResponse() {
    *this = ::std::move(from);
  }

  inline PlayerChipsChangeResponse& operator=(PlayerChipsChangeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChipsChangeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChipsChangeResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerChipsChangeResponse*>(
               &_PlayerChipsChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PlayerChipsChangeResponse* other);
  friend void swap(PlayerChipsChangeResponse& a, PlayerChipsChangeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChipsChangeResponse* New() const final {
    return CreateMaybeMessage<PlayerChipsChangeResponse>(NULL);
  }

  PlayerChipsChangeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChipsChangeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChipsChangeResponse& from);
  void MergeFrom(const PlayerChipsChangeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChipsChangeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerChipsChangeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCoinsChangeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerCoinsChangeRequest) */ {
 public:
  PlayerCoinsChangeRequest();
  virtual ~PlayerCoinsChangeRequest();

  PlayerCoinsChangeRequest(const PlayerCoinsChangeRequest& from);

  inline PlayerCoinsChangeRequest& operator=(const PlayerCoinsChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCoinsChangeRequest(PlayerCoinsChangeRequest&& from) noexcept
    : PlayerCoinsChangeRequest() {
    *this = ::std::move(from);
  }

  inline PlayerCoinsChangeRequest& operator=(PlayerCoinsChangeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCoinsChangeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCoinsChangeRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerCoinsChangeRequest*>(
               &_PlayerCoinsChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PlayerCoinsChangeRequest* other);
  friend void swap(PlayerCoinsChangeRequest& a, PlayerCoinsChangeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCoinsChangeRequest* New() const final {
    return CreateMaybeMessage<PlayerCoinsChangeRequest>(NULL);
  }

  PlayerCoinsChangeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCoinsChangeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCoinsChangeRequest& from);
  void MergeFrom(const PlayerCoinsChangeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCoinsChangeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 changeReason = 2;
  bool has_changereason() const;
  void clear_changereason();
  static const int kChangeReasonFieldNumber = 2;
  ::google::protobuf::int32 changereason() const;
  void set_changereason(::google::protobuf::int32 value);

  // optional int64 currentCoins = 3;
  bool has_currentcoins() const;
  void clear_currentcoins();
  static const int kCurrentCoinsFieldNumber = 3;
  ::google::protobuf::int64 currentcoins() const;
  void set_currentcoins(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerCoinsChangeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 changereason_;
  ::google::protobuf::int64 currentcoins_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCoinsChangeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerCoinsChangeResponse) */ {
 public:
  PlayerCoinsChangeResponse();
  virtual ~PlayerCoinsChangeResponse();

  PlayerCoinsChangeResponse(const PlayerCoinsChangeResponse& from);

  inline PlayerCoinsChangeResponse& operator=(const PlayerCoinsChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCoinsChangeResponse(PlayerCoinsChangeResponse&& from) noexcept
    : PlayerCoinsChangeResponse() {
    *this = ::std::move(from);
  }

  inline PlayerCoinsChangeResponse& operator=(PlayerCoinsChangeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCoinsChangeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCoinsChangeResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerCoinsChangeResponse*>(
               &_PlayerCoinsChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PlayerCoinsChangeResponse* other);
  friend void swap(PlayerCoinsChangeResponse& a, PlayerCoinsChangeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCoinsChangeResponse* New() const final {
    return CreateMaybeMessage<PlayerCoinsChangeResponse>(NULL);
  }

  PlayerCoinsChangeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCoinsChangeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCoinsChangeResponse& from);
  void MergeFrom(const PlayerCoinsChangeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCoinsChangeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerCoinsChangeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCharmUpgradRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerCharmUpgradRequest) */ {
 public:
  PlayerCharmUpgradRequest();
  virtual ~PlayerCharmUpgradRequest();

  PlayerCharmUpgradRequest(const PlayerCharmUpgradRequest& from);

  inline PlayerCharmUpgradRequest& operator=(const PlayerCharmUpgradRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCharmUpgradRequest(PlayerCharmUpgradRequest&& from) noexcept
    : PlayerCharmUpgradRequest() {
    *this = ::std::move(from);
  }

  inline PlayerCharmUpgradRequest& operator=(PlayerCharmUpgradRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCharmUpgradRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCharmUpgradRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerCharmUpgradRequest*>(
               &_PlayerCharmUpgradRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PlayerCharmUpgradRequest* other);
  friend void swap(PlayerCharmUpgradRequest& a, PlayerCharmUpgradRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCharmUpgradRequest* New() const final {
    return CreateMaybeMessage<PlayerCharmUpgradRequest>(NULL);
  }

  PlayerCharmUpgradRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCharmUpgradRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCharmUpgradRequest& from);
  void MergeFrom(const PlayerCharmUpgradRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCharmUpgradRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 newLevel = 2;
  bool has_newlevel() const;
  void clear_newlevel();
  static const int kNewLevelFieldNumber = 2;
  ::google::protobuf::int32 newlevel() const;
  void set_newlevel(::google::protobuf::int32 value);

  // optional int64 currentCharm = 3;
  bool has_currentcharm() const;
  void clear_currentcharm();
  static const int kCurrentCharmFieldNumber = 3;
  ::google::protobuf::int64 currentcharm() const;
  void set_currentcharm(::google::protobuf::int64 value);

  // optional int64 nextUpgradeCharm = 4;
  bool has_nextupgradecharm() const;
  void clear_nextupgradecharm();
  static const int kNextUpgradeCharmFieldNumber = 4;
  ::google::protobuf::int64 nextupgradecharm() const;
  void set_nextupgradecharm(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerCharmUpgradRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 newlevel_;
  ::google::protobuf::int64 currentcharm_;
  ::google::protobuf::int64 nextupgradecharm_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerCharmUpgradResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerCharmUpgradResponse) */ {
 public:
  PlayerCharmUpgradResponse();
  virtual ~PlayerCharmUpgradResponse();

  PlayerCharmUpgradResponse(const PlayerCharmUpgradResponse& from);

  inline PlayerCharmUpgradResponse& operator=(const PlayerCharmUpgradResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCharmUpgradResponse(PlayerCharmUpgradResponse&& from) noexcept
    : PlayerCharmUpgradResponse() {
    *this = ::std::move(from);
  }

  inline PlayerCharmUpgradResponse& operator=(PlayerCharmUpgradResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerCharmUpgradResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCharmUpgradResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerCharmUpgradResponse*>(
               &_PlayerCharmUpgradResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PlayerCharmUpgradResponse* other);
  friend void swap(PlayerCharmUpgradResponse& a, PlayerCharmUpgradResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCharmUpgradResponse* New() const final {
    return CreateMaybeMessage<PlayerCharmUpgradResponse>(NULL);
  }

  PlayerCharmUpgradResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerCharmUpgradResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerCharmUpgradResponse& from);
  void MergeFrom(const PlayerCharmUpgradResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerCharmUpgradResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerCharmUpgradResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserBankruptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserBankruptRequest) */ {
 public:
  UserBankruptRequest();
  virtual ~UserBankruptRequest();

  UserBankruptRequest(const UserBankruptRequest& from);

  inline UserBankruptRequest& operator=(const UserBankruptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserBankruptRequest(UserBankruptRequest&& from) noexcept
    : UserBankruptRequest() {
    *this = ::std::move(from);
  }

  inline UserBankruptRequest& operator=(UserBankruptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserBankruptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserBankruptRequest* internal_default_instance() {
    return reinterpret_cast<const UserBankruptRequest*>(
               &_UserBankruptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UserBankruptRequest* other);
  friend void swap(UserBankruptRequest& a, UserBankruptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserBankruptRequest* New() const final {
    return CreateMaybeMessage<UserBankruptRequest>(NULL);
  }

  UserBankruptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserBankruptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserBankruptRequest& from);
  void MergeFrom(const UserBankruptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserBankruptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 reliefChips = 2;
  bool has_reliefchips() const;
  void clear_reliefchips();
  static const int kReliefChipsFieldNumber = 2;
  ::google::protobuf::int64 reliefchips() const;
  void set_reliefchips(::google::protobuf::int64 value);

  // optional int32 bankruptTimes = 1;
  bool has_bankrupttimes() const;
  void clear_bankrupttimes();
  static const int kBankruptTimesFieldNumber = 1;
  ::google::protobuf::int32 bankrupttimes() const;
  void set_bankrupttimes(::google::protobuf::int32 value);

  // optional int32 awardTimes = 3;
  bool has_awardtimes() const;
  void clear_awardtimes();
  static const int kAwardTimesFieldNumber = 3;
  ::google::protobuf::int32 awardtimes() const;
  void set_awardtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserBankruptRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 reliefchips_;
  ::google::protobuf::int32 bankrupttimes_;
  ::google::protobuf::int32 awardtimes_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserBankruptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserBankruptResponse) */ {
 public:
  UserBankruptResponse();
  virtual ~UserBankruptResponse();

  UserBankruptResponse(const UserBankruptResponse& from);

  inline UserBankruptResponse& operator=(const UserBankruptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserBankruptResponse(UserBankruptResponse&& from) noexcept
    : UserBankruptResponse() {
    *this = ::std::move(from);
  }

  inline UserBankruptResponse& operator=(UserBankruptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserBankruptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserBankruptResponse* internal_default_instance() {
    return reinterpret_cast<const UserBankruptResponse*>(
               &_UserBankruptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UserBankruptResponse* other);
  friend void swap(UserBankruptResponse& a, UserBankruptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserBankruptResponse* New() const final {
    return CreateMaybeMessage<UserBankruptResponse>(NULL);
  }

  UserBankruptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserBankruptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserBankruptResponse& from);
  void MergeFrom(const UserBankruptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserBankruptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserBankruptResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserCommNotifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserCommNotifyRequest) */ {
 public:
  UserCommNotifyRequest();
  virtual ~UserCommNotifyRequest();

  UserCommNotifyRequest(const UserCommNotifyRequest& from);

  inline UserCommNotifyRequest& operator=(const UserCommNotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCommNotifyRequest(UserCommNotifyRequest&& from) noexcept
    : UserCommNotifyRequest() {
    *this = ::std::move(from);
  }

  inline UserCommNotifyRequest& operator=(UserCommNotifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserCommNotifyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCommNotifyRequest* internal_default_instance() {
    return reinterpret_cast<const UserCommNotifyRequest*>(
               &_UserCommNotifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UserCommNotifyRequest* other);
  friend void swap(UserCommNotifyRequest& a, UserCommNotifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCommNotifyRequest* New() const final {
    return CreateMaybeMessage<UserCommNotifyRequest>(NULL);
  }

  UserCommNotifyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCommNotifyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCommNotifyRequest& from);
  void MergeFrom(const UserCommNotifyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCommNotifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes notifyData = 3;
  bool has_notifydata() const;
  void clear_notifydata();
  static const int kNotifyDataFieldNumber = 3;
  const ::std::string& notifydata() const;
  void set_notifydata(const ::std::string& value);
  #if LANG_CXX11
  void set_notifydata(::std::string&& value);
  #endif
  void set_notifydata(const char* value);
  void set_notifydata(const void* value, size_t size);
  ::std::string* mutable_notifydata();
  ::std::string* release_notifydata();
  void set_allocated_notifydata(::std::string* notifydata);

  // optional int32 notifyMsgType = 1;
  bool has_notifymsgtype() const;
  void clear_notifymsgtype();
  static const int kNotifyMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 notifymsgtype() const;
  void set_notifymsgtype(::google::protobuf::int32 value);

  // optional int32 notifyMsgId = 2;
  bool has_notifymsgid() const;
  void clear_notifymsgid();
  static const int kNotifyMsgIdFieldNumber = 2;
  ::google::protobuf::int32 notifymsgid() const;
  void set_notifymsgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserCommNotifyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr notifydata_;
  ::google::protobuf::int32 notifymsgtype_;
  ::google::protobuf::int32 notifymsgid_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserCommNotifyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserCommNotifyResponse) */ {
 public:
  UserCommNotifyResponse();
  virtual ~UserCommNotifyResponse();

  UserCommNotifyResponse(const UserCommNotifyResponse& from);

  inline UserCommNotifyResponse& operator=(const UserCommNotifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCommNotifyResponse(UserCommNotifyResponse&& from) noexcept
    : UserCommNotifyResponse() {
    *this = ::std::move(from);
  }

  inline UserCommNotifyResponse& operator=(UserCommNotifyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserCommNotifyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCommNotifyResponse* internal_default_instance() {
    return reinterpret_cast<const UserCommNotifyResponse*>(
               &_UserCommNotifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(UserCommNotifyResponse* other);
  friend void swap(UserCommNotifyResponse& a, UserCommNotifyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCommNotifyResponse* New() const final {
    return CreateMaybeMessage<UserCommNotifyResponse>(NULL);
  }

  UserCommNotifyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCommNotifyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCommNotifyResponse& from);
  void MergeFrom(const UserCommNotifyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCommNotifyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserCommNotifyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerLoginElsewhereRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerLoginElsewhereRequest) */ {
 public:
  PlayerLoginElsewhereRequest();
  virtual ~PlayerLoginElsewhereRequest();

  PlayerLoginElsewhereRequest(const PlayerLoginElsewhereRequest& from);

  inline PlayerLoginElsewhereRequest& operator=(const PlayerLoginElsewhereRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginElsewhereRequest(PlayerLoginElsewhereRequest&& from) noexcept
    : PlayerLoginElsewhereRequest() {
    *this = ::std::move(from);
  }

  inline PlayerLoginElsewhereRequest& operator=(PlayerLoginElsewhereRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerLoginElsewhereRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoginElsewhereRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginElsewhereRequest*>(
               &_PlayerLoginElsewhereRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PlayerLoginElsewhereRequest* other);
  friend void swap(PlayerLoginElsewhereRequest& a, PlayerLoginElsewhereRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginElsewhereRequest* New() const final {
    return CreateMaybeMessage<PlayerLoginElsewhereRequest>(NULL);
  }

  PlayerLoginElsewhereRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLoginElsewhereRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerLoginElsewhereRequest& from);
  void MergeFrom(const PlayerLoginElsewhereRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLoginElsewhereRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional int32 reason = 1;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerLoginElsewhereRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 reason_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerLoginElsewhereResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerLoginElsewhereResponse) */ {
 public:
  PlayerLoginElsewhereResponse();
  virtual ~PlayerLoginElsewhereResponse();

  PlayerLoginElsewhereResponse(const PlayerLoginElsewhereResponse& from);

  inline PlayerLoginElsewhereResponse& operator=(const PlayerLoginElsewhereResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginElsewhereResponse(PlayerLoginElsewhereResponse&& from) noexcept
    : PlayerLoginElsewhereResponse() {
    *this = ::std::move(from);
  }

  inline PlayerLoginElsewhereResponse& operator=(PlayerLoginElsewhereResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerLoginElsewhereResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoginElsewhereResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginElsewhereResponse*>(
               &_PlayerLoginElsewhereResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PlayerLoginElsewhereResponse* other);
  friend void swap(PlayerLoginElsewhereResponse& a, PlayerLoginElsewhereResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginElsewhereResponse* New() const final {
    return CreateMaybeMessage<PlayerLoginElsewhereResponse>(NULL);
  }

  PlayerLoginElsewhereResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLoginElsewhereResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerLoginElsewhereResponse& from);
  void MergeFrom(const PlayerLoginElsewhereResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLoginElsewhereResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerLoginElsewhereResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerUpgradeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerUpgradeRequest) */ {
 public:
  PlayerUpgradeRequest();
  virtual ~PlayerUpgradeRequest();

  PlayerUpgradeRequest(const PlayerUpgradeRequest& from);

  inline PlayerUpgradeRequest& operator=(const PlayerUpgradeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerUpgradeRequest(PlayerUpgradeRequest&& from) noexcept
    : PlayerUpgradeRequest() {
    *this = ::std::move(from);
  }

  inline PlayerUpgradeRequest& operator=(PlayerUpgradeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerUpgradeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerUpgradeRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerUpgradeRequest*>(
               &_PlayerUpgradeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PlayerUpgradeRequest* other);
  friend void swap(PlayerUpgradeRequest& a, PlayerUpgradeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerUpgradeRequest* New() const final {
    return CreateMaybeMessage<PlayerUpgradeRequest>(NULL);
  }

  PlayerUpgradeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerUpgradeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerUpgradeRequest& from);
  void MergeFrom(const PlayerUpgradeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerUpgradeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 newLevel = 2;
  bool has_newlevel() const;
  void clear_newlevel();
  static const int kNewLevelFieldNumber = 2;
  ::google::protobuf::int32 newlevel() const;
  void set_newlevel(::google::protobuf::int32 value);

  // optional int64 currentExp = 3;
  bool has_currentexp() const;
  void clear_currentexp();
  static const int kCurrentExpFieldNumber = 3;
  ::google::protobuf::int64 currentexp() const;
  void set_currentexp(::google::protobuf::int64 value);

  // optional int64 upgradeExp = 4;
  bool has_upgradeexp() const;
  void clear_upgradeexp();
  static const int kUpgradeExpFieldNumber = 4;
  ::google::protobuf::int64 upgradeexp() const;
  void set_upgradeexp(::google::protobuf::int64 value);

  // optional int64 awardChips = 5;
  bool has_awardchips() const;
  void clear_awardchips();
  static const int kAwardChipsFieldNumber = 5;
  ::google::protobuf::int64 awardchips() const;
  void set_awardchips(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerUpgradeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 newlevel_;
  ::google::protobuf::int64 currentexp_;
  ::google::protobuf::int64 upgradeexp_;
  ::google::protobuf::int64 awardchips_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class PlayerUpgradeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.PlayerUpgradeResponse) */ {
 public:
  PlayerUpgradeResponse();
  virtual ~PlayerUpgradeResponse();

  PlayerUpgradeResponse(const PlayerUpgradeResponse& from);

  inline PlayerUpgradeResponse& operator=(const PlayerUpgradeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerUpgradeResponse(PlayerUpgradeResponse&& from) noexcept
    : PlayerUpgradeResponse() {
    *this = ::std::move(from);
  }

  inline PlayerUpgradeResponse& operator=(PlayerUpgradeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerUpgradeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerUpgradeResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerUpgradeResponse*>(
               &_PlayerUpgradeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PlayerUpgradeResponse* other);
  friend void swap(PlayerUpgradeResponse& a, PlayerUpgradeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerUpgradeResponse* New() const final {
    return CreateMaybeMessage<PlayerUpgradeResponse>(NULL);
  }

  PlayerUpgradeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerUpgradeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerUpgradeResponse& from);
  void MergeFrom(const PlayerUpgradeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerUpgradeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.PlayerUpgradeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserTokenLoginDcenterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserTokenLoginDcenterRequest) */ {
 public:
  UserTokenLoginDcenterRequest();
  virtual ~UserTokenLoginDcenterRequest();

  UserTokenLoginDcenterRequest(const UserTokenLoginDcenterRequest& from);

  inline UserTokenLoginDcenterRequest& operator=(const UserTokenLoginDcenterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserTokenLoginDcenterRequest(UserTokenLoginDcenterRequest&& from) noexcept
    : UserTokenLoginDcenterRequest() {
    *this = ::std::move(from);
  }

  inline UserTokenLoginDcenterRequest& operator=(UserTokenLoginDcenterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserTokenLoginDcenterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserTokenLoginDcenterRequest* internal_default_instance() {
    return reinterpret_cast<const UserTokenLoginDcenterRequest*>(
               &_UserTokenLoginDcenterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(UserTokenLoginDcenterRequest* other);
  friend void swap(UserTokenLoginDcenterRequest& a, UserTokenLoginDcenterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserTokenLoginDcenterRequest* New() const final {
    return CreateMaybeMessage<UserTokenLoginDcenterRequest>(NULL);
  }

  UserTokenLoginDcenterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserTokenLoginDcenterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserTokenLoginDcenterRequest& from);
  void MergeFrom(const UserTokenLoginDcenterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserTokenLoginDcenterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes userToken = 1;
  bool has_usertoken() const;
  void clear_usertoken();
  static const int kUserTokenFieldNumber = 1;
  const ::std::string& usertoken() const;
  void set_usertoken(const ::std::string& value);
  #if LANG_CXX11
  void set_usertoken(::std::string&& value);
  #endif
  void set_usertoken(const char* value);
  void set_usertoken(const void* value, size_t size);
  ::std::string* mutable_usertoken();
  ::std::string* release_usertoken();
  void set_allocated_usertoken(::std::string* usertoken);

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserTokenLoginDcenterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr usertoken_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// -------------------------------------------------------------------

class UserTokenLoginDcenterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LobbyMsg.UserTokenLoginDcenterResponse) */ {
 public:
  UserTokenLoginDcenterResponse();
  virtual ~UserTokenLoginDcenterResponse();

  UserTokenLoginDcenterResponse(const UserTokenLoginDcenterResponse& from);

  inline UserTokenLoginDcenterResponse& operator=(const UserTokenLoginDcenterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserTokenLoginDcenterResponse(UserTokenLoginDcenterResponse&& from) noexcept
    : UserTokenLoginDcenterResponse() {
    *this = ::std::move(from);
  }

  inline UserTokenLoginDcenterResponse& operator=(UserTokenLoginDcenterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserTokenLoginDcenterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserTokenLoginDcenterResponse* internal_default_instance() {
    return reinterpret_cast<const UserTokenLoginDcenterResponse*>(
               &_UserTokenLoginDcenterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UserTokenLoginDcenterResponse* other);
  friend void swap(UserTokenLoginDcenterResponse& a, UserTokenLoginDcenterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserTokenLoginDcenterResponse* New() const final {
    return CreateMaybeMessage<UserTokenLoginDcenterResponse>(NULL);
  }

  UserTokenLoginDcenterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserTokenLoginDcenterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserTokenLoginDcenterResponse& from);
  void MergeFrom(const UserTokenLoginDcenterResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserTokenLoginDcenterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LobbyMsg.UserTokenLoginDcenterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LobbyMsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerChipsChangeRequest

// optional int32 userId = 1;
inline bool PlayerChipsChangeRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChipsChangeRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerChipsChangeRequest::userid() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerChipsChangeRequest.userId)
  return userid_;
}
inline void PlayerChipsChangeRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerChipsChangeRequest.userId)
}

// optional int32 changeReason = 2;
inline bool PlayerChipsChangeRequest::has_changereason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChipsChangeRequest::clear_changereason() {
  changereason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerChipsChangeRequest::changereason() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerChipsChangeRequest.changeReason)
  return changereason_;
}
inline void PlayerChipsChangeRequest::set_changereason(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  changereason_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerChipsChangeRequest.changeReason)
}

// optional int64 currentChips = 3;
inline bool PlayerChipsChangeRequest::has_currentchips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerChipsChangeRequest::clear_currentchips() {
  currentchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerChipsChangeRequest::currentchips() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerChipsChangeRequest.currentChips)
  return currentchips_;
}
inline void PlayerChipsChangeRequest::set_currentchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  currentchips_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerChipsChangeRequest.currentChips)
}

// optional int64 maxChips = 4;
inline bool PlayerChipsChangeRequest::has_maxchips() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerChipsChangeRequest::clear_maxchips() {
  maxchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerChipsChangeRequest::maxchips() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerChipsChangeRequest.maxChips)
  return maxchips_;
}
inline void PlayerChipsChangeRequest::set_maxchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  maxchips_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerChipsChangeRequest.maxChips)
}

// optional int64 outChipsCount = 5;
inline bool PlayerChipsChangeRequest::has_outchipscount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerChipsChangeRequest::clear_outchipscount() {
  outchipscount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 PlayerChipsChangeRequest::outchipscount() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerChipsChangeRequest.outChipsCount)
  return outchipscount_;
}
inline void PlayerChipsChangeRequest::set_outchipscount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  outchipscount_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerChipsChangeRequest.outChipsCount)
}

// -------------------------------------------------------------------

// PlayerChipsChangeResponse

// -------------------------------------------------------------------

// PlayerCoinsChangeRequest

// optional int32 userId = 1;
inline bool PlayerCoinsChangeRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCoinsChangeRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerCoinsChangeRequest::userid() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCoinsChangeRequest.userId)
  return userid_;
}
inline void PlayerCoinsChangeRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCoinsChangeRequest.userId)
}

// optional int32 changeReason = 2;
inline bool PlayerCoinsChangeRequest::has_changereason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCoinsChangeRequest::clear_changereason() {
  changereason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerCoinsChangeRequest::changereason() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCoinsChangeRequest.changeReason)
  return changereason_;
}
inline void PlayerCoinsChangeRequest::set_changereason(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  changereason_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCoinsChangeRequest.changeReason)
}

// optional int64 currentCoins = 3;
inline bool PlayerCoinsChangeRequest::has_currentcoins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCoinsChangeRequest::clear_currentcoins() {
  currentcoins_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerCoinsChangeRequest::currentcoins() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCoinsChangeRequest.currentCoins)
  return currentcoins_;
}
inline void PlayerCoinsChangeRequest::set_currentcoins(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  currentcoins_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCoinsChangeRequest.currentCoins)
}

// -------------------------------------------------------------------

// PlayerCoinsChangeResponse

// -------------------------------------------------------------------

// PlayerCharmUpgradRequest

// optional int32 userId = 1;
inline bool PlayerCharmUpgradRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCharmUpgradRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerCharmUpgradRequest::userid() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCharmUpgradRequest.userId)
  return userid_;
}
inline void PlayerCharmUpgradRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCharmUpgradRequest.userId)
}

// optional int32 newLevel = 2;
inline bool PlayerCharmUpgradRequest::has_newlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCharmUpgradRequest::clear_newlevel() {
  newlevel_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerCharmUpgradRequest::newlevel() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCharmUpgradRequest.newLevel)
  return newlevel_;
}
inline void PlayerCharmUpgradRequest::set_newlevel(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  newlevel_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCharmUpgradRequest.newLevel)
}

// optional int64 currentCharm = 3;
inline bool PlayerCharmUpgradRequest::has_currentcharm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCharmUpgradRequest::clear_currentcharm() {
  currentcharm_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerCharmUpgradRequest::currentcharm() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCharmUpgradRequest.currentCharm)
  return currentcharm_;
}
inline void PlayerCharmUpgradRequest::set_currentcharm(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  currentcharm_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCharmUpgradRequest.currentCharm)
}

// optional int64 nextUpgradeCharm = 4;
inline bool PlayerCharmUpgradRequest::has_nextupgradecharm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerCharmUpgradRequest::clear_nextupgradecharm() {
  nextupgradecharm_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerCharmUpgradRequest::nextupgradecharm() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerCharmUpgradRequest.nextUpgradeCharm)
  return nextupgradecharm_;
}
inline void PlayerCharmUpgradRequest::set_nextupgradecharm(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  nextupgradecharm_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerCharmUpgradRequest.nextUpgradeCharm)
}

// -------------------------------------------------------------------

// PlayerCharmUpgradResponse

// -------------------------------------------------------------------

// UserBankruptRequest

// optional int32 bankruptTimes = 1;
inline bool UserBankruptRequest::has_bankrupttimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBankruptRequest::clear_bankrupttimes() {
  bankrupttimes_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 UserBankruptRequest::bankrupttimes() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserBankruptRequest.bankruptTimes)
  return bankrupttimes_;
}
inline void UserBankruptRequest::set_bankrupttimes(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  bankrupttimes_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.UserBankruptRequest.bankruptTimes)
}

// optional int64 reliefChips = 2;
inline bool UserBankruptRequest::has_reliefchips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBankruptRequest::clear_reliefchips() {
  reliefchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 UserBankruptRequest::reliefchips() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserBankruptRequest.reliefChips)
  return reliefchips_;
}
inline void UserBankruptRequest::set_reliefchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  reliefchips_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.UserBankruptRequest.reliefChips)
}

// optional int32 awardTimes = 3;
inline bool UserBankruptRequest::has_awardtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBankruptRequest::clear_awardtimes() {
  awardtimes_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 UserBankruptRequest::awardtimes() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserBankruptRequest.awardTimes)
  return awardtimes_;
}
inline void UserBankruptRequest::set_awardtimes(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  awardtimes_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.UserBankruptRequest.awardTimes)
}

// -------------------------------------------------------------------

// UserBankruptResponse

// -------------------------------------------------------------------

// UserCommNotifyRequest

// optional int32 notifyMsgType = 1;
inline bool UserCommNotifyRequest::has_notifymsgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCommNotifyRequest::clear_notifymsgtype() {
  notifymsgtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 UserCommNotifyRequest::notifymsgtype() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserCommNotifyRequest.notifyMsgType)
  return notifymsgtype_;
}
inline void UserCommNotifyRequest::set_notifymsgtype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  notifymsgtype_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.UserCommNotifyRequest.notifyMsgType)
}

// optional int32 notifyMsgId = 2;
inline bool UserCommNotifyRequest::has_notifymsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCommNotifyRequest::clear_notifymsgid() {
  notifymsgid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 UserCommNotifyRequest::notifymsgid() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserCommNotifyRequest.notifyMsgId)
  return notifymsgid_;
}
inline void UserCommNotifyRequest::set_notifymsgid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  notifymsgid_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.UserCommNotifyRequest.notifyMsgId)
}

// optional bytes notifyData = 3;
inline bool UserCommNotifyRequest::has_notifydata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCommNotifyRequest::clear_notifydata() {
  notifydata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UserCommNotifyRequest::notifydata() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserCommNotifyRequest.notifyData)
  return notifydata_.GetNoArena();
}
inline void UserCommNotifyRequest::set_notifydata(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  notifydata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LobbyMsg.UserCommNotifyRequest.notifyData)
}
#if LANG_CXX11
inline void UserCommNotifyRequest::set_notifydata(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  notifydata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LobbyMsg.UserCommNotifyRequest.notifyData)
}
#endif
inline void UserCommNotifyRequest::set_notifydata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  notifydata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LobbyMsg.UserCommNotifyRequest.notifyData)
}
inline void UserCommNotifyRequest::set_notifydata(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  notifydata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LobbyMsg.UserCommNotifyRequest.notifyData)
}
inline ::std::string* UserCommNotifyRequest::mutable_notifydata() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:LobbyMsg.UserCommNotifyRequest.notifyData)
  return notifydata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCommNotifyRequest::release_notifydata() {
  // @@protoc_insertion_point(field_release:LobbyMsg.UserCommNotifyRequest.notifyData)
  if (!has_notifydata()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return notifydata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCommNotifyRequest::set_allocated_notifydata(::std::string* notifydata) {
  if (notifydata != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  notifydata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notifydata);
  // @@protoc_insertion_point(field_set_allocated:LobbyMsg.UserCommNotifyRequest.notifyData)
}

// -------------------------------------------------------------------

// UserCommNotifyResponse

// -------------------------------------------------------------------

// PlayerLoginElsewhereRequest

// optional int32 reason = 1;
inline bool PlayerLoginElsewhereRequest::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLoginElsewhereRequest::clear_reason() {
  reason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerLoginElsewhereRequest::reason() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerLoginElsewhereRequest.reason)
  return reason_;
}
inline void PlayerLoginElsewhereRequest::set_reason(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  reason_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerLoginElsewhereRequest.reason)
}

// optional bytes description = 2;
inline bool PlayerLoginElsewhereRequest::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginElsewhereRequest::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayerLoginElsewhereRequest::description() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerLoginElsewhereRequest.description)
  return description_.GetNoArena();
}
inline void PlayerLoginElsewhereRequest::set_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerLoginElsewhereRequest.description)
}
#if LANG_CXX11
inline void PlayerLoginElsewhereRequest::set_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LobbyMsg.PlayerLoginElsewhereRequest.description)
}
#endif
inline void PlayerLoginElsewhereRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LobbyMsg.PlayerLoginElsewhereRequest.description)
}
inline void PlayerLoginElsewhereRequest::set_description(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LobbyMsg.PlayerLoginElsewhereRequest.description)
}
inline ::std::string* PlayerLoginElsewhereRequest::mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:LobbyMsg.PlayerLoginElsewhereRequest.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginElsewhereRequest::release_description() {
  // @@protoc_insertion_point(field_release:LobbyMsg.PlayerLoginElsewhereRequest.description)
  if (!has_description()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginElsewhereRequest::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:LobbyMsg.PlayerLoginElsewhereRequest.description)
}

// -------------------------------------------------------------------

// PlayerLoginElsewhereResponse

// -------------------------------------------------------------------

// PlayerUpgradeRequest

// optional int32 userId = 1;
inline bool PlayerUpgradeRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerUpgradeRequest::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PlayerUpgradeRequest::userid() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerUpgradeRequest.userId)
  return userid_;
}
inline void PlayerUpgradeRequest::set_userid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerUpgradeRequest.userId)
}

// optional int32 newLevel = 2;
inline bool PlayerUpgradeRequest::has_newlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerUpgradeRequest::clear_newlevel() {
  newlevel_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PlayerUpgradeRequest::newlevel() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerUpgradeRequest.newLevel)
  return newlevel_;
}
inline void PlayerUpgradeRequest::set_newlevel(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  newlevel_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerUpgradeRequest.newLevel)
}

// optional int64 currentExp = 3;
inline bool PlayerUpgradeRequest::has_currentexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerUpgradeRequest::clear_currentexp() {
  currentexp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 PlayerUpgradeRequest::currentexp() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerUpgradeRequest.currentExp)
  return currentexp_;
}
inline void PlayerUpgradeRequest::set_currentexp(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  currentexp_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerUpgradeRequest.currentExp)
}

// optional int64 upgradeExp = 4;
inline bool PlayerUpgradeRequest::has_upgradeexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerUpgradeRequest::clear_upgradeexp() {
  upgradeexp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 PlayerUpgradeRequest::upgradeexp() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerUpgradeRequest.upgradeExp)
  return upgradeexp_;
}
inline void PlayerUpgradeRequest::set_upgradeexp(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  upgradeexp_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerUpgradeRequest.upgradeExp)
}

// optional int64 awardChips = 5;
inline bool PlayerUpgradeRequest::has_awardchips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerUpgradeRequest::clear_awardchips() {
  awardchips_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 PlayerUpgradeRequest::awardchips() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.PlayerUpgradeRequest.awardChips)
  return awardchips_;
}
inline void PlayerUpgradeRequest::set_awardchips(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  awardchips_ = value;
  // @@protoc_insertion_point(field_set:LobbyMsg.PlayerUpgradeRequest.awardChips)
}

// -------------------------------------------------------------------

// PlayerUpgradeResponse

// -------------------------------------------------------------------

// UserTokenLoginDcenterRequest

// optional bytes userToken = 1;
inline bool UserTokenLoginDcenterRequest::has_usertoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserTokenLoginDcenterRequest::clear_usertoken() {
  usertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UserTokenLoginDcenterRequest::usertoken() const {
  // @@protoc_insertion_point(field_get:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
  return usertoken_.GetNoArena();
}
inline void UserTokenLoginDcenterRequest::set_usertoken(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  usertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
}
#if LANG_CXX11
inline void UserTokenLoginDcenterRequest::set_usertoken(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  usertoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
}
#endif
inline void UserTokenLoginDcenterRequest::set_usertoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  usertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
}
inline void UserTokenLoginDcenterRequest::set_usertoken(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  usertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
}
inline ::std::string* UserTokenLoginDcenterRequest::mutable_usertoken() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
  return usertoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserTokenLoginDcenterRequest::release_usertoken() {
  // @@protoc_insertion_point(field_release:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
  if (!has_usertoken()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return usertoken_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserTokenLoginDcenterRequest::set_allocated_usertoken(::std::string* usertoken) {
  if (usertoken != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  usertoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usertoken);
  // @@protoc_insertion_point(field_set_allocated:LobbyMsg.UserTokenLoginDcenterRequest.userToken)
}

// -------------------------------------------------------------------

// UserTokenLoginDcenterResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LobbyMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LobbyMsg::PlayerChipsChangeRequest_EnumChipChangeReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LobbyMsg::PlayerChipsChangeRequest_EnumChipChangeReason>() {
  return ::LobbyMsg::PlayerChipsChangeRequest_EnumChipChangeReason_descriptor();
}
template <> struct is_proto_enum< ::LobbyMsg::EnumKickOutReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LobbyMsg::EnumKickOutReason>() {
  return ::LobbyMsg::EnumKickOutReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_LobbyMsg_2eproto
