// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemCmd.proto

#include "SystemCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace SystemCmd {
}  // namespace SystemCmd
void InitDefaults_SystemCmd_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_SystemCmd_2eproto = nullptr;
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_SystemCmd_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_SystemCmd_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_SystemCmd_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static constexpr ::google::protobuf::Message* const* file_default_instances = NULL;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_SystemCmd_2eproto = {
  {}, AddDescriptors_SystemCmd_2eproto, "SystemCmd.proto", schemas,
  file_default_instances, TableStruct_SystemCmd_2eproto::offsets,
  file_level_metadata_SystemCmd_2eproto, 0, file_level_enum_descriptors_SystemCmd_2eproto, file_level_service_descriptors_SystemCmd_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_SystemCmd_2eproto = {
  false, InitDefaults_SystemCmd_2eproto, 
  "\n\017SystemCmd.proto\022\tSystemCmd*\332\002\n\rEnumSys"
  "temCmd\022\017\n\013CMD_UNKNOWN\020\000\022\021\n\rCMD_HEARTBEAT"
  "\020\001\022\024\n\020CMD_SESSION_OPEN\020\002\022\025\n\021CMD_SESSION_"
  "CLOSE\020\003\022\026\n\022CMD_CONNECT_FAILED\020\004\022\020\n\014CMD_C"
  "OMM_RPC\020\005\022\030\n\024CMD_SHUTDOWN_SESSION\020\006\022\026\n\022C"
  "MD_SESSION_SILENT\020\007\022\031\n\025CMD_SITE_REGISTER"
  "_BUS\020\010\022\034\n\030CMD_SITE_TO_BUS_TRANSMIT\020\t\022\034\n\030"
  "CMD_BUS_TO_SITE_TRANSMIT\020\n\022\026\n\022CMD_SESSIO"
  "N_REOPEN\020\013\022\030\n\024CMD_STREAM_OVER_CTRL\020\014\022\023\n\017"
  "CMD_MQ_TRANSMIT\020\rb\006proto3"
,
  "SystemCmd.proto", &assign_descriptors_table_SystemCmd_2eproto, 385,
};

void AddDescriptors_SystemCmd_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_SystemCmd_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_SystemCmd_2eproto = []() { AddDescriptors_SystemCmd_2eproto(); return true; }();
namespace SystemCmd {
const ::google::protobuf::EnumDescriptor* EnumSystemCmd_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_SystemCmd_2eproto);
  return file_level_enum_descriptors_SystemCmd_2eproto[0];
}
bool EnumSystemCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SystemCmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
