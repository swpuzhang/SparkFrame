// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchCmd.proto

#include "MatchCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace LoginCmd {
}  // namespace LoginCmd
void InitDefaults_MatchCmd_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_MatchCmd_2eproto = nullptr;
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_MatchCmd_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_MatchCmd_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_MatchCmd_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static constexpr ::google::protobuf::Message* const* file_default_instances = NULL;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_MatchCmd_2eproto = {
  {}, AddDescriptors_MatchCmd_2eproto, "MatchCmd.proto", schemas,
  file_default_instances, TableStruct_MatchCmd_2eproto::offsets,
  file_level_metadata_MatchCmd_2eproto, 0, file_level_enum_descriptors_MatchCmd_2eproto, file_level_service_descriptors_MatchCmd_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_MatchCmd_2eproto = {
  false, InitDefaults_MatchCmd_2eproto, 
  "\n\016MatchCmd.proto\022\010LoginCmd*u\n\014EnumLoginC"
  "md\022\r\n\tCMD_BEGIN\020\000\022\016\n\tCMD_LOGIN\020\350\007\022\024\n\017CMD"
  "_ROBOT_LOGIN\020\351\007\022\025\n\020CMD_NOTIFY_LOGIN\020\352\007\022\031"
  "\n\024CMD_USER_TOKEN_LOGIN\020\353\007b\006proto3"
,
  "MatchCmd.proto", &assign_descriptors_table_MatchCmd_2eproto, 153,
};

void AddDescriptors_MatchCmd_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_MatchCmd_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MatchCmd_2eproto = []() { AddDescriptors_MatchCmd_2eproto(); return true; }();
namespace LoginCmd {
const ::google::protobuf::EnumDescriptor* EnumLoginCmd_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_MatchCmd_2eproto);
  return file_level_enum_descriptors_MatchCmd_2eproto[0];
}
bool EnumLoginCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LoginCmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
